### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow
  id: IWebPartRow
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  langs:
  - csharp
  name: IWebPartRow
  nameWithType: IWebPartRow
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow
  type: Interface
  summary: "Definierar ett provider-gränssnitt för att ansluta två kontroller med hjälp av ett enda fält av data."
  remarks: "Det här gränssnittet är avsedd att användas med webbdelar anslutningar. I en webbdelar anslutning, två serverkontroller som finns i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zon upprätta en anslutning och dela data med en kontroll som fungerar som konsumenten och den kontroll som fungerar som en provider.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Mekanism för att dela data i en webbdelar anslutning är en instans för gränssnitt som providern fungerar för konsumenter med hjälp av en metod. För att upprätta en anslutning, måste mål och källa båda arbeta med samma gränssnittstypen för delning av data. Om konsumenten inte känner igen gränssnittstyp som skickas av providern, det är fortfarande möjligt att ansluta kontroller med hjälp av en transformator (en <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objekt) som omvandlar gränssnittet-instans som skickas av providern till en typ som kan identifieras av konsumenten.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Mer information om anslutningar finns <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>och [översikt över webbserver delar anslutningar](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       IWebPartRow gränssnittet är en providern ingår i kontrollen webbdelar som standardgränssnitt för att skapa anslutningar baserat på en datarad. Du kan också skapa anpassade gränssnitt för att använda med webbdelar anslutningar, men i många datadrivna webbprogram, är det praktiskt att skapa anslutningar baserat på ett gemensamt fält (Mer information finns i <xref:System.Web.UI.WebControls.WebParts.IWebPartField>gränssnittet), tabellen (Mer information finns i <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>interface), eller raden från datakällan.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> </xref:System.Web.UI.WebControls.WebParts.IWebPartField> I en typisk anslutning en <xref:System.Web.UI.WebControls.WebParts.WebPart>styra agerar som en provider kommer att implementera gränssnittet IWebPartRow och ange en instans av gränssnittet för konsumenter i en särskild Återanropsmetoden.</xref:System.Web.UI.WebControls.WebParts.WebPart> Providern kan till exempel implementera ett IWebPartRow gränssnitt för en rad som motsvarar en användare i din information Användartabell. En annan <xref:System.Web.UI.WebControls.WebParts.WebPart>styra agerar som en konsument definierar en särskild metod för att ta emot gränssnittet-instans kan extrahera informationen, använda den för att visa ytterligare information om att användarkonton och visa all information som rör denna användare på sidan.</xref:System.Web.UI.WebControls.WebParts.WebPart>       IWebPartRow-gränssnittet har två synliga medlemmar. Den <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A>-egenskap returnerar schemainformation om dataraden inkapslade i en <xref:System.ComponentModel.PropertyDescriptorCollection>objektet.</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> Den <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A>metoden deklarerar en metod som en implementerare (till exempel en provider-kontroll) används för att hämta instansen gränssnittet raddata när callback-metoden anropas.</xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartRow interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartRow interface, with one control acting as the provider, and the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartRow interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> method in the provider, to retrieve the actual data and write it to the page.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_327_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_327_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-vb[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_327_2.aspx)]\n [!code-cs[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_327_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified row, which the provider makes available through an instance of the IWebPartRow interface."
  syntax:
    content: public interface IWebPartRow
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  id: GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  langs:
  - csharp
  name: GetRowData(RowCallback)
  nameWithType: IWebPartRow.GetRowData(RowCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(RowCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Returnerar data för den rad som används av gränssnittet som bas för en anslutning mellan två <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller."
  remarks: "Använd den här metoden för att hämta data radvärden skickades av gränssnittet. Providern implementerar den här metoden och konsumenten anropar den vid punkten när klienten är redo att bearbeta eller återge data."
  example:
  - "The following code example shows the implementation and use of the GetRowData method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface. The provider control implements the GetRowData method, returning the value of a particular row in the data table. The consumer control calls the GetRowData method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/98668bea-41a0-4fc3-85fe-_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/98668bea-41a0-4fc3-85fe-_1.vb)]"
  syntax:
    content: public void GetRowData (System.Web.UI.WebControls.WebParts.RowCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.RowCallback
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.RowCallback&quot;> </xref> delegat som innehåller adressen till en metod som tar emot data."
  overload: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartRow.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar schemainformation för en datarad som används för att dela data mellan två <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller."
  remarks: "Den här egenskapen innehåller information om egenskaper för data. Med den <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>gränssnitt i en anslutning som du får en <xref:System.ComponentModel.PropertyDescriptorCollection>-objekt som refereras av egenskapen schemat.</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Kontraktet anger som anropar `Schema[n].GetValue(RowData)` returnerar värdet för den *n*kolumnen i raden. Du måste använda egenskapen schemat för att hämta värden i raden."
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface. The provider control implements the Schema property. Then the consumer control, in its `RenderContents` method, queries the Schema property to retrieve information about the row as it writes the row data to the page.  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_721_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_721_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> som beskriver data."
  overload: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: GetRowData(RowCallback)
  nameWithType: IWebPartRow.GetRowData(RowCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(RowCallback)
- uid: System.Web.UI.WebControls.WebParts.RowCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: RowCallback
  nameWithType: RowCallback
  fullName: System.Web.UI.WebControls.WebParts.RowCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: Schema
  nameWithType: IWebPartRow.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData*
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: GetRowData
  nameWithType: IWebPartRow.GetRowData
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: Schema
  nameWithType: IWebPartRow.Schema
