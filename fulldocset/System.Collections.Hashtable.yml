### YamlMime:ManagedReference
items:
- uid: System.Collections.Hashtable
  id: Hashtable
  children:
  - System.Collections.Hashtable.#ctor
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  - System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  - System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  - System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.Clone
  - System.Collections.Hashtable.comparer
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Hashtable.hcp
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.OnDeserialization(System.Object)
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Hashtable.Values
  langs:
  - csharp
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
  type: Class
  summary: "Representerar en samling med nyckel/värde-par som är ordnade baserat på hash-koden för nyckeln.       Om du vill bläddra .NET Framework källkoden för den här typen finns i [referenskälla](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)."
  remarks: "> [!NOTE]>.NET Framework källkoden för den här typen finns i [referenskälla](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd). Du kan bläddra igenom källkoden online, hämta referens för visning offline och gå igenom källor (inklusive korrigeringarna och programvaruuppdateringarna) vid felsökning. Se [instruktioner](http://referencesource.microsoft.com/).       Varje element är ett nyckel/värde-par som lagras i en <xref:System.Collections.DictionaryEntry>objektet.</xref:System.Collections.DictionaryEntry> En nyckel kan inte vara `null`, men kan vara ett värde.       Objekt som används som nycklar av en hash-tabell som krävs för att åsidosätta den <xref:System.Object.GetHashCode%2A?displayProperty=fullName>metod (eller <xref:System.Collections.IHashCodeProvider>interface) och <xref:System.Object.Equals%2A?displayProperty=fullName>metod (eller <xref:System.Collections.IComparer>interface).</xref:System.Collections.IComparer> </xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Collections.IHashCodeProvider> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Implementeringen av både metoder och gränssnitt måste hantera skiftlägeskänslighet på samma sätt. hash-tabellen kan annars fungerar korrekt. Till exempel när du skapar en hash-tabell, du måste använda den <xref:System.Collections.CaseInsensitiveHashCodeProvider>klass (eller någon skiftlägesokänslig <xref:System.Collections.IHashCodeProvider>implementering) med den <xref:System.Collections.CaseInsensitiveComparer>klass (eller någon skiftlägesokänslig <xref:System.Collections.IComparer>implementering).</xref:System.Collections.IComparer> </xref:System.Collections.CaseInsensitiveComparer> </xref:System.Collections.IHashCodeProvider> </xref:System.Collections.CaseInsensitiveHashCodeProvider>       Dessa metoder måste dessutom ger samma resultat när den anropas med samma parametrar när nyckeln finns i hashtabellen. Ett alternativ är att använda en hash-tabell konstruktor med en <xref:System.Collections.IEqualityComparer>parameter.</xref:System.Collections.IEqualityComparer> Om nyckeln likheten har bara referenslikheten, den ärvda implementeringen av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>och <xref:System.Object.Equals%2A?displayProperty=fullName>skulle vara tillräckligt.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Viktiga objekt måste vara ändras så länge som de används som nycklar i hash-tabellen.       När ett element läggs till hash-tabellen placeras elementet i en bucket baserat på hash-koden för nyckeln. Efterföljande sökningar av nyckeln använda hash-koden för nyckeln för att söka i endast en viss bucket, vilket avsevärt minskar antalet viktiga jämförelser som krävs för att hitta ett element.       Belastningsfaktorn av en hash-tabell anger maximalt element till buckets. Mindre belastningen faktorer orsaka snabbare genomsnittlig sökning gånger på bekostnad av ökade minnesförbrukning. Standard-belastningsfaktorn 1.0 har vanligtvis den bästa balansen mellan storlek och hastighet. En annan belastningsfaktorn kan också anges när hash-tabellen har skapats.       När läggs till i en hash-tabell, ökar den faktiska belastningsfaktorn för hash-tabellen. När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökas automatiskt antalet buckets i hashtabellen till minsta primtal som är större än två gånger det aktuella antalet buckets som hash-tabell.       Varje nyckelobjekt i hashtabellen måste ange en egen hash-funktion som kan nås genom att anropa <xref:System.Collections.Hashtable.GetHash%2A>.</xref:System.Collections.Hashtable.GetHash%2A> Men alla objekt implementerar <xref:System.Collections.IHashCodeProvider>kan skickas till en hash-konstruktor och hash-funktionen används för alla objekt i tabellen.</xref:System.Collections.IHashCodeProvider>       Antalet element hash-tabellen kan innehålla har kapacitet för en hash-tabell. Som läggs till i en hash-tabell, ökas automatiskt kapaciteten som krävs genom omfördelning.       För mycket stora Hashtable objekt du kan öka den maximala kapaciteten till 2 miljarder element på ett 64-bitars system genom att ange den `enabled` attribut för konfigurationselementet till `true` i-körningsmiljön.       Den `foreach` satsen i C#-språk (`For Each` i Visual Basic) returnerar ett objekt av typen element i mängden. Eftersom varje element i hash-tabellen är ett nyckel/värde-par, är elementtypen inte typ av nyckeln eller typ av värde. Elementtypen är i stället <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry> Till exempel: [!code-cpp [System.Collections.Hashtable_ClassExample#01](~/add/codesnippet/cpp/t-system.collections.has_1.cpp)][!code-cs[System.Collections.Hashtable_ClassExample#01](~/add/codesnippet/csharp/t-system.collections.has_1.cs)][!code-vb[System.Collections.Hashtable_ClassExample#01](~/add/codesnippet/visualbasic/t-system.collections.has_1.vb) ] den `foreach` -instruktionen är en omslutning runt uppräknaren som kan bara läsa från skriver inte i samlingen.           Eftersom serialisering och avserialisering av en uppräknare för en hash-tabell kan orsaka elementen blir ordnas om det går inte att fortsätta uppräkningen utan anropar den <xref:System.Collections.IEnumerator.Reset%2A>metoden.</xref:System.Collections.IEnumerator.Reset%2A>      > [!NOTE] > Eftersom nycklar kan ärvas och deras beteende ändras absolut ändringarna kan inte garanteras genom att jämföra med den <xref:System.Type.Equals%2A>metoden.</xref:System.Type.Equals%2A>"
  example:
  - "The following example shows how to create, initialize and perform various functions to a Hashtable and how to print out its keys and values.  \n  \n [!code-cpp[System.Collections.Hashtable_ClassExample#00](~/add/codesnippet/cpp/t-system.collections.has_2.cpp)]\n [!code-cs[System.Collections.Hashtable_ClassExample#00](~/add/codesnippet/csharp/t-system.collections.has_2.cs)]\n [!code-vb[System.Collections.Hashtable_ClassExample#00](~/add/codesnippet/visualbasic/t-system.collections.has_2.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Hashtable/HashtableDebugView))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Hashtable : ICloneable, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.ICloneable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor
  id: '#ctor'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable()
  nameWithType: Hashtable.Hashtable()
  fullName: System.Collections.Hashtable.Hashtable()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med hjälp av den inledande standardkapaciteten, läsa in faktor och hash-kod providern jämföraren."
  remarks: "Hash-tabellens kapacitet används för att beräkna det optimala antalet hash-tabellens dataområden utifrån belastningsfaktorn. Kapacitet ökas automatiskt efter behov.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den här konstruktorn är en O(1)-åtgärd."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctor#1](~/add/codesnippet/cpp/m-system.collections.has_4_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctor#1](~/add/codesnippet/csharp/m-system.collections.has_4_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctor#1](~/add/codesnippet/visualbasic/m-system.collections.has_4_1.vb)]"
  syntax:
    content: public Hashtable ();
    parameters: []
  overload: System.Collections.Hashtable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  id: '#ctor(System.Collections.IDictionary)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary)
  nameWithType: Hashtable.Hashtable(IDictionary)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen genom att kopiera elementen från den angivna ordlistan till den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt. Den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt har en inledande kapacitet som är lika med antalet element kopieras och använder standard belastningsfaktorn, hash-kod providern och jämföraren."
  remarks: "Den inledande kapaciteten har angetts till antalet element i ordlistan källa. Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Elementen i den nya <xref:System.Collections.Hashtable>sorteras i samma ordning uppräknaren går exempelkoden igenom de <xref:System.Collections.IDictionary>objekt.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Den här konstruktorn är en O (`n`) igen, där `n` är antalet element i den `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/cpp/m-system.collections.has_1_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/csharp/m-system.collections.has_1_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/visualbasic/m-system.collections.has_1_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "Den <xref:System.Collections.IDictionary>objekt att kopiera till en ny <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt.</xref:System.Collections.IDictionary>"
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med inledande standardkapaciteten och läsa in faktor och det angivna <xref:System.Collections.IEqualityComparer>objektet.</xref:System.Collections.IEqualityComparer>"
  remarks: "Hash-tabellens kapacitet används för att beräkna det optimala antalet hash-tabellens dataområden utifrån belastningsfaktorn. Kapacitet ökas automatiskt efter behov.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Den <xref:System.Collections.IEqualityComparer>objektet innehåller både hash-kod providern och jämföraren.</xref:System.Collections.IEqualityComparer> Om en <xref:System.Collections.IEqualityComparer>används i den <xref:System.Collections.Hashtable>konstruktor, objekt som används som nycklar i den <xref:System.Collections.Hashtable>objekt krävs inte för att åsidosätta den <xref:System.Object.GetHashCode%2A?displayProperty=fullName>och <xref:System.Object.Equals%2A?displayProperty=fullName>metoder.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den <xref:System.Collections.IEqualityComparer>möjliggör scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.</xref:System.Collections.IEqualityComparer>       Den här konstruktorn är en O(1)-åtgärd."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctor#1](~/add/codesnippet/cpp/m-system.collections.has_5_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctor#1](~/add/codesnippet/csharp/m-system.collections.has_5_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctor#1](~/add/codesnippet/visualbasic/m-system.collections.has_5_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "Den <xref:System.Collections.IEqualityComparer>objekt som definierar den hash-kod providern och jämföraren för att använda med den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt.</xref:System.Collections.IEqualityComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardprovidern för hash-kod och standardjämförelsefunktionen. Standardprovidern för hash-koden är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; och standardjämförelsefunktionen är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32)
  nameWithType: Hashtable.Hashtable(Int32)
  fullName: System.Collections.Hashtable.Hashtable(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med den angivna inledande kapaciteten och standard belastningsfaktorn, hash-kodprovider och jämföraren."
  remarks: "Ange den inledande kapaciteten eliminerar behovet av att genomföra ett antal storleksändringar när du lägger till element till den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den här konstruktorn är en O (`n`) igen, där `n` är `capacity`."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/cpp/m-system.collections.has_2_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/csharp/m-system.collections.has_2_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/visualbasic/m-system.collections.has_2_1.vb)]"
  syntax:
    content: public Hashtable (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Det ungefärliga antalet element som det <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -objekt kan innehålla först."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än noll."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen genom att kopiera elementen från den angivna ordlistan till en ny <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt. Den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt har en inledande kapacitet som är lika med antalet element kopieras och använder belastningsfaktorn standard och det angivna <xref:System.Collections.IEqualityComparer>objektet.</xref:System.Collections.IEqualityComparer>"
  remarks: "Den inledande kapaciteten har angetts till antalet element i ordlistan källa. Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Den <xref:System.Collections.IEqualityComparer>objektet innehåller både hash-kod providern och jämföraren.</xref:System.Collections.IEqualityComparer> Om en <xref:System.Collections.IEqualityComparer>används i den <xref:System.Collections.Hashtable>konstruktor, objekt som används som nycklar i den <xref:System.Collections.Hashtable>objekt krävs inte för att åsidosätta den <xref:System.Object.GetHashCode%2A?displayProperty=fullName>och <xref:System.Object.Equals%2A?displayProperty=fullName>metoder.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den <xref:System.Collections.IEqualityComparer>möjliggör scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.</xref:System.Collections.IEqualityComparer>       Elementen i den nya <xref:System.Collections.Hashtable>sorteras i samma ordning uppräknaren går exempelkoden igenom de <xref:System.Collections.IDictionary>objekt.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Den här konstruktorn är en O (`n`) igen, där `n` är antalet element i den `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/cpp/81cd87de-02b7-42cc-8fdd-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/csharp/81cd87de-02b7-42cc-8fdd-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/visualbasic/81cd87de-02b7-42cc-8fdd-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "Den <xref:System.Collections.IDictionary>objekt att kopiera till en ny <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt.</xref:System.Collections.IDictionary>"
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "Den <xref:System.Collections.IEqualityComparer>objekt som definierar den hash-kod providern och jämföraren för att använda med den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardprovidern för hash-kod och standardjämförelsefunktionen. Standardprovidern för hash-koden är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; och standardjämförelsefunktionen är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  id: '#ctor(System.Collections.IDictionary,System.Single)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,Single)
  nameWithType: Hashtable.Hashtable(IDictionary,Single)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen genom att kopiera elementen från den angivna ordlistan till den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt. Den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objektet har en inledande kapacitet som är lika med antalet element kopieras och använder den angivna belastningsfaktorn och standardprovidern hash-kod och jämföraren."
  remarks: "Den inledande kapaciteten har angetts till antalet element i ordlistan källa. Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning. En belastningsfaktorn 1.0 är den bästa balansen mellan hastighet och storlek.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Elementen i den nya <xref:System.Collections.Hashtable>sorteras i samma ordning uppräknaren går exempelkoden igenom de <xref:System.Collections.IDictionary>objekt.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Den här konstruktorn är en O (`n`) igen, där `n` är antalet element i den `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cs[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/csharp/fb1cfbc8-7454-4619-a6e7-_1.cs)]\n [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/cpp/fb1cfbc8-7454-4619-a6e7-_1.cpp)]\n [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/visualbasic/fb1cfbc8-7454-4619-a6e7-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, float loadFactor);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "Den <xref:System.Collections.IDictionary>objekt att kopiera till en ny <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt.</xref:System.Collections.IDictionary>"
    - id: loadFactor
      type: System.Single
      description: "En siffra mellan 0.1 via 1.0 multipliceras med standardvärdet som ger bästa prestanda. Resultatet är maximalt element till buckets."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>loadFactor</code>är mindre än 0,1.       - eller - <code>loadFactor</code> är större än 1,0."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med hjälp av standard inledande kapacitet och läsa in faktor och angivna hash-kod providern och jämföraren."
  remarks: "Hash-tabellens kapacitet används för att beräkna det optimala antalet hash-tabellens dataområden utifrån belastningsfaktorn. Kapacitet ökas automatiskt efter behov.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Anpassade hash-kod providern och jämförelsefunktionen aktivera scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.       Den här konstruktorn är en O(1)-åtgärd."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctor#1](~/add/codesnippet/cpp/1ff65986-0234-4702-94b7-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctor#1](~/add/codesnippet/csharp/1ff65986-0234-4702-94b7-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctor#1](~/add/codesnippet/visualbasic/1ff65986-0234-4702-94b7-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "Den <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> objekt som tillhandahåller hash koder för alla nycklar i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda hash-kod standardprovidern, vilket är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "Den <xref:System.Collections.IComparer>objekt som ska användas för att bestämma om två nycklar är lika.</xref:System.Collections.IComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardjämförelsefunktionen, vilket är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med hjälp av den angivna inledande kapaciteten och <xref:System.Collections.IEqualityComparer>, och standard belastningsfaktorn.</xref:System.Collections.IEqualityComparer>"
  remarks: "Ange den inledande kapaciteten eliminerar behovet av att genomföra ett antal storleksändringar när du lägger till element till den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Den <xref:System.Collections.IEqualityComparer>objektet innehåller både hash-kod providern och jämföraren.</xref:System.Collections.IEqualityComparer> Om en <xref:System.Collections.IEqualityComparer>används i den <xref:System.Collections.Hashtable>konstruktor, objekt som används som nycklar i den <xref:System.Collections.Hashtable>inte krävs för att åsidosätta den <xref:System.Object.GetHashCode%2A?displayProperty=fullName>och <xref:System.Object.Equals%2A?displayProperty=fullName>metoder.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den <xref:System.Collections.IEqualityComparer>möjliggör scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.</xref:System.Collections.IEqualityComparer>       Den här konstruktorn är en O (`n`) igen, där `n` är den `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/cpp/5067e9ac-cd98-4da8-9418-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/csharp/5067e9ac-cd98-4da8-9418-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/visualbasic/5067e9ac-cd98-4da8-9418-_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Det ungefärliga antalet element som det <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -objekt kan innehålla först."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "Den <xref:System.Collections.IEqualityComparer>objekt som definierar den hash-kod providern och jämföraren för att använda med den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardprovidern för hash-kod och standardjämförelsefunktionen. Standardprovidern för hash-koden är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; och standardjämförelsefunktionen är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än noll."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  id: '#ctor(System.Int32,System.Single)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,Single)
  nameWithType: Hashtable.Hashtable(Int32,Single)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med hjälp av den angivna inledande kapaciteten och läsa in faktor och standardprovidern hash-kod och jämföraren."
  remarks: "Ange den inledande kapaciteten eliminerar behovet av att genomföra ett antal storleksändringar när du lägger till element till den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning. En belastningsfaktorn 1.0 är den bästa balansen mellan hastighet och storlek.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den här konstruktorn är en O (`n`) igen, där `n` är den `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/cpp/m-system.collections.has_8_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/csharp/m-system.collections.has_8_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/visualbasic/m-system.collections.has_8_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, float loadFactor);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Det ungefärliga antalet element som det <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -objekt kan innehålla först."
    - id: loadFactor
      type: System.Single
      description: "En siffra mellan 0.1 via 1.0 multipliceras med standardvärdet som ger bästa prestanda. Resultatet är maximalt element till buckets."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än noll.       - eller - <code>loadFactor</code> är mindre än 0,1.       - eller - <code>loadFactor</code> är större än 1,0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>capacity</code>orsakar dataspill."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(SerializationInfo,StreamingContext)
  nameWithType: Hashtable.Hashtable(SerializationInfo,StreamingContext)
  fullName: System.Collections.Hashtable.Hashtable(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klass som kan serialiseras med det angivna <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> och <xref:System.Runtime.Serialization.StreamingContext>objekt.</xref:System.Runtime.Serialization.StreamingContext>"
  remarks: "Hash-tabellens kapacitet används för att beräkna det optimala antalet hash-tabellens dataområden utifrån belastningsfaktorn. Kapacitet ökas automatiskt efter behov.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den här konstruktorn är en O (`n`) igen, där `n` är <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>       Eftersom serialisering och avserialisering av en uppräknare för en <xref:System.Collections.Hashtable>kan orsaka elementen blir omordnas, det går inte att fortsätta uppräkningen utan anropar den <xref:System.Collections.IEnumerator.Reset%2A>metoden.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.Hashtable>"
  syntax:
    content: protected Hashtable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "En <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt som innehåller information som krävs för att serialisera den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "En <xref:System.Runtime.Serialization.StreamingContext>objekt som innehåller käll- och målservrar i den serialiserade dataströmmen som är associerade med den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen genom att kopiera elementen från den angivna ordlistan till den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt. Den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt har en inledande kapacitet som är lika med antalet element kopieras och använder belastningsfaktorn standard och den angivna hash-kodprovider och jämföraren. Detta API är föråldrad. Ett alternativ kan se &lt;xref:System.Collections.Hashtable.%23ctor%2A&gt;."
  remarks: "Den inledande kapaciteten har angetts till antalet element i ordlistan källa. Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Anpassade hash-kod providern och jämförelsefunktionen aktivera scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.       Elementen i den nya <xref:System.Collections.Hashtable>sorteras i samma ordning uppräknaren går exempelkoden igenom de <xref:System.Collections.IDictionary>objekt.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Den här konstruktorn är en O (`n`) igen, där `n` är antalet element i den `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/cpp/9a30e378-7c34-4854-b12f-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/csharp/9a30e378-7c34-4854-b12f-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/add/codesnippet/visualbasic/9a30e378-7c34-4854-b12f-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "Den <xref:System.Collections.IDictionary>objekt att kopiera till en ny <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt.</xref:System.Collections.IDictionary>"
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "Den <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> objekt som tillhandahåller hash koder för alla nycklar i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda hash-kod standardprovidern, vilket är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "Den <xref:System.Collections.IComparer>objekt som ska användas för att bestämma om två nycklar är lika.</xref:System.Collections.IComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardjämförelsefunktionen, vilket är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,Single,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,Single,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single,IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen genom att kopiera elementen från den angivna ordlistan till den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt. Den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt har en inledande kapacitet som är lika med antalet element kopieras och använder den angivna belastningsfaktorn och <xref:System.Collections.IEqualityComparer>objekt.</xref:System.Collections.IEqualityComparer>"
  remarks: "Den inledande kapaciteten har angetts till antalet element i ordlistan källa. Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning. En belastningsfaktorn 1.0 är den bästa balansen mellan hastighet och storlek.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Den <xref:System.Collections.IEqualityComparer>objektet innehåller både hash-kod providern och jämföraren.</xref:System.Collections.IEqualityComparer> Om en <xref:System.Collections.IEqualityComparer>används i den <xref:System.Collections.Hashtable>konstruktor, objekt som används som nycklar i den <xref:System.Collections.Hashtable>objekt krävs inte för att åsidosätta den <xref:System.Object.GetHashCode%2A?displayProperty=fullName>och <xref:System.Object.Equals%2A?displayProperty=fullName>metoder.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den <xref:System.Collections.IEqualityComparer>möjliggör scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.</xref:System.Collections.IEqualityComparer>       Elementen i den nya <xref:System.Collections.Hashtable>sorteras i samma ordning uppräknaren går exempelkoden igenom de <xref:System.Collections.IDictionary>objekt.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Den här konstruktorn är en O (`n`) igen, där `n` är antalet element i den `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cs[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/csharp/a92f83be-9de4-470a-8cbb-_1.cs)]\n [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/cpp/a92f83be-9de4-470a-8cbb-_1.cpp)]\n [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/visualbasic/a92f83be-9de4-470a-8cbb-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "Den <xref:System.Collections.IDictionary>objekt att kopiera till en ny <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt.</xref:System.Collections.IDictionary>"
    - id: loadFactor
      type: System.Single
      description: "En siffra mellan 0.1 via 1.0 multipliceras med standardvärdet som ger bästa prestanda. Resultatet är maximalt element till buckets."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "Den <xref:System.Collections.IEqualityComparer>objekt som definierar den hash-kod providern och jämföraren för att använda med den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardprovidern för hash-kod och standardjämförelsefunktionen. Standardprovidern för hash-koden är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; och standardjämförelsefunktionen är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>loadFactor</code>är mindre än 0,1.       - eller - <code>loadFactor</code> är större än 1,0."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med den angivna inledande kapaciteten, hash-kodprovider, jämföraren och belastningsfaktorn standard."
  remarks: "Ange den inledande kapaciteten eliminerar behovet av att genomföra ett antal storleksändringar när du lägger till element till den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Anpassade hash-kod providern och jämförelsefunktionen aktivera scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.       Den här konstruktorn är en O (`n`) igen, där `n` är den `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/cpp/2154dba0-3cc6-41f7-aa9b-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/csharp/2154dba0-3cc6-41f7-aa9b-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorInt#1](~/add/codesnippet/visualbasic/2154dba0-3cc6-41f7-aa9b-_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Det ungefärliga antalet element som det <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -objekt kan innehålla först."
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "Den <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> objekt som tillhandahåller hash koder för alla nycklar i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda hash-kod standardprovidern, vilket är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "Den <xref:System.Collections.IComparer>objekt som ska användas för att bestämma om två nycklar är lika.</xref:System.Collections.IComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardjämförelsefunktionen, vilket är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än noll."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,Single,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32,Single,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single,IEqualityComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med hjälp av angivna inledande kapacitet, belastningsfaktorn, och <xref:System.Collections.IEqualityComparer>objekt.</xref:System.Collections.IEqualityComparer>"
  remarks: "Ange den inledande kapaciteten eliminerar behovet av att genomföra ett antal storleksändringar när du lägger till element till den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning. En belastningsfaktorn 1.0 är den bästa balansen mellan hastighet och storlek.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Den <xref:System.Collections.IEqualityComparer>objektet innehåller både hash-kod providern och jämföraren.</xref:System.Collections.IEqualityComparer> Om en <xref:System.Collections.IEqualityComparer>används i den <xref:System.Collections.Hashtable>konstruktor, objekt som används som nycklar i den <xref:System.Collections.Hashtable>inte krävs för att åsidosätta den <xref:System.Object.GetHashCode%2A?displayProperty=fullName>och <xref:System.Object.Equals%2A?displayProperty=fullName>metoder.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den <xref:System.Collections.IEqualityComparer>möjliggör scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.</xref:System.Collections.IEqualityComparer>       Den här konstruktorn är en O (`n`) igen, där `n` är den `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/cpp/30b60c47-7bce-44a2-8d17-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/csharp/30b60c47-7bce-44a2-8d17-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/visualbasic/30b60c47-7bce-44a2-8d17-_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, float loadFactor, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Det ungefärliga antalet element som det <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -objekt kan innehålla först."
    - id: loadFactor
      type: System.Single
      description: "En siffra mellan 0.1 via 1.0 multipliceras med standardvärdet som ger bästa prestanda. Resultatet är maximalt element till buckets."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "Den <xref:System.Collections.IEqualityComparer>objekt som definierar den hash-kod providern och jämföraren för att använda med den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardprovidern för hash-kod och standardjämförelsefunktionen. Standardprovidern för hash-koden är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; och standardjämförelsefunktionen är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än noll.       - eller - <code>loadFactor</code> är mindre än 0,1.       - eller - <code>loadFactor</code> är större än 1,0."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen genom att kopiera elementen från den angivna ordlistan till den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt. Den nya <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt har en inledande kapacitet som är lika med antalet element som kopieras och använder den angivna belastningsfaktorn och hash-kodprovider jämföraren."
  remarks: "Den inledande kapaciteten har angetts till antalet element i ordlistan källa. Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning. En belastningsfaktorn 1.0 är den bästa balansen mellan hastighet och storlek.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Anpassade hash-kod providern och jämförelsefunktionen aktivera scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.       Elementen i den nya <xref:System.Collections.Hashtable>sorteras i samma ordning uppräknaren går exempelkoden igenom de <xref:System.Collections.IDictionary>objekt.</xref:System.Collections.IDictionary> </xref:System.Collections.Hashtable>       Den här konstruktorn är en O (`n`) igen, där `n` är antalet element i den `d` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cs[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/csharp/c67b166f-bc6a-49e5-9bd7-_1.cs)]\n [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/cpp/c67b166f-bc6a-49e5-9bd7-_1.cpp)]\n [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/add/codesnippet/visualbasic/c67b166f-bc6a-49e5-9bd7-_1.vb)]"
  syntax:
    content: public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: "Den <xref:System.Collections.IDictionary>objekt att kopiera till en ny <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objekt.</xref:System.Collections.IDictionary>"
    - id: loadFactor
      type: System.Single
      description: "En siffra mellan 0.1 via 1.0 multipliceras med standardvärdet som ger bästa prestanda. Resultatet är maximalt element till buckets."
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "Den <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> objekt som tillhandahåller hash koder för alla nycklar i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda hash-kod standardprovidern, vilket är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "Den <xref:System.Collections.IComparer>objekt som ska användas för att bestämma om två nycklar är lika.</xref:System.Collections.IComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardjämförelsefunktionen, vilket är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>loadFactor</code>är mindre än 0,1.       - eller - <code>loadFactor</code> är större än 1,0."
  platform:
  - net462
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> klassen med hjälp av den angivna inledande kapaciteten, läsa in faktor och hash-kod providern jämföraren."
  remarks: "Ange den inledande kapaciteten eliminerar behovet av att genomföra ett antal storleksändringar när du lägger till element till den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable> Kapaciteten är automatiskt ökade efter behov utifrån belastningsfaktorn.       Belastningsfaktorn är maximalt element till buckets. En mindre belastningsfaktorn innebär snabbare sökning på bekostnad av ökade minnesförbrukning. En belastningsfaktorn 1.0 är den bästa balansen mellan hastighet och storlek.       När den faktiska belastningsfaktorn når den angivna belastningsfaktorn, ökar antalet buckets automatiskt den minsta prime-värde som är större än två gånger det aktuella antalet buckets.       Hash-kod providern behörighetsbevisen hash-koder för nycklar i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> Standardprovidern för hash-koden är nyckeln implementering av <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Jämföraren avgör om två nycklar är lika. Alla nycklar i en <xref:System.Collections.Hashtable>måste vara unika.</xref:System.Collections.Hashtable> Standardjämförelsefunktionen är nyckeln implementering av <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Anpassade hash-kod providern och jämförelsefunktionen aktivera scenarier, till exempel göra sökningar med skiftlägeskänsliga strängar.       Den här konstruktorn är en O (`n`) igen, där `n` är den `capacity` parameter."
  example:
  - "The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.  \n  \n [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/cpp/86ed2545-c9ee-4654-a1a4-_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/csharp/86ed2545-c9ee-4654-a1a4-_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/add/codesnippet/visualbasic/86ed2545-c9ee-4654-a1a4-_1.vb)]"
  syntax:
    content: public Hashtable (int capacity, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Det ungefärliga antalet element som det <xref href=&quot;System.Collections.Hashtable&quot;> </xref> -objekt kan innehålla först."
    - id: loadFactor
      type: System.Single
      description: "En siffra mellan 0.1 via 1.0 multipliceras med standardvärdet som ger bästa prestanda. Resultatet är maximalt element till buckets."
    - id: hcp
      type: System.Collections.IHashCodeProvider
      description: "Den <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> objekt som tillhandahåller hash koder för alla nycklar i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda hash-kod standardprovidern, vilket är varje nyckel implementering av &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;."
    - id: comparer
      type: System.Collections.IComparer
      description: "Den <xref:System.Collections.IComparer>objekt som ska användas för att bestämma om två nycklar är lika.</xref:System.Collections.IComparer>       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardjämförelsefunktionen, vilket är varje nyckel implementering av &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Hashtable.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än noll.       - eller - <code>loadFactor</code> är mindre än 0,1.       - eller - <code>loadFactor</code> är större än 1,0."
  platform:
  - net462
- uid: System.Collections.Hashtable.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: Hashtable.Add(Object,Object)
  fullName: System.Collections.Hashtable.Add(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lägger till ett element med angiven nyckel och värde i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "En nyckel kan inte vara `null`, men kan vara ett värde.       Ett objekt som har inget samband mellan dess tillstånd och dess hash-kodvärde bör normalt inte användas som nyckel. Strängobjekt är exempelvis bättre än StringBuilder objekt för användning som nycklar.       Du kan också använda den <xref:System.Collections.Hashtable.Item%2A>egenskapen för att lägga till nya element genom att ange värdet för en nyckel som inte finns i den <xref:System.Collections.Hashtable>, till exempel `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable.Item%2A> Men om den angivna nyckeln finns redan i den <xref:System.Collections.Hashtable>, ställ det <xref:System.Collections.Hashtable.Item%2A>egenskapen skriver över det gamla värdet.</xref:System.Collections.Hashtable.Item%2A> </xref:System.Collections.Hashtable> Däremot ändrar Add-metod inte befintliga element.       Om <xref:System.Collections.Hashtable.Count%2A>är mindre än kapaciteten på den <xref:System.Collections.Hashtable>, den här metoden är en O(1) åtgärd.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable.Count%2A> Om kapaciteten måste ökas för att anpassa det nya elementet, blir den här metoden en O (`n`) igen, där `n` är <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  example:
  - "The following example shows how to add elements to the <xref:System.Collections.Hashtable>.  \n  \n [!code-cpp[Classic Hashtable.Add Example#1](~/add/codesnippet/cpp/m-system.collections.has_6_1.cpp)]\n [!code-cs[Classic Hashtable.Add Example#1](~/add/codesnippet/csharp/m-system.collections.has_6_1.cs)]\n [!code-vb[Classic Hashtable.Add Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_6_1.vb)]"
  syntax:
    content: public virtual void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Nyckeln för elementet du vill lägga till."
    - id: value
      type: System.Object
      description: "Värdet för elementet du vill lägga till. Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ett element med samma nyckel finns redan i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är skrivskyddad.       - eller - <xref href=&quot;System.Collections.Hashtable&quot;> </xref> har en fast storlek."
  platform:
  - net462
- uid: System.Collections.Hashtable.Clear
  id: Clear
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Clear()
  nameWithType: Hashtable.Clear()
  fullName: System.Collections.Hashtable.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Tar bort alla element från den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "<xref:System.Collections.Hashtable.Count%2A>är angivet till noll och släpps också referenser till andra objekt från element i mängden.</xref:System.Collections.Hashtable.Count%2A> Kapaciteten förblir oförändrad.       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  example:
  - "The following example shows how to clear the values of the <xref:System.Collections.Hashtable>.  \n  \n [!code-cpp[Classic Hashtable.Clear Example#1](~/add/codesnippet/cpp/m-system.collections.has_10_1.cpp)]\n [!code-vb[Classic Hashtable.Clear Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_10_1.vb)]\n [!code-cs[Classic Hashtable.Clear Example#1](~/add/codesnippet/csharp/m-system.collections.has_10_1.cs)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Collections.Hashtable.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är skrivskyddad."
  platform:
  - net462
- uid: System.Collections.Hashtable.Clone
  id: Clone
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Clone()
  nameWithType: Hashtable.Clone()
  fullName: System.Collections.Hashtable.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Skapar en lite kopia av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "En lite kopia av en samling kopieras endast element i mängden, om de är referenstyper eller värdetyper, men kopierar inte de objekt som referenserna refererar till. Referenserna i den nya samlingen pekar på samma objekt som refererar till i samlingen ursprungliga pekar på.       Däremot en djup kopia av en samling kopierar elementen och allt direkt eller indirekt refereras av elementen.       <xref:System.Collections.Hashtable>Klona har samma antal, samma kapacitet, samma <xref:System.Collections.IHashCodeProvider>implementeringen, och samma <xref:System.Collections.IComparer>implementering som ursprungligt <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.IComparer> </xref:System.Collections.IHashCodeProvider> </xref:System.Collections.Hashtable>       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "En lite kopia av den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Collections.Hashtable.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.comparer
  id: comparer
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: comparer
  nameWithType: Hashtable.comparer
  fullName: System.Collections.Hashtable.comparer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar eller anger den <xref:System.Collections.IComparer>ska användas för den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IComparer>"
  remarks: "Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: protected System.Collections.IComparer comparer { get; set; }
    return:
      type: System.Collections.IComparer
      description: "Den <xref:System.Collections.IComparer>ska användas för den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IComparer>"
  overload: System.Collections.Hashtable.comparer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapen har angetts till ett värde, men hash-tabellen har skapats med hjälp av en <xref:System.Collections.IEqualityComparer>.</xref:System.Collections.IEqualityComparer>"
  platform:
  - net462
- uid: System.Collections.Hashtable.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: Hashtable.Contains(Object)
  fullName: System.Collections.Hashtable.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Anger om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> innehåller en viss nyckel."
  remarks: "Innehåller implementerar <xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName>.</xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName> Den fungerar precis som <xref:System.Collections.Hashtable.ContainsKey%2A>.</xref:System.Collections.Hashtable.ContainsKey%2A>       Den här metoden är en O(1)-åtgärd.       Från och med .NET Framework 2.0 kan den här metoden använder den samling objekt <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder i `item` att avgöra om det finns objekt.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> I tidigare versioner av .NET Framework gjordes detta genom att använda den <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder för den `item` parameter på objekten i samlingen.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.  \n  \n [!code-cpp[Classic Hashtable.Contains Example#1](~/add/codesnippet/cpp/m-system.collections.has_12_1.cpp)]\n [!code-cs[Classic Hashtable.Contains Example#1](~/add/codesnippet/csharp/m-system.collections.has_12_1.cs)]\n [!code-vb[Classic Hashtable.Contains Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_12_1.vb)]"
  syntax:
    content: public virtual bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Nyckeln för att hitta i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> innehåller ett element med den angivna nyckeln, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.ContainsKey(System.Object)
  id: ContainsKey(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: ContainsKey(Object)
  nameWithType: Hashtable.ContainsKey(Object)
  fullName: System.Collections.Hashtable.ContainsKey(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Anger om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> innehåller en viss nyckel."
  remarks: "Den här metoden fungerar precis som <xref:System.Collections.Hashtable.Contains%2A>.</xref:System.Collections.Hashtable.Contains%2A>       Den här metoden är en O(1)-åtgärd.       Från och med .NET Framework 2.0 kan den här metoden använder den samling objekt <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder i `item` att avgöra om det finns objekt.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> I tidigare versioner av .NET Framework gjordes detta genom att använda den <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder för den `item` parameter på objekten i samlingen.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.  \n  \n [!code-cpp[Classic Hashtable.Contains Example#1](~/add/codesnippet/cpp/m-system.collections.has_7_1.cpp)]\n [!code-cs[Classic Hashtable.Contains Example#1](~/add/codesnippet/csharp/m-system.collections.has_7_1.cs)]\n [!code-vb[Classic Hashtable.Contains Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_7_1.vb)]"
  syntax:
    content: public virtual bool ContainsKey (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Nyckeln för att hitta i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> innehåller ett element med den angivna nyckeln, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.ContainsValue(System.Object)
  id: ContainsValue(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: ContainsValue(Object)
  nameWithType: Hashtable.ContainsValue(Object)
  fullName: System.Collections.Hashtable.ContainsValue(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Anger om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> innehåller ett specifikt värde."
  remarks: "Värdena för elementen i den <xref:System.Collections.Hashtable>jämförs med det angivna värdet med hjälp av den <xref:System.Object.Equals%2A?displayProperty=fullName>metoden.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Collections.Hashtable>       Den här metoden utförs en linjär sökning. den här metoden är därför en O (`n`) igen, där `n` är <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>       Från och med .NET Framework 2.0 kan den här metoden använder den samling objekt <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder i `item` att avgöra om det finns objekt.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> I tidigare versioner av .NET Framework gjordes detta genom att använda den <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder för den `item` parameter på objekten i samlingen.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.  \n  \n [!code-cpp[Classic Hashtable.Contains Example#1](~/add/codesnippet/cpp/m-system.collections.has_9_1.cpp)]\n [!code-cs[Classic Hashtable.Contains Example#1](~/add/codesnippet/csharp/m-system.collections.has_9_1.cs)]\n [!code-vb[Classic Hashtable.Contains Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_9_1.vb)]"
  syntax:
    content: public virtual bool ContainsValue (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Värdet för att hitta i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>. Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> innehåller ett element med det angivna <code> value </code>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.ContainsValue*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: Hashtable.CopyTo(Array,Int32)
  fullName: System.Collections.Hashtable.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Kopior av <xref href=&quot;System.Collections.Hashtable&quot;> </xref> element till en endimensionell <xref:System.Array>instans med det angivna indexet.</xref:System.Array>"
  remarks: "Elementen kopieras till <xref:System.Array>i den ordning i vilken uppräknaren går igenom <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Array>       Kopiera endast nycklar i den <xref:System.Collections.Hashtable>, Använd `Hashtable.Keys.CopyTo`.</xref:System.Collections.Hashtable>       Kopiera värdena i den <xref:System.Collections.Hashtable>, Använd `Hashtable.Values.CopyTo`.</xref:System.Collections.Hashtable>       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  example:
  - "The following example shows how to copy the list of keys or the list of values in a <xref:System.Collections.Hashtable> into a one-dimensional <xref:System.Array>.  \n  \n [!code-cs[Classic Hashtable.CopyTo Example#1](~/add/codesnippet/csharp/m-system.collections.has_0_1.cs)]\n [!code-vb[Classic Hashtable.CopyTo Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_0_1.vb)]\n [!code-cpp[Classic Hashtable.CopyTo Example#1](~/add/codesnippet/cpp/m-system.collections.has_0_1.cpp)]"
  syntax:
    content: public virtual void CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: "Den endimensionell <xref:System.Array>som är mål för den <xref:System.Collections.DictionaryEntry>objekten som kopierats från <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.DictionaryEntry> </xref:System.Array> Den <xref:System.Array>måste ha Nollbaserad indexering.</xref:System.Array>"
    - id: arrayIndex
      type: System.Int32
      description: "Det nollbaserade indexet i `array` vilka kopiera börjar."
  overload: System.Collections.Hashtable.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>arrayIndex</code>är mindre än noll."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>är multidimensionell.       - eller - antalet element i källan <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är större än det tillgängliga utrymmet från <code>arrayIndex</code> till slutet av destinationen <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ av källan <xref href=&quot;System.Collections.Hashtable&quot;> </xref> kan inte omvandlas automatiskt till typ av målet <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Hashtable.Count
  id: Count
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Count
  nameWithType: Hashtable.Count
  fullName: System.Collections.Hashtable.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar antalet nyckel/värde-par som ingår i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "Antalet nyckel/värde-par som ingår i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Collections.Hashtable.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.EqualityComparer
  id: EqualityComparer
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: EqualityComparer
  nameWithType: Hashtable.EqualityComparer
  fullName: System.Collections.Hashtable.EqualityComparer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar den <xref:System.Collections.IEqualityComparer>ska användas för den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>"
  remarks: "Den <xref:System.Collections.IEqualityComparer>innehåller både jämföraren och hash-kod providern.</xref:System.Collections.IEqualityComparer> Om en <xref:System.Collections.IEqualityComparer>används i den <xref:System.Collections.Hashtable>konstruktor, objekt som används som nycklar i den <xref:System.Collections.Hashtable>inte krävs för att åsidosätta den <xref:System.Object.GetHashCode%2A?displayProperty=fullName>och <xref:System.Object.Equals%2A?displayProperty=fullName>metoder.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.IEqualityComparer>       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: protected System.Collections.IEqualityComparer EqualityComparer { get; }
    return:
      type: System.Collections.IEqualityComparer
      description: "Den <xref:System.Collections.IEqualityComparer>ska användas för den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Hashtable.EqualityComparer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapen har angetts till ett värde, men hash-tabellen har skapats med en <xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> och <xref:System.Collections.IComparer>.</xref:System.Collections.IComparer>"
  platform:
  - net462
- uid: System.Collections.Hashtable.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Hashtable.GetEnumerator()
  fullName: System.Collections.Hashtable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Returnerar en <xref:System.Collections.IDictionaryEnumerator>som går igenom den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "[Visual Basic och C#]       Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare.  Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. <xref:System.Collections.IEnumerator.Reset%2A>medför också uppräknaren tillbaka till den här positionen.</xref:System.Collections.IEnumerator.Reset%2A>  I den här positionen <xref:System.Collections.IEnumerator.Current%2A>är odefinierad.</xref:System.Collections.IEnumerator.Current%2A> Därför måste du anropa <xref:System.Collections.IEnumerator.MoveNext%2A>att avancera uppräknaren till det första elementet i mängden innan du läser värdet för <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kallas.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Anger <xref:System.Collections.IEnumerator.Current%2A>till nästa element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Om <xref:System.Collections.IEnumerator.MoveNext%2A>passerar slutet på mängden uppräknaren är placerad efter det sista elementet i mängden och <xref:System.Collections.IEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> När uppräknaren är på denna position efterföljande anrop till <xref:System.Collections.IEnumerator.MoveNext%2A>också returnera `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Collections.IEnumerator.MoveNext%2A>returnerade `false`, <xref:System.Collections.IEnumerator.Current%2A>är odefinierad.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Ange <xref:System.Collections.IEnumerator.Current%2A>att det första elementet i mängden igen, kan du anropa <xref:System.Collections.IEnumerator.Reset%2A>följt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren blir inaktuella och sitt beteende är odefinierad.       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en säker tråd-procedur.  Om du vill garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkningen.  Om du vill tillåta en samling som ska användas av flera trådar för läsning och skrivning, måste du implementera ditt eget synkronisering.       Den här metoden är en O(1)-åtgärd.       Eftersom serialisering och avserialisering av en uppräknare för en <xref:System.Collections.Hashtable>kan orsaka elementen blir omordnas, det går inte att fortsätta uppräkningen utan anropar den <xref:System.Collections.IEnumerator.Reset%2A>metoden.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.Hashtable>"
  example:
  - "The following example compares the use of GetEnumerator and `foreach` to enumerate the contents of a <xref:System.Collections.Hashtable>.  \n  \n [!code-cpp[Classic Hashtable Example#2](~/add/codesnippet/cpp/m-system.collections.has_3_1.cpp)]\n [!code-cs[Classic Hashtable Example#2](~/add/codesnippet/csharp/m-system.collections.has_3_1.cs)]\n [!code-vb[Classic Hashtable Example#2](~/add/codesnippet/visualbasic/m-system.collections.has_3_1.vb)]"
  syntax:
    content: public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for the <xref href=&quot;System.Collections.Hashtable&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Hashtable.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.GetHash(System.Object)
  id: GetHash(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: GetHash(Object)
  nameWithType: Hashtable.GetHash(Object)
  fullName: System.Collections.Hashtable.GetHash(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Returnerar hash-koden för den angivna nyckeln."
  remarks: "Om hash-tabellen har skapats med en specifik <xref:System.Collections.IHashCodeProvider>-implementering måste den här metoden använder hash-kod providern, annars används den <xref:System.Object.GetHashCode%2A?displayProperty=fullName>implementeringen av `key`.</xref:System.Object.GetHashCode%2A?displayProperty=fullName> </xref:System.Collections.IHashCodeProvider>       Den här metoden är en O(1)-åtgärd."
  syntax:
    content: protected virtual int GetHash (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Den <xref:System.Object>för som en Hashkod som ska returneras.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Hash-koden för <code> key </code>."
  overload: System.Collections.Hashtable.GetHash*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Hashtable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Hashtable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Implementerar den <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> gränssnitt och returnerar de data som behövs för att serialisera den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "En <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt som innehåller information som krävs för att serialisera den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "En <xref:System.Runtime.Serialization.StreamingContext>objekt som innehåller käll- och målservrar i den serialiserade dataströmmen som är associerade med den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Hashtable.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Samlingen har ändrats."
  platform:
  - net462
- uid: System.Collections.Hashtable.hcp
  id: hcp
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: hcp
  nameWithType: Hashtable.hcp
  fullName: System.Collections.Hashtable.hcp
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar eller anger det objekt som kan fördela hash-koder."
  remarks: "Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: protected System.Collections.IHashCodeProvider hcp { get; set; }
    return:
      type: System.Collections.IHashCodeProvider
      description: "Det objekt som kan fördela hash-koder."
  overload: System.Collections.Hashtable.hcp*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapen har angetts till ett värde, men hash-tabellen har skapats med hjälp av en <xref:System.Collections.IEqualityComparer>.</xref:System.Collections.IEqualityComparer>"
  platform:
  - net462
- uid: System.Collections.Hashtable.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: Hashtable.IsFixedSize
  fullName: System.Collections.Hashtable.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> har en fast storlek."
  remarks: "En samling med en fast storlek kan inte tillägg eller borttagning av element när samlingen har skapats, men det gör ändringar av befintliga element.       En samling med en fast storlek är helt enkelt en samling med en wrapper som förhindrar att lägga till och ta bort element. därför visar ändringar har gjorts i den underliggande mängden, inklusive tillägg eller borttagning av element, ändringarna på samlingen fast storlek.       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: public virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> har en fast storlek, i annat fall <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: Hashtable.IsReadOnly
  fullName: System.Collections.Hashtable.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är skrivskyddad."
  remarks: "En samling som är skrivskyddat tillåter inte att tillägg, borttagning eller ändring av element när samlingen har skapats.       En samling som är skrivskyddad är helt enkelt en samling med en wrapper som förhindrar att ändra samlingen; Om ändringar görs i den underliggande mängden visar därför skrivskyddad samling ändringarna.       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är skrivskyddad, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: Hashtable.IsSynchronized
  fullName: System.Collections.Hashtable.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar ett värde som anger om åtkomst till den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är synkroniserade (trådsäkra)."
  remarks: "En <xref:System.Collections.Hashtable>kan stödja en skrivare och flera läsare samtidigt.</xref:System.Collections.Hashtable> För att stödja flera skrivare, måste alla åtgärder utföras via adapterprogram returneras av den <xref:System.Collections.Hashtable.Synchronized%2A>metoden.</xref:System.Collections.Hashtable.Synchronized%2A>       Uppräkning av en samling är är inte en säker tråd-procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.       Följande kodexempel visar hur du låser en samling med hjälp av den <xref:System.Collections.Hashtable.SyncRoot%2A>under hela uppräkningen: [!code-cpp [klassiska Hashtable.IsSynchronized exempel&#2;](~/add/codesnippet/cpp/p-system.collections.has_1_1.cpp)][!code-vb[klassiska Hashtable.IsSynchronized exempel&#2;](~/add/codesnippet/visualbasic/p-system.collections.has_1_1.vb)][!code-cs[klassiska Hashtable.IsSynchronized exempel&#2;](~/add/codesnippet/csharp/p-system.collections.has_1_1.cs) ]     </xref:System.Collections.Hashtable.SyncRoot%2A>"
  example:
  - "The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.  \n  \n [!code-cs[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/csharp/p-system.collections.has_1_2.cs)]\n [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/cpp/p-system.collections.has_1_2.cpp)]\n [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/visualbasic/p-system.collections.has_1_2.vb)]"
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om åtkomst till den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är synkroniserade (trådsäkra); annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Hashtable.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Item(Object)
  nameWithType: Hashtable.Item(Object)
  fullName: System.Collections.Hashtable.Item(Object)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar eller anger det värde som är associerade med den angivna nyckeln."
  remarks: "Den här egenskapen ger möjlighet att komma åt ett visst element i samlingen med följande syntax: `myCollection[key]`.       Du kan också använda egenskapen Item att lägga till nya element genom att ange värdet för en nyckel som inte finns i den <xref:System.Collections.Hashtable>, till exempel `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Hashtable> Men om den angivna nyckeln finns redan i den <xref:System.Collections.Hashtable>, ställa in egenskapen Item skriver över det gamla värdet.</xref:System.Collections.Hashtable> Däremot den <xref:System.Collections.Hashtable.Add%2A>metoden ändras inte befintliga element.</xref:System.Collections.Hashtable.Add%2A>       En nyckel kan inte vara `null`, men kan vara ett värde. För att särskilja `null` som returneras eftersom det gick inte att hitta den angivna nyckeln och `null` som returneras eftersom värdet för den angivna nyckeln är `null`, använda den <xref:System.Collections.Hashtable.Contains%2A>metoden eller <xref:System.Collections.Hashtable.ContainsKey%2A>metod för att bestämma om nyckeln finns i listan.</xref:System.Collections.Hashtable.ContainsKey%2A> </xref:System.Collections.Hashtable.Contains%2A>       Hämtar värdet för den här egenskapen är O(1) åtgärd. Egenskapen är också en O(1)-åtgärd.       Nyckelordet används i C#-språk för att definiera indexerare i stället för att implementera den <xref:System.Collections.IList.Item%2A>egenskapen.</xref:System.Collections.IList.Item%2A> Visual Basic implementerar objektet som en default-egenskap som innehåller samma funktion för indexering."
  syntax:
    content: public virtual object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "Nyckeln vars värde ska hämta eller ange."
    return:
      type: System.Object
      description: "Det värde som är associerade med den angivna nyckeln. Om den angivna nyckeln inte finns, försök att hämta den returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, och försök att ange den skapar ett nytt element med den angivna nyckeln."
  overload: System.Collections.Hashtable.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Egenskapen har angetts och <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är skrivskyddad.       - eller - egenskapen anges, <code> key </code> finns inte i samlingen, och <xref href=&quot;System.Collections.Hashtable&quot;> </xref> har en fast storlek."
  platform:
  - net462
- uid: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  id: KeyEquals(System.Object,System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: KeyEquals(Object,Object)
  nameWithType: Hashtable.KeyEquals(Object,Object)
  fullName: System.Collections.Hashtable.KeyEquals(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Jämför en specifik <xref:System.Object>med en viss nyckel i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Object>"
  remarks: "Om hash-tabellen har skapats med en specifik <xref:System.Collections.IComparer>-implementering måste den här metoden använder jämföraren; som är, <xref:System.Collections.IComparer.Compare%2A>(`item`, `key`).</xref:System.Collections.IComparer.Compare%2A> </xref:System.Collections.IComparer> I annat fall används `item.Equals(key)`.       Den här metoden är en O(1)-åtgärd."
  syntax:
    content: protected virtual bool KeyEquals (object item, object key);
    parameters:
    - id: item
      type: System.Object
      description: "Den <xref:System.Object>att jämföra med `key`.</xref:System.Object>"
    - id: key
      type: System.Object
      description: "Nyckeln i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> att jämföra med `item`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>item</code> and <code>key</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Hashtable.KeyEquals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.Keys
  id: Keys
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Keys
  nameWithType: Hashtable.Keys
  fullName: System.Collections.Hashtable.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar en <xref:System.Collections.ICollection>som innehåller nycklar i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Ordningen på nycklarna i de <xref:System.Collections.ICollection>har inte angetts, men det är samma ordning som de associerade värdena i den <xref:System.Collections.ICollection>returneras av den <xref:System.Collections.Hashtable.Values%2A>metoden.</xref:System.Collections.Hashtable.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       Den returnerade <xref:System.Collections.ICollection>är inte en statisk kopia; i stället <xref:System.Collections.ICollection>refererar tillbaka till nycklarna i ursprungligt <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Därför ändras <xref:System.Collections.Hashtable>fortsätter att återspeglas i <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Hashtable>       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: public virtual System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "En <xref:System.Collections.ICollection>som innehåller nycklar i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Hashtable.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: OnDeserialization(Object)
  nameWithType: Hashtable.OnDeserialization(Object)
  fullName: System.Collections.Hashtable.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Implementerar den <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> gränssnitt och aktiverar händelsen deserialisering när deserialiseringen är klar."
  remarks: "Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Hashtable.Count%2A>.</xref:System.Collections.Hashtable.Count%2A>       Eftersom serialisering och avserialisering av en uppräknare för en <xref:System.Collections.Hashtable>kan orsaka elementen blir omordnas, det går inte att fortsätta uppräkningen utan anropar den <xref:System.Collections.IEnumerator.Reset%2A>metoden.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.Hashtable>"
  syntax:
    content: public virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "Källan för händelsen deserialisering."
  overload: System.Collections.Hashtable.OnDeserialization*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt som är associerade med aktuellt <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är ogiltig."
  platform:
  - net462
- uid: System.Collections.Hashtable.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: Hashtable.Remove(Object)
  fullName: System.Collections.Hashtable.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Tar bort elementet med den angivna nyckeln från den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Om den <xref:System.Collections.Hashtable>inte innehåller ett element med den angivna nyckeln i <xref:System.Collections.Hashtable>förblir oförändrad.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> Inget undantag genereras.       Den här metoden är en O(1)-åtgärd."
  example:
  - "The following example shows how to remove elements from the <xref:System.Collections.Hashtable>.  \n  \n [!code-cpp[Classic Hashtable.Remove Example#1](~/add/codesnippet/cpp/m-system.collections.has_13_1.cpp)]\n [!code-cs[Classic Hashtable.Remove Example#1](~/add/codesnippet/csharp/m-system.collections.has_13_1.cs)]\n [!code-vb[Classic Hashtable.Remove Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_13_1.vb)]"
  syntax:
    content: public virtual void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Nyckeln för elementet du vill ta bort."
  overload: System.Collections.Hashtable.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> är skrivskyddad.       - eller - <xref href=&quot;System.Collections.Hashtable&quot;> </xref> har en fast storlek."
  platform:
  - net462
- uid: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  id: Synchronized(System.Collections.Hashtable)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Synchronized(Hashtable)
  nameWithType: Hashtable.Synchronized(Hashtable)
  fullName: System.Collections.Hashtable.Synchronized(Hashtable)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Returnerar en synkroniserade (trådsäkra) Omslutning för det <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Synchronized-metoden är trådsäkra för flera läsare och skrivare. Dessutom säkerställer synkroniserade wrapper att endast en skrivare skrivning i taget.       Uppräkning av en samling är är inte en trådsäker procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.       Följande kodexempel visar hur du låser en samling med hjälp av den <xref:System.Collections.Hashtable.SyncRoot%2A>under hela uppräkningen: [!code-cpp [klassiska Hashtable.IsSynchronized exempel&#2;](~/add/codesnippet/cpp/m-system.collections.has_11_1.cpp)][!code-vb[klassiska Hashtable.IsSynchronized exempel&#2;](~/add/codesnippet/visualbasic/m-system.collections.has_11_1.vb)][!code-cs[klassiska Hashtable.IsSynchronized exempel&#2;](~/add/codesnippet/csharp/m-system.collections.has_11_1.cs) ] den här metoden är en O(1) åtgärd.    </xref:System.Collections.Hashtable.SyncRoot%2A>"
  example:
  - "The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.  \n  \n [!code-cs[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/csharp/m-system.collections.has_11_2.cs)]\n [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/cpp/m-system.collections.has_11_2.cpp)]\n [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/add/codesnippet/visualbasic/m-system.collections.has_11_2.vb)]"
  syntax:
    content: public static System.Collections.Hashtable Synchronized (System.Collections.Hashtable table);
    parameters:
    - id: table
      type: System.Collections.Hashtable
      description: "Den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> att synkronisera."
    return:
      type: System.Collections.Hashtable
      description: "En synkroniseras (trådsäkra) Omslutning för det <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Collections.Hashtable.Synchronized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>table</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Hashtable.SyncRoot
  id: SyncRoot
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: SyncRoot
  nameWithType: Hashtable.SyncRoot
  fullName: System.Collections.Hashtable.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar ett objekt som kan användas för att synkronisera åtkomst till den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  remarks: "Så här skapar du en synkroniserade version av den <xref:System.Collections.Hashtable>, använda den <xref:System.Collections.Hashtable.Synchronized%2A>metoden.</xref:System.Collections.Hashtable.Synchronized%2A> </xref:System.Collections.Hashtable> Härledda klasser kan dock ge sina egna synkroniserade versionen av den <xref:System.Collections.Hashtable>med egenskapen SyncRoot.</xref:System.Collections.Hashtable> Synkronisera kod måste utföra åtgärder på SyncRoot av den <xref:System.Collections.Hashtable>, inte direkt på <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> Detta säkerställer att samlingar som är härledda från andra objekt ska fungera korrekt. Mer specifikt den upprätthåller rätt synkronisering med andra trådar samtidigt ändra den <xref:System.Collections.Hashtable>objekt.</xref:System.Collections.Hashtable>       Uppräkning av en samling är är inte en säker tråd-procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.       Följande kodexempel visar hur du låsa den samling som använder SyncRoot under hela uppräkningen: [!code-cpp [klassiska Hashtable.IsSynchronized exempel&#2;](~/add/codesnippet/cpp/p-system.collections.has_0_1.cpp)][!code-vb[klassiska Hashtable.IsSynchronized exempel&#2;](~/add/codesnippet/visualbasic/p-system.collections.has_0_1.vb)][!code-cs[klassiska Hashtable.IsSynchronized exempel nr&2;    ](~/add/codesnippet/csharp/p-system.collections.has_0_1.cs)]"
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "Ett objekt som kan användas för att synkronisera åtkomst till den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>."
  overload: System.Collections.Hashtable.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Hashtable.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Returnerar en uppräknare upprepas i en samling."
  remarks: "[Visual Basic och C#]       Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare.  Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. <xref:System.Collections.IEnumerator.Reset%2A>medför också uppräknaren tillbaka till den här positionen.</xref:System.Collections.IEnumerator.Reset%2A> AT detta position, anropar <xref:System.Collections.IEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.IEnumerator.Current%2A> Därför måste du anropa <xref:System.Collections.IEnumerator.MoveNext%2A>att avancera uppräknaren till det första elementet i mängden innan du läser värdet för <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kallas.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Anger <xref:System.Collections.IEnumerator.Current%2A>till nästa element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Om <xref:System.Collections.IEnumerator.MoveNext%2A>passerar slutet på mängden uppräknaren är placerad efter det sista elementet i mängden och <xref:System.Collections.IEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> När uppräknaren är på denna position efterföljande anrop till <xref:System.Collections.IEnumerator.MoveNext%2A>också returnera `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Collections.IEnumerator.MoveNext%2A>returnerade `false`, anropa <xref:System.Collections.IEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Ange <xref:System.Collections.IEnumerator.Current%2A>att det första elementet i mängden igen, kan du anropa <xref:System.Collections.IEnumerator.Reset%2A>följt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren kan vara ogiltig och nästa anropa eller <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>genererar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Om samlingen har ändrats mellan <xref:System.Collections.IEnumerator.MoveNext%2A>och <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en säker tråd-procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.       Den här metoden är en O(1)-åtgärd."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>som kan användas för att gå igenom samlingen.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Hashtable.Values
  id: Values
  parent: System.Collections.Hashtable
  langs:
  - csharp
  name: Values
  nameWithType: Hashtable.Values
  fullName: System.Collections.Hashtable.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar en <xref:System.Collections.ICollection>som innehåller värdena i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Ordningen på värdena i den <xref:System.Collections.ICollection>har inte angetts, men det är samma ordning som de tillhörande nycklarna i de <xref:System.Collections.ICollection>returneras av den <xref:System.Collections.Hashtable.Keys%2A>metoden.</xref:System.Collections.Hashtable.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       Den returnerade <xref:System.Collections.ICollection>är inte en statisk kopia; i stället <xref:System.Collections.ICollection>refererar tillbaka till värden i ursprungligt <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Därför ändras <xref:System.Collections.Hashtable>fortsätter att återspeglas i <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Hashtable>       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: public virtual System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "En <xref:System.Collections.ICollection>som innehåller värdena i den <xref href=&quot;System.Collections.Hashtable&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Hashtable.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Collections.Hashtable.#ctor
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable()
  nameWithType: Hashtable.Hashtable()
  fullName: System.Collections.Hashtable.Hashtable()
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary)
  nameWithType: Hashtable.Hashtable(IDictionary)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Hashtable.#ctor(System.Int32)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32)
  nameWithType: Hashtable.Hashtable(Int32)
  fullName: System.Collections.Hashtable.Hashtable(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,Single)
  nameWithType: Hashtable.Hashtable(IDictionary,Single)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IHashCodeProvider,IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,Single)
  nameWithType: Hashtable.Hashtable(Int32,Single)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single)
- uid: System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(SerializationInfo,StreamingContext)
  nameWithType: Hashtable.Hashtable(SerializationInfo,StreamingContext)
  fullName: System.Collections.Hashtable.Hashtable(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,IHashCodeProvider,IComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,Single,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,Single,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single,IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,IHashCodeProvider,IComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,Single,IEqualityComparer)
  nameWithType: Hashtable.Hashtable(Int32,Single,IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single,IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(IDictionary,Single,IHashCodeProvider,IComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  nameWithType: Hashtable.Hashtable(Int32,Single,IHashCodeProvider,IComparer)
  fullName: System.Collections.Hashtable.Hashtable(Int32,Single,IHashCodeProvider,IComparer)
- uid: System.Collections.Hashtable.Add(System.Object,System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Add(Object,Object)
  nameWithType: Hashtable.Add(Object,Object)
  fullName: System.Collections.Hashtable.Add(Object,Object)
- uid: System.Collections.Hashtable.Clear
  parent: System.Collections.Hashtable
  isExternal: false
  name: Clear()
  nameWithType: Hashtable.Clear()
  fullName: System.Collections.Hashtable.Clear()
- uid: System.Collections.Hashtable.Clone
  parent: System.Collections.Hashtable
  isExternal: false
  name: Clone()
  nameWithType: Hashtable.Clone()
  fullName: System.Collections.Hashtable.Clone()
- uid: System.Collections.Hashtable.comparer
  parent: System.Collections.Hashtable
  isExternal: false
  name: comparer
  nameWithType: Hashtable.comparer
  fullName: System.Collections.Hashtable.comparer
- uid: System.Collections.Hashtable.Contains(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Contains(Object)
  nameWithType: Hashtable.Contains(Object)
  fullName: System.Collections.Hashtable.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Hashtable.ContainsKey(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: ContainsKey(Object)
  nameWithType: Hashtable.ContainsKey(Object)
  fullName: System.Collections.Hashtable.ContainsKey(Object)
- uid: System.Collections.Hashtable.ContainsValue(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: ContainsValue(Object)
  nameWithType: Hashtable.ContainsValue(Object)
  fullName: System.Collections.Hashtable.ContainsValue(Object)
- uid: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Hashtable
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: Hashtable.CopyTo(Array,Int32)
  fullName: System.Collections.Hashtable.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Hashtable.Count
  parent: System.Collections.Hashtable
  isExternal: false
  name: Count
  nameWithType: Hashtable.Count
  fullName: System.Collections.Hashtable.Count
- uid: System.Collections.Hashtable.EqualityComparer
  parent: System.Collections.Hashtable
  isExternal: false
  name: EqualityComparer
  nameWithType: Hashtable.EqualityComparer
  fullName: System.Collections.Hashtable.EqualityComparer
- uid: System.Collections.Hashtable.GetEnumerator
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetEnumerator()
  nameWithType: Hashtable.GetEnumerator()
  fullName: System.Collections.Hashtable.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Hashtable.GetHash(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetHash(Object)
  nameWithType: Hashtable.GetHash(Object)
  fullName: System.Collections.Hashtable.GetHash(Object)
- uid: System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Hashtable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Hashtable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Collections.Hashtable.hcp
  parent: System.Collections.Hashtable
  isExternal: false
  name: hcp
  nameWithType: Hashtable.hcp
  fullName: System.Collections.Hashtable.hcp
- uid: System.Collections.Hashtable.IsFixedSize
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsFixedSize
  nameWithType: Hashtable.IsFixedSize
  fullName: System.Collections.Hashtable.IsFixedSize
- uid: System.Collections.Hashtable.IsReadOnly
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsReadOnly
  nameWithType: Hashtable.IsReadOnly
  fullName: System.Collections.Hashtable.IsReadOnly
- uid: System.Collections.Hashtable.IsSynchronized
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsSynchronized
  nameWithType: Hashtable.IsSynchronized
  fullName: System.Collections.Hashtable.IsSynchronized
- uid: System.Collections.Hashtable.Item(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Item(Object)
  nameWithType: Hashtable.Item(Object)
  fullName: System.Collections.Hashtable.Item(Object)
- uid: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: KeyEquals(Object,Object)
  nameWithType: Hashtable.KeyEquals(Object,Object)
  fullName: System.Collections.Hashtable.KeyEquals(Object,Object)
- uid: System.Collections.Hashtable.Keys
  parent: System.Collections.Hashtable
  isExternal: false
  name: Keys
  nameWithType: Hashtable.Keys
  fullName: System.Collections.Hashtable.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Hashtable.OnDeserialization(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: Hashtable.OnDeserialization(Object)
  fullName: System.Collections.Hashtable.OnDeserialization(Object)
- uid: System.Collections.Hashtable.Remove(System.Object)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Remove(Object)
  nameWithType: Hashtable.Remove(Object)
  fullName: System.Collections.Hashtable.Remove(Object)
- uid: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  parent: System.Collections.Hashtable
  isExternal: false
  name: Synchronized(Hashtable)
  nameWithType: Hashtable.Synchronized(Hashtable)
  fullName: System.Collections.Hashtable.Synchronized(Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections.Hashtable.SyncRoot
  parent: System.Collections.Hashtable
  isExternal: false
  name: SyncRoot
  nameWithType: Hashtable.SyncRoot
  fullName: System.Collections.Hashtable.SyncRoot
- uid: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Hashtable
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Hashtable.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Hashtable.Values
  parent: System.Collections.Hashtable
  isExternal: false
  name: Values
  nameWithType: Hashtable.Values
  fullName: System.Collections.Hashtable.Values
- uid: System.Collections.Hashtable.#ctor*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable.Hashtable
- uid: System.Collections.Hashtable.Add*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Add
  nameWithType: Hashtable.Add
- uid: System.Collections.Hashtable.Clear*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Clear
  nameWithType: Hashtable.Clear
- uid: System.Collections.Hashtable.Clone*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Clone
  nameWithType: Hashtable.Clone
- uid: System.Collections.Hashtable.comparer*
  parent: System.Collections.Hashtable
  isExternal: false
  name: comparer
  nameWithType: Hashtable.comparer
- uid: System.Collections.Hashtable.Contains*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Contains
  nameWithType: Hashtable.Contains
- uid: System.Collections.Hashtable.ContainsKey*
  parent: System.Collections.Hashtable
  isExternal: false
  name: ContainsKey
  nameWithType: Hashtable.ContainsKey
- uid: System.Collections.Hashtable.ContainsValue*
  parent: System.Collections.Hashtable
  isExternal: false
  name: ContainsValue
  nameWithType: Hashtable.ContainsValue
- uid: System.Collections.Hashtable.CopyTo*
  parent: System.Collections.Hashtable
  isExternal: false
  name: CopyTo
  nameWithType: Hashtable.CopyTo
- uid: System.Collections.Hashtable.Count*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Count
  nameWithType: Hashtable.Count
- uid: System.Collections.Hashtable.EqualityComparer*
  parent: System.Collections.Hashtable
  isExternal: false
  name: EqualityComparer
  nameWithType: Hashtable.EqualityComparer
- uid: System.Collections.Hashtable.GetEnumerator*
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetEnumerator
  nameWithType: Hashtable.GetEnumerator
- uid: System.Collections.Hashtable.GetHash*
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetHash
  nameWithType: Hashtable.GetHash
- uid: System.Collections.Hashtable.GetObjectData*
  parent: System.Collections.Hashtable
  isExternal: false
  name: GetObjectData
  nameWithType: Hashtable.GetObjectData
- uid: System.Collections.Hashtable.hcp*
  parent: System.Collections.Hashtable
  isExternal: false
  name: hcp
  nameWithType: Hashtable.hcp
- uid: System.Collections.Hashtable.IsFixedSize*
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsFixedSize
  nameWithType: Hashtable.IsFixedSize
- uid: System.Collections.Hashtable.IsReadOnly*
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsReadOnly
  nameWithType: Hashtable.IsReadOnly
- uid: System.Collections.Hashtable.IsSynchronized*
  parent: System.Collections.Hashtable
  isExternal: false
  name: IsSynchronized
  nameWithType: Hashtable.IsSynchronized
- uid: System.Collections.Hashtable.Item*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Item
  nameWithType: Hashtable.Item
- uid: System.Collections.Hashtable.KeyEquals*
  parent: System.Collections.Hashtable
  isExternal: false
  name: KeyEquals
  nameWithType: Hashtable.KeyEquals
- uid: System.Collections.Hashtable.Keys*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Keys
  nameWithType: Hashtable.Keys
- uid: System.Collections.Hashtable.OnDeserialization*
  parent: System.Collections.Hashtable
  isExternal: false
  name: OnDeserialization
  nameWithType: Hashtable.OnDeserialization
- uid: System.Collections.Hashtable.Remove*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Remove
  nameWithType: Hashtable.Remove
- uid: System.Collections.Hashtable.Synchronized*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Synchronized
  nameWithType: Hashtable.Synchronized
- uid: System.Collections.Hashtable.SyncRoot*
  parent: System.Collections.Hashtable
  isExternal: false
  name: SyncRoot
  nameWithType: Hashtable.SyncRoot
- uid: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Hashtable
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Hashtable.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Hashtable.Values*
  parent: System.Collections.Hashtable
  isExternal: false
  name: Values
  nameWithType: Hashtable.Values
