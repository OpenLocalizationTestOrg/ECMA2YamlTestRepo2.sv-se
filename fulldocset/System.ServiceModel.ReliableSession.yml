### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ReliableSession
  id: ReliableSession
  children:
  - System.ServiceModel.ReliableSession.#ctor
  - System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  - System.ServiceModel.ReliableSession.InactivityTimeout
  - System.ServiceModel.ReliableSession.Ordered
  langs:
  - csharp
  name: ReliableSession
  nameWithType: ReliableSession
  fullName: System.ServiceModel.ReliableSession
  type: Class
  summary: "Ger åtkomst till egenskaperna för en tillförlitlig session bindningselement som är tillgängliga när du använder en av de angivna system bindningarna."
  remarks: "Egenskaper som ingår i klassen ReliableSession är en delmängd av dem som finns i den <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>som är tillgängliga från en fördefinierad bindning.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement> Den här delmängden består av de <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>och <xref:System.ServiceModel.ReliableSession.Ordered%2A>Egenskaper.</xref:System.ServiceModel.ReliableSession.Ordered%2A> </xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> Klassen ReliableSession refererar till samma objekt som innehåller den <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, så ändrar du värdet för en ändras värdet för den andra för.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement> Den här klassen samlar in de här två egenskaperna för tillförlitlig session bindningselement tillsammans för bättre synlighet."
  example:
  - "The following example shows how to create a new reliable session, and access and change the property values of that session. The ReliableSession class allows you to write:  \n  \n [!code-cs[UEReliableSession#1](~/add/codesnippet/csharp/t-system.servicemodel.re_0_1.cs)]\n [!code-vb[UEReliableSession#1](~/add/codesnippet/visualbasic/t-system.servicemodel.re_0_1.vb)]"
  syntax:
    content: public class ReliableSession
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: ReliableSession()
  nameWithType: ReliableSession.ReliableSession()
  fullName: System.ServiceModel.ReliableSession.ReliableSession()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initierar en ny instans av den <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> klass."
  syntax:
    content: public ReliableSession ();
    parameters: []
  overload: System.ServiceModel.ReliableSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  id: '#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)'
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: ReliableSession(ReliableSessionBindingElement)
  nameWithType: ReliableSession.ReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.ReliableSession.ReliableSession(ReliableSessionBindingElement)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initierar en ny instans av den <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> klass från en tillförlitlig session bindande element."
  remarks: ''
  example:
  - >-
    [!code-cs[UEReliableSession#1](~/add/codesnippet/csharp/80f1598c-ddfc-4656-a81f-_1.cs)]
     [!code-vb[UEReliableSession#1](~/add/codesnippet/visualbasic/80f1598c-ddfc-4656-a81f-_1.vb)]
  syntax:
    content: public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);
    parameters:
    - id: reliableSessionBindingElement
      type: System.ServiceModel.Channels.ReliableSessionBindingElement
      description: "Den <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> vars egenskapsvärden som används för att initiera den tillförlitliga sessionen."
  overload: System.ServiceModel.ReliableSession.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reliableSessionBindingElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
  fullName: System.ServiceModel.ReliableSession.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Hämtar eller anger ett tidsintervall som en tjänst kan vara inaktiv innan du stänger."
  remarks: "Egenskapen hämtar och anger värdet för den <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>egenskapen.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>       Aktivitet på en kanal är definierad som ett program eller infrastruktur visas. Egenskapen timeout för inaktivitet styr den maximala tid att behålla en inaktiv session alive. Om mer än det angivna tidsintervallet InactivityTimeout skickar utan aktivitet avbröts sessionen av infrastruktur- och fel kanal. Den tillförlitliga sessionen avbryts datakanalen ensidigt.       Om den skickande datorn har inga meddelanden ska skickas sedan den tillförlitliga sessionen är normalt inte fel på grund av inaktivitet; i stället behåller en mekanism för keep-alive sessionen aktiv under obestämd tid. Observera att dispatcher oberoende kan avbryta den tillförlitliga sessionen om inga programmeddelanden skickas eller tas emot. Därför inaktivitetsgräns vanligtvis upphör att gälla om nätverksförhållandena så att inga meddelanden av något slag tas emot eller om det uppstår ett fel på avsändare.       Ange det här förhindrar att servern håller på en säkerhetssession om klienten inte stänger den. Om säkerhetssessionen inte tog emot ett meddelande för inaktivitet tidsintervall, stängs den av servern. Detta minskar en potentiell denial of service-attack.       När du använder en tillförlitlig session, finns det två olika inaktivitet timers som måste uppfyllas för att keep alive för anslutningen. Om någon av dessa inaktivitet timers går bryts anslutningen.      – Den första Inaktivitetstimern i den tillförlitliga sessionen och kallas InactivityTimeout. Den här Inaktivitetstimern utlöses om inga meddelanden, programmet eller infrastrukturen, tas emot inom den angivna tiden. En infrastruktur-meddelandet är ett meddelande som har genererats för ett protokoll i kanal stacken, till exempel en keep alive eller en bekräftelse i stället som innehåller programdata.      -Andra Inaktivitetstimern finns på tjänsten och använder den <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>för bindningen.</xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> Den här Inaktivitetstimern utlöses om inga programmeddelanden tas emot inom den angivna tiden.       Eftersom anslutningen bryts om antingen timer för inaktivitet utlöses, öka InactivityTimeout när det är större än <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>har ingen effekt.</xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> Standardvärdet för båda dessa timeout är 10 minuter så att du alltid behöver öka båda att göra en skillnaden när du använder en tillförlitlig session."
  example:
  - >-
    [!code-cs[UEReliableSession#2](~/add/codesnippet/csharp/p-system.servicemodel.re_0_1.cs)]
     [!code-vb[UEReliableSession#2](~/add/codesnippet/visualbasic/p-system.servicemodel.re_0_1.vb)]
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som anger tidsintervall som en tjänst är inaktivt innan du stänger.</xref:System.TimeSpan> Standardvärdet är 10 minuter."
  overload: System.ServiceModel.ReliableSession.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet är mindre än eller lika med noll."
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.Ordered
  id: Ordered
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSession.Ordered
  fullName: System.ServiceModel.ReliableSession.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Hämtar eller anger ett värde som anger om meddelandeleverans måste bevara den ordning som meddelanden skickas."
  remarks: "Egenskapen hämtar och anger värdet för den <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>egenskapen.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>"
  example:
  - >-
    [!code-cs[UEReliableSession#2](~/add/codesnippet/csharp/p-system.servicemodel.re_1_1.cs)]
     [!code-vb[UEReliableSession#2](~/add/codesnippet/visualbasic/p-system.servicemodel.re_1_1.vb)]
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om meddelanden måste levereras i den ordning som de skickas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ReliableSession.Ordered*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.ReliableSession.#ctor
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession()
  nameWithType: ReliableSession.ReliableSession()
  fullName: System.ServiceModel.ReliableSession.ReliableSession()
- uid: System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession(ReliableSessionBindingElement)
  nameWithType: ReliableSession.ReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.ReliableSession.ReliableSession(ReliableSessionBindingElement)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
- uid: System.ServiceModel.ReliableSession.InactivityTimeout
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
  fullName: System.ServiceModel.ReliableSession.InactivityTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ReliableSession.Ordered
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: Ordered
  nameWithType: ReliableSession.Ordered
  fullName: System.ServiceModel.ReliableSession.Ordered
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ReliableSession.#ctor*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession
  nameWithType: ReliableSession.ReliableSession
- uid: System.ServiceModel.ReliableSession.InactivityTimeout*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
- uid: System.ServiceModel.ReliableSession.Ordered*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: Ordered
  nameWithType: ReliableSession.Ordered
