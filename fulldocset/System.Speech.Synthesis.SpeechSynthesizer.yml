### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.SpeechSynthesizer
  id: SpeechSynthesizer
  children:
  - System.Speech.Synthesis.SpeechSynthesizer.#ctor
  - System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  - System.Speech.Synthesis.SpeechSynthesizer.Dispose
  - System.Speech.Synthesis.SpeechSynthesizer.Finalize
  - System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  - System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  - System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.Pause
  - System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  - System.Speech.Synthesis.SpeechSynthesizer.Rate
  - System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  - System.Speech.Synthesis.SpeechSynthesizer.Resume
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  - System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  - System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  - System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  - System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  - System.Speech.Synthesis.SpeechSynthesizer.State
  - System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  - System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  - System.Speech.Synthesis.SpeechSynthesizer.Voice
  - System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  - System.Speech.Synthesis.SpeechSynthesizer.Volume
  langs:
  - csharp
  name: SpeechSynthesizer
  nameWithType: SpeechSynthesizer
  fullName: System.Speech.Synthesis.SpeechSynthesizer
  type: Class
  summary: "Tillhandahåller åtkomst till funktionerna i en sammanfattande installerade tal-motor."
  remarks: "När du skapar ett nytt SpeechSynthesizer-objekt använder du standard system röst. Konfigurera SpeechSynthesizer att använda någon av de installera tal sammanfattande (text till tal) rösterna med den <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> Om du vill ha information om vilka röster installeras med hjälp av <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>metoden och <xref:System.Speech.Synthesis.VoiceInfo>klass.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>       Den här klassen ger också kontroll över följande aspekter av tal sammanfattande: – Om du vill konfigurera utdata för objektet SpeechSynthesizer använder den <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, och <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>      -Om du vill generera tal, använder de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> SpeechSynthesizer kan producera tal från text, en <xref:System.Speech.Synthesis.Prompt>eller <xref:System.Speech.Synthesis.PromptBuilder>-objektet, eller från [tal sammanfattande Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</xref:System.Speech.Synthesis.PromptBuilder> </xref:System.Speech.Synthesis.Prompt>      -Om du vill pausa och återuppta tal sammanfattande, använda på <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>och <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>      -Om du vill lägga till eller ta bort lexikon, använda på <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>och <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> SpeechSynthesizer kan använda en eller flera lexikon hjälper dess uttal ord..      -Om du vill ändra leveransen av utgående tal, använder den <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>och <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A>Egenskaper.</xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>       SpeechSynthesizer genererar händelser när den stöter på vissa funktioner i anvisningarna: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, och <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> </xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> </xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> </xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> Den också genererar händelser som rapporterar på start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) och slutdatum (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) av tala operations och ändring av rösten (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>      > [!NOTE] > Alltid anropet <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A>innan du släpper ditt senaste referens till SpeechSynthesizer.</xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> Annars resurser den använder frigörs inte förrän skräpinsamlingen anropar objektet SpeechSynthesizer <xref:System.Object.Finalize%2A>metod.</xref:System.Object.Finalize%2A>"
  example:
  - "The following example is part of a console application that initializes a SpeechSynthesizer object and speaks a string.  \n  \n```c#  \n  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a string.  \n      synth.Speak(\"This example demonstrates a basic use of Speech Synthesizer\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: 'public sealed class SpeechSynthesizer : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor
  id: '#ctor'
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeechSynthesizer()
  nameWithType: SpeechSynthesizer.SpeechSynthesizer()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeechSynthesizer()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> klass."
  remarks: "När du initierar en ny <xref:System.Speech.Synthesis.SpeechSynthesizer>instans, används standardvärdet system röst.</xref:System.Speech.Synthesis.SpeechSynthesizer> Så här konfigurerar du den <xref:System.Speech.Synthesis.SpeechSynthesizer>Om du vill använda en av de installera tal sammanfattande (text till tal) rösterna den <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Om du vill ha information om vilka röster installeras med hjälp av <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>metoden och <xref:System.Speech.Synthesis.VoiceInfo>klass.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>"
  syntax:
    content: public SpeechSynthesizer ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  id: AddLexicon(System.Uri,System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: AddLexicon(Uri,String)
  nameWithType: SpeechSynthesizer.AddLexicon(Uri,String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(Uri,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Lägger till en lexikonet till den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  remarks: "En uttal lexikonet är en samling med ord eller fraser tillsammans med deras uttal, som består av bokstäver och tecken från en stöds fonetiskt alfabet. Du kan använda en lexikonet för att ange anpassade uttal för särskilda ordförråd i ditt program.       Uttal som angetts i en extern lexikonet filen åsidosätter uttal för tal-synthesizer interna lexikonet eller ordlista. Dock uttal angetts infogad i frågor som skapats med någon av de <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, eller <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>metoder företräde framför uttal som anges i alla lexikonet.</xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> </xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> </xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> Infogade uttal gäller endast för en enskild förekomst av ett ord. Se [lexikon och fonetiskt alfabet](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) för mer information.       Du kan lägga till flera lexikon ett <xref:System.Speech.Synthesis.SpeechSynthesizer>-objekt. Två värden för närvarande stöds för den `mediaType` parameter:-värdet `application/pls+xml` anger att lexikonet överensstämmer med den [uttal lexikonet specifikationen (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</xref:System.Speech.Synthesis.SpeechSynthesizer> Detta är det önskade formatet.      -Värdet `application/vdn.ms-sapi-lex` anger att formatet lexikonet är okomprimerade lexikonet, vilket är ett Microsoft-generiska-format. Detta är ett äldre format och vi rekommenderar att du använder formatet PLS som beskrivs ovan."
  example:
  - "The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word \"blue\". The lexicon defines the pronunciation of \"blue\" to sound like \"bleep\". While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n  \n        // Add a lexicon that changes the pronunciation of \"blue\".  \n        synth.AddLexicon(new Uri(\"C:\\\\test\\\\Blue.pls\"), \"application/pls+xml\");  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n  \n        // Remove the lexicon.  \n        synth.RemoveLexicon(new Uri(\"C:\\\\test\\\\Blue.pls\"));  \n  \n        // Speak the prompt.  \n        synth.Speak(\"My favorite color is blue.\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```  \n  \n Following are the contents of the lexicon file Blue.pls:  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n  \n<lexicon version=\"1.0\"   \n      xmlns=\"http://www.w3.org/2005/01/pronunciation-lexicon\"  \n      alphabet=\"x-microsoft-ups\" xml:lang=\"en-US\">  \n  \n  <lexeme>  \n    <grapheme> blue </grapheme>  \n    <phoneme> B L I P </phoneme>  \n  </lexeme>  \n  \n</lexicon>  \n```"
  syntax:
    content: public void AddLexicon (Uri uri, string mediaType);
    parameters:
    - id: uri
      type: System.Uri
      description: "Platsen för informationen lexikonet."
    - id: mediaType
      type: System.String
      description: "Medietyp för lexikonet. Media värden av typen är inte skiftlägeskänsliga."
  overload: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  id: BookmarkReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: BookmarkReached
  nameWithType: SpeechSynthesizer.BookmarkReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Utlöses när den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> påträffar ett bokmärke i Kommandotolken."
  remarks: "Den <xref:System.Speech.Synthesis.SpeechSynthesizer>skapat händelsen under bearbetning av någon av de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Information om data som är associerade med händelsen finns <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</xref:System.Speech.Synthesis.BookmarkReachedEventArgs>       Du kan lägga till bokmärken med den <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>metoden.</xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>"
  example:
  - "The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback. The handler for the BookmarkReached event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\test\\weather.wav\");  \n  \n        // Create a SoundPlayer instance to play the output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =  \n          new System.Media.SoundPlayer(@\"C:\\test\\weather.wav\");  \n  \n        // Build a prompt and append bookmarks.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(\"en-US\"));  \n        builder.AppendText(  \n          \"The weather forecast for today is partly cloudy with some sun breaks.\");  \n        builder.AppendBookmark(\"Daytime forecast\");  \n        builder.AppendText(  \n          \"Tonight's weather will be cloudy with a 30% chance of showers.\");  \n        builder.AppendBookmark(\"Nightime forecast\");  \n  \n        // Add a handler for the BookmarkReached event.  \n        synth.BookmarkReached +=  \n          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  \n  \n        // Speak the prompt and play back the output file.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Write the name and position of the bookmark to the console.  \n    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  \n    {  \n      Console.WriteLine(\"Bookmark ({0}) reached at: {1} \",  \n        e.Bookmark, e.AudioPosition);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs> BookmarkReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.BookmarkReachedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose
  id: Dispose
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Dispose()
  nameWithType: SpeechSynthesizer.Dispose()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Dispose()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Förfogar den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt och versioner av de resurser som används under sessionen."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize
  id: Finalize
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Finalize()
  nameWithType: SpeechSynthesizer.Finalize()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Finalize()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Fungerar som ett skydd att rensa resurser i händelse av att den <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose*>metoden inte anropas.</xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose*>"
  syntax:
    content: ~SpeechSynthesizer ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  id: GetCurrentlySpokenPrompt
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetCurrentlySpokenPrompt()
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hämtar frågan som den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> är tal."
  remarks: ''
  example:
  - "```c#  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();
    parameters: []
    return:
      type: System.Speech.Synthesis.Prompt
      description: "Returnerar den fråga objekt som läses för närvarande."
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  id: GetInstalledVoices
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetInstalledVoices()
  nameWithType: SpeechSynthesizer.GetInstalledVoices()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Returnerar alla installerade tal röster sammanfattande (text till tal)."
  remarks: "En röst är en motor för taligenkänning sammanfattande (text till tal eller TTS) som är installerad på systemet."
  example:
  - "The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Output information about all of the installed voices.   \n        Console.WriteLine(\"Installed voices -\");  \n        foreach (InstalledVoice voice in synth.GetInstalledVoices())  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          string AudioFormats = \"\";  \n          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  \n          {  \n            AudioFormats += String.Format(\"{0}\\n\",  \n            fmt.EncodingFormat.ToString());  \n          }  \n  \n          Console.WriteLine(\" Name:          \" + info.Name);  \n          Console.WriteLine(\" Culture:       \" + info.Culture);  \n          Console.WriteLine(\" Age:           \" + info.Age);  \n          Console.WriteLine(\" Gender:        \" + info.Gender);  \n          Console.WriteLine(\" Description:   \" + info.Description);  \n          Console.WriteLine(\" ID:            \" + info.Id);  \n          Console.WriteLine(\" Enabled:       \" + voice.Enabled);  \n          if (info.SupportedAudioFormats.Count != 0)  \n          {  \n            Console.WriteLine( \" Audio formats: \" + AudioFormats);  \n          }  \n          else  \n          {  \n            Console.WriteLine(\" No supported audio formats found\");  \n          }  \n  \n          string AdditionalInfo = \"\";  \n          foreach (string key in info.AdditionalInfo.Keys)  \n          {  \n            AdditionalInfo += String.Format(\"  {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n          }  \n  \n          Console.WriteLine(\" Additional Info - \" + AdditionalInfo);  \n          Console.WriteLine();  \n        }  \n      }  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice> GetInstalledVoices ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
      description: "Returnerar en skrivskyddad samling röster installerad på systemet."
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  id: GetInstalledVoices(System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: GetInstalledVoices(CultureInfo)
  nameWithType: SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Returnerar alla installerade tal sammanfattande (text till tal) röster som har stöd för ett specifikt språk."
  remarks: "Om inget stöd för installerade rösterna angivna språkvariant i den här metoden returnerar en tom samling.       Microsoft Windows och System.Speech API acceptera alla giltiga språk-landskoder. En sammanfattande tal-motor som stöder den språk landskoden måste vara installerat för att utföra text till tal med det språk som anges i egenskapen kultur. Tal sammanfattande engines som levereras med Microsoft Windows 7 fungerar med följande språk – landskoder:-en-US. Engelska (USA) - zh-CN. Kinesiska (Kina) - zh-TW. Kinesiska (Taiwan) två bokstäver språkkoder, till exempel &quot;SV&quot; får heller."
  example:
  - "The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.  \n  \n```c#  \nusing System;  \nusing System.Globalization;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  \n      {  \n  \n        // Output information about all of the installed voices that  \n        // support the en-US locacale.   \n        Console.WriteLine(\"Installed voices for the en-US locale:\");  \n        foreach (InstalledVoice voice in  \n          synthesizer.GetInstalledVoices(new CultureInfo(\"en-US\")))  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          OutputVoiceInfo(info);  \n        }  \n  \n        // Output information about the current voice.  \n        Console.WriteLine();  \n        Console.WriteLine(\"Current voice:\");  \n        OutputVoiceInfo(synthesizer.Voice);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Display information about a synthesizer voice.  \n    private static void OutputVoiceInfo(VoiceInfo info)  \n    {  \n      Console.WriteLine(\"  Name: {0}, culture: {1}, gender: {2}, age: {3}.\",  \n        info.Name, info.Culture, info.Gender, info.Age);  \n      Console.WriteLine(\"    Description: {0}\", info.Description);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice> GetInstalledVoices (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Det språk som måste ha stöd för röst."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
      description: "Returnerar en skrivskyddad samling röster som för närvarande är installerad på datorn som har stöd för det angivna språket."
  overload: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause
  id: Pause
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Pause()
  nameWithType: SpeechSynthesizer.Pause()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Pause()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Pausar de <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  syntax:
    content: public void Pause ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Pause*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  id: PhonemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: PhonemeReached
  nameWithType: SpeechSynthesizer.PhonemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Utlöses när en phoneme har uppnåtts."
  remarks: "En phoneme är en grundläggande komponent i skriftliga språk, vanligtvis en bokstav en alfabetet (eller en kombination av två bokstäver) som representerar ett eller flera distinkta ljud. Bokstaven &quot;c&quot; är till exempel en phoneme kan låta som &quot;s&quot; i &quot;cinder&quot; eller &quot;k&quot; i &quot;catch&quot;. Ett skriftligt ord är en grupp av fonemen. Ändra en phoneme i word ändrar dess stavning.       En <xref:System.Speech.Synthesis.SpeechSynthesizer>instans genererar en PhonemeReached händelse för varje del av ett ord som utgör en phoneme.</xref:System.Speech.Synthesis.SpeechSynthesizer> Till exempel skulle ordet &quot;tema&quot; generera för tre PhonemeReached händelser. en för ljudet: &quot;e&quot;, ett för &quot;e&quot; ljud och ett för &quot;m&quot; ljud (me).       Ett exempel och information om data som är associerade med händelsen finns <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</xref:System.Speech.Synthesis.PhonemeReachedEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs> PhonemeReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.PhonemeReachedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate
  id: Rate
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Rate
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hämtar eller anger engelskspråkiga frekvensen för den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following example speaks a string with the speaking rate set to -2.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Set a value for the speaking rate.  \n      synth.Rate = -2;  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a text string synchronously.  \n      synth.Speak(\"This example speaks a string with the speaking rate set to -2.\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }     \n  }    \n}  \n```"
  syntax:
    content: public int Rate { get; set; }
    return:
      type: System.Int32
      description: "Returnerar engelskspråkiga frekvensen för den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt från 10 och 10."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Rate*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  id: RemoveLexicon(System.Uri)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: RemoveLexicon(Uri)
  nameWithType: SpeechSynthesizer.RemoveLexicon(Uri)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(Uri)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Tar bort ett lexikon från den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  remarks: "Se <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>ett exempel.</xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>"
  syntax:
    content: public void RemoveLexicon (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Platsen för dokumentet lexikonet."
  overload: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume
  id: Resume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Resume()
  nameWithType: SpeechSynthesizer.Resume()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Resume()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Återupptar den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt när den har pausats."
  syntax:
    content: public void Resume ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.Resume*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  id: SelectVoice(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoice(String)
  nameWithType: SpeechSynthesizer.SelectVoice(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Väljer en viss röst efter namn."
  remarks: "Använd den <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>metoden och <xref:System.Speech.Synthesis.VoiceInfo>klassen om du vill hämta namnen på installerat tal röster som du kan välja.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Om du vill välja en röst skickar hela innehållet i den <xref:System.Speech.Synthesis.VoiceInfo.Name%2A>egenskapen som argument för metoden SelectVoice.</xref:System.Speech.Synthesis.VoiceInfo.Name%2A> Den <xref:System.Speech.Synthesis.SpeechSynthesizer>objekt väljer den första installerade röst som innehåller `name` i rösten <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=fullName>egenskap.</xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.SpeechSynthesizer> Den <xref:System.Speech.Synthesis.SpeechSynthesizer>jämförelsen skiftlägeskänslig, delsträngen för att avgöra om rösten matchar den `name`.</xref:System.Speech.Synthesis.SpeechSynthesizer>       När ett program anropar <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, metoden kontrollerar att var och en av de röster som påträffas i registret uppfyller vissa angivna krav.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> För varje röst som misslyckas verifiering <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>anger dess <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Ett program kan inte välja en röst vars <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen är `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Normalt program inte anger en röst <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Om du vill välja en röst av kön, ålder eller språk, kan du använda en av de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>"
  syntax:
    content: public void SelectVoice (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på röst att välja."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Väljer en röst med en specifik kön."
  remarks: "Använd den <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>metoden och <xref:System.Speech.Synthesis.VoiceInfo>klassen om du vill hämta namnen på installerat tal röster som du kan välja.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Den <xref:System.Speech.Synthesis.SpeechSynthesizer>objekt väljer den första installerade rösten vars <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>egenskapen matchar den `gender` parameter.</xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       När ett program anropar <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, metoden kontrollerar att var och en av de röster som påträffas i registret uppfyller vissa angivna krav.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> För varje röst som misslyckas verifiering <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>anger dess <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Ett program kan inte välja en röst vars <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen är `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Normalt program inte anger en röst <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Om du vill välja en röst baserat på andra egenskaper, finns det andra <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       Markera en röst efter namn genom att använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "Röst att välja kön."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Väljer en röst med en specifik kön och ålder."
  remarks: "Använd den <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>metoden och <xref:System.Speech.Synthesis.VoiceInfo>klassen om du vill hämta namnen på installerat tal röster som du kan välja.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Den <xref:System.Speech.Synthesis.SpeechSynthesizer>objekt väljer den första installerade rösten vars <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>och <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>Egenskaper matchar det `gender` och `age` parametrar.</xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       När ett program anropar <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, metoden kontrollerar att var och en av de röster som påträffas i registret uppfyller vissa angivna krav.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> För varje röst som misslyckas verifiering <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>anger dess <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Ett program kan inte välja en röst vars <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen är `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Normalt program inte anger en röst <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Om du vill välja en röst baserat på andra egenskaper, finns det andra <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       Markera en röst efter namn genom att använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "Röst att välja kön."
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "Röst att välja ålder."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Väljer en röst med en specifik kön och ålder, baserat på den position där rösterna sorteras."
  remarks: "Använd den <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>metoden och <xref:System.Speech.Synthesis.VoiceInfo>klassen om du vill hämta namnen på installerat tal röster som du kan välja.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Den <xref:System.Speech.Synthesis.SpeechSynthesizer>objekt söker efter installerade voices vars <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>och <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>Egenskaper matchar det `gender` och `age` parametrar.</xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Den <xref:System.Speech.Synthesis.SpeechSynthesizer>räknar matchar den söker efter och returnerar rösten när antalet är lika med den `voiceAlternate` parameter.</xref:System.Speech.Synthesis.SpeechSynthesizer>       När ett program anropar <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, metoden kontrollerar att var och en av de röster som påträffas i registret uppfyller vissa angivna krav.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> För varje röst som misslyckas verifiering <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>anger dess <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Ett program kan inte välja en röst vars <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen är `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Normalt program inte anger en röst <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Om du vill välja en röst baserat på andra egenskaper, finns det andra <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>överlagringar.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       Markera en röst efter namn genom att använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "Röst att välja kön."
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "Röst att välja ålder."
    - id: voiceAlternate
      type: System.Int32
      description: "Positionen för röst att välja."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  id: SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Väljer en röst med en specifik kön, ålder och nationella inställningar, baserat på den position där rösterna sorteras."
  remarks: "Den <xref:System.Speech.Synthesis.SpeechSynthesizer>objekt hittar voices vars <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, och <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>Egenskaper matchar det `gender`, `age`, och `culture` parametrar.</xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> </xref:System.Speech.Synthesis.VoiceInfo.Age%2A> </xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Den <xref:System.Speech.Synthesis.SpeechSynthesizer>räknar matchar den söker efter och returnerar rösten när antalet är lika med den `voiceAlternate` parameter.</xref:System.Speech.Synthesis.SpeechSynthesizer>       Microsoft Windows och System.Speech API acceptera alla giltiga språk-landskoder. Att utföra text till tal med det språk som anges i den `culture` parametern, en sammanfattande tal-motor som stöder språk landskod måste vara installerad. Tal sammanfattande engines som levereras med Microsoft Windows 7 fungerar med följande språk – landskoder:-en-US. Engelska (USA) - zh-CN. Kinesiska (Kina) - zh-TW. Kinesiska (Taiwan) två bokstäver språkkoder, till exempel &quot;SV&quot; får heller.       När ett program anropar <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, metoden kontrollerar att var och en av de röster som påträffas i registret uppfyller vissa angivna krav.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> För varje röst som misslyckas verifiering <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>anger dess <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Ett program kan inte välja en röst vars <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskapen är `False`.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Normalt program inte anger en röst <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>egenskap.</xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>       Om du vill välja en röst baserat på andra egenskaper, finns det andra <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>överlagringar.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>       Markera en röst efter namn genom att använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>"
  syntax:
    content: public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);
    parameters:
    - id: gender
      type: System.Speech.Synthesis.VoiceGender
      description: "Röst att välja kön."
    - id: age
      type: System.Speech.Synthesis.VoiceAge
      description: "Röst att välja ålder."
    - id: voiceAlternate
      type: System.Int32
      description: "Positionen för röst att välja."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Röstsamtal att välja språk."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  id: SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Konfigurerar den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt att lägga till utdata till en ljudström."
  remarks: "Anropa <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>att släppa den <xref:System.Speech.Synthesis.SpeechSynthesizer>&quot;s referens till dataströmmen.</xref:System.Speech.Synthesis.SpeechSynthesizer> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>       Andra konfigurationsalternativ som utdata, finns det <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, och <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>"
  syntax:
    content: public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);
    parameters:
    - id: audioDestination
      type: System.IO.Stream
      description: "Dataströmmen som du vill lägga till sammanfattande utdata."
    - id: formatInfo
      type: System.Speech.AudioFormat.SpeechAudioFormatInfo
      description: "Formatet som ska användas för sammanfattande utdata."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  id: SetOutputToDefaultAudioDevice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToDefaultAudioDevice()
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Konfigurerar den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt som skickar utdata till standard ljudenhet."
  remarks: "Du kan använda den **ljud** fönster i Windows **Kontrollpanelen** konfigurera standard ljudenhet för datorn.       Andra konfigurationsalternativ som utdata, finns det <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, och <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  example:
  - "The following example uses the synthesizer to speak a phrase to the default audio output.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the synthesizer to send output to the default audio device.  \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak a phrase.  \n        synth.Speak(\"This is sample text-to-speech output.\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToDefaultAudioDevice ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  id: SetOutputToNull
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToNull()
  nameWithType: SpeechSynthesizer.SetOutputToNull()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Konfigurerar den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt att inte skicka utdata från sammanfattande åtgärder till en enhet, en fil eller en dataström."
  remarks: "Använd den här metoden för att släppa den <xref:System.Speech.Synthesis.SpeechSynthesizer>&quot;s referens till en fil eller dataström.</xref:System.Speech.Synthesis.SpeechSynthesizer> Se <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>ett exempel.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>       Andra konfigurationsalternativ som utdata, finns det <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, och <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  syntax:
    content: public void SetOutputToNull ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  id: SetOutputToWaveFile(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveFile(String)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Konfigurerar den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt att lägga till utdata till en fil som innehåller Wave format ljud."
  remarks: "Om du vill konfigurera utdata och anger formatet, använder den <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>"
  example:
  - "The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file. Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToWaveFile(@\"C:\\Test\\Sample.wav\");  \n  \n      // Register for the SpeakCompleted event.  \n      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  \n  \n      // Build a prompt.  \n      PromptBuilder builder = new PromptBuilder();  \n      builder.AppendText(\"This sample asynchronously speaks a prompt to a WAVE file.\");  \n  \n      // Speak the string asynchronously.  \n      synth.SpeakAsync(builder);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Handle the SpeakCompleted event.  \n    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  \n    {  \n  \n      // Create a SoundPlayer instance to play the output audio file.  \n      System.Media.SoundPlayer m_SoundPlayer =  \n        new System.Media.SoundPlayer(@\"C:\\Test\\Sample.wav\");  \n  \n      //  Play the output file.  \n      m_SoundPlayer.Play();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void SetOutputToWaveFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  id: SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Konfigurerar den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt att lägga till utdata till en Wave ljudformatet fil i ett bestämt format."
  remarks: ''
  example:
  - "The following example specifies the format of the output of speech synthesis and sends it to a WAV file.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\temp\\test.wav\",   \n          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  \n  \n        // Create a SoundPlayer instance to play output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =   \n          new System.Media.SoundPlayer(@\"C:\\temp\\test.wav\");  \n  \n        // Build a prompt.  \n        PromptBuilder builder = new PromptBuilder();  \n        builder.AppendText(\"This is sample output to a WAVE file.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen."
    - id: formatInfo
      type: System.Speech.AudioFormat.SpeechAudioFormatInfo
      description: "Ljudformatet information."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  id: SetOutputToWaveStream(System.IO.Stream)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SetOutputToWaveStream(Stream)
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream(Stream)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(Stream)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Konfigurerar den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt att lägga till utdata till en dataström som innehåller Wave format ljud."
  remarks: "Att släppa <xref:System.Speech.Synthesis.SpeechSynthesizer>har referenser till dataströmmen, konfigurera om synthesizern utdata, till exempel genom att anropa <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       Andra konfigurationsalternativ som utdata, finns det <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, och <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>"
  example:
  - "The following example outputs a phrase to a WAV stream.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      using (MemoryStream stream = new MemoryStream())  \n      {  \n  \n        // Create a SoundPlayer instance to play the output audio file.  \n        MemoryStream streamAudio = new MemoryStream();  \n        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  \n  \n        // Configure the synthesizer to output to an audio stream.  \n        synth.SetOutputToWaveStream(streamAudio);  \n  \n        // Speak a phrase.  \n        synth.Speak(\"This is sample text-to-speech output.\");  \n        streamAudio.Position = 0;  \n        m_SoundPlayer.Stream = streamAudio;  \n        m_SoundPlayer.Play();  \n  \n        // Set the synthesizer output to null to release the stream.   \n        synth.SetOutputToNull();  \n  \n        // Insert code to persist or process the stream contents here.  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SetOutputToWaveStream (System.IO.Stream audioDestination);
    parameters:
    - id: audioDestination
      type: System.IO.Stream
      description: "Dataströmmen som du vill lägga till sammanfattande utdata."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  id: Speak(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(Prompt)
  nameWithType: SpeechSynthesizer.Speak(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Synkront talar innehållet i en <xref href=&quot;System.Speech.Synthesis.Prompt&quot;> </xref> objekt."
  remarks: "Asynkront prata innehållet i ett <xref:System.Speech.Synthesis.Prompt>objekt, Använd <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.Prompt>"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the Speak method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Create a prompt from a string.  \n        Prompt color = new Prompt(\"What is your favorite color?\");  \n  \n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(color);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "Innehåll ska kunna kommunicera."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  id: Speak(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(PromptBuilder)
  nameWithType: SpeechSynthesizer.Speak(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(PromptBuilder)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Synkront talar innehållet i en <xref href=&quot;System.Speech.Synthesis.PromptBuilder&quot;> </xref> objekt."
  remarks: "Asynkront prata innehållet i ett <xref:System.Speech.Synthesis.PromptBuilder>objekt, Använd <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.PromptBuilder>"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the Speak method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Create a PromptBuilder object and append a text string.  \n        PromptBuilder song = new PromptBuilder();  \n        song.AppendText(\"Say the name of the song you want to hear\");  \n  \n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(song);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);
    parameters:
    - id: promptBuilder
      type: System.Speech.Synthesis.PromptBuilder
      description: "Innehåll ska kunna kommunicera."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  id: Speak(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Speak(String)
  nameWithType: SpeechSynthesizer.Speak(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Synkront talar innehållet i en sträng."
  remarks: "Om du vill synkront tala en sträng som innehåller SSML markeringar, använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> Om du vill asynkront tala innehållet i en sträng, använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>"
  example:
  - "As shown in the following example, the Speak method provides the simplest means to generate speech output synchronously.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Speak a string synchronously.  \n        synth.Speak(\"What is your favorite color?\");  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void Speak (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "Texten som talar."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  id: SpeakAsync(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsync(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Asynkront talar innehållet i en <xref href=&quot;System.Speech.Synthesis.Prompt&quot;> </xref> objekt."
  remarks: "Du kan avbryta asynkron tal om en fråga med det <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>       Synkront prata innehållet i ett <xref:System.Speech.Synthesis.Prompt>objekt, Använd <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.Prompt>"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the SpeakAsync method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Create a prompt from a string.  \n      Prompt color = new Prompt(\"What is your favorite color?\");  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakAsync(color);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "Innehåll ska kunna kommunicera."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  id: SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(PromptBuilder)
  nameWithType: SpeechSynthesizer.SpeakAsync(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(PromptBuilder)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Asynkront talar innehållet i en <xref href=&quot;System.Speech.Synthesis.PromptBuilder&quot;> </xref> objekt."
  remarks: "Synkront prata innehållet i ett <xref:System.Speech.Synthesis.PromptBuilder>objekt, Använd <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.PromptBuilder>"
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the SpeakAsync method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Create a PromptBuilder object and append a text string.  \n      PromptBuilder song = new PromptBuilder();  \n      song.AppendText(\"Say the name of the song you want to hear\");  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakAsync(song);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);
    parameters:
    - id: promptBuilder
      type: System.Speech.Synthesis.PromptBuilder
      description: "Innehåll ska kunna kommunicera."
    return:
      type: System.Speech.Synthesis.Prompt
      description: "Returnerar det objekt som innehåller innehåll ska kunna kommunicera."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  id: SpeakAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsync(String)
  nameWithType: SpeechSynthesizer.SpeakAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Asynkront talar innehållet i en sträng."
  remarks: "Om du vill asynkront tala en sträng som innehåller SSML markeringar, använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> Om du vill synkront tala innehållet i en sträng, använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> Du kan avbryta asynkron tal om en fråga med det <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>"
  example:
  - "As shown in the following example, the SpeakAsync method provides the simplest means to generate speech output asynchronously.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Speak a string asynchronously.  \n      synth.SpeakAsync(\"What is your favorite color?\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "Texten som talar."
    return:
      type: System.Speech.Synthesis.Prompt
      description: "Returnerar det objekt som innehåller innehåll ska kunna kommunicera."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  id: SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsyncCancel(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Avbryter åtgärden asynkron sammanfattande för Kommandotolken i kö."
  remarks: "Du kan också använda den här metoden för att avbryta en asynkron tala åtgärden för följande:-innehållet i en <xref:System.String>anges av en <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.String>      -Innehållet i en <xref:System.Speech.Synthesis.PromptBuilder>anges av en <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.PromptBuilder>      -Innehållet i en <xref:System.String>som innehåller SSML som anges av en <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.String>       När du anropar <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName>, eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech skapar en <xref:System.Speech.Synthesis.Prompt>objekt fylls med innehållet i metodens parameter och returnerar det <xref:System.Speech.Synthesis.Prompt>objektet.</xref:System.Speech.Synthesis.Prompt> </xref:System.Speech.Synthesis.Prompt> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=fullName> Om du behåller en kopia av den returnerade <xref:System.Speech.Synthesis.Prompt>, du kan skicka det till SpeakAsyncCancel att avbryta engelskspråkiga innehåll som angetts i en <xref:System.String>eller en <xref:System.Speech.Synthesis.PromptBuilder>objektet.</xref:System.Speech.Synthesis.PromptBuilder> </xref:System.String> </xref:System.Speech.Synthesis.Prompt>"
  syntax:
    content: public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);
    parameters:
    - id: prompt
      type: System.Speech.Synthesis.Prompt
      description: "Innehåll som du vill avbryta en speak."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  id: SpeakAsyncCancelAll
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakAsyncCancelAll()
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Avbryter alla köade, asynkront, tal sammanfattande åtgärder."
  remarks: ''
  example:
  - "The following example show a use of SpeakAsyncCancelAll to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken. Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \nusing System.Threading;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Subscribe to the StateChanged event.  \n      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  \n  \n      // Subscribe to the SpeakProgress event.  \n      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  \n  \n      // Subscribe to the SpeakCompleted event.  \n      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  \n  \n      // Begin speaking a text string asynchronously.  \n      synth.SpeakAsync(\"Speech is an effective and natural way for people to interact with applications, \" +  \n        \"complementing or even replacing the use of mice, keyboards, controllers, and gestures.\");  \n  \n      // Speak for four seconds.  \n      Thread.Sleep(4000);  \n  \n      // Cancel the SpeakAsync operation and wait one second.  \n      synth.SpeakAsyncCancelAll();  \n      Thread.Sleep(1000);  \n  \n      // Speak a new text string.  \n      synth.Speak(\"An urgent email message has arrived. Do you want to hear it?\");  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    // Write to the console when the SpeakAsync operation has been cancelled.  \n    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  \n    {  \n      Console.WriteLine(\"\\nThe SpeakAsync operation was cancelled!!\");  \n    }  \n  \n    // When it changes, write the state of the SpeechSynthesizer to the console.  \n    static void synth_StateChanged(object sender, StateChangedEventArgs e)  \n    {  \n      Console.WriteLine(\"\\nSynthesizer State: {0}    Previous State: {1}\\n\", e.State, e.PreviousState);  \n    }  \n  \n    // Write the text being spoken by the SpeechSynthesizer to the console.  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }      \n  }    \n}  \n  \n```"
  syntax:
    content: public void SpeakAsyncCancelAll ();
    parameters: []
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  id: SpeakCompleted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakCompleted
  nameWithType: SpeechSynthesizer.SpeakCompleted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Utlöses när den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> har slutförts tal om en fråga."
  remarks: "Den <xref:System.Speech.Synthesis.SpeechSynthesizer>genererar SpeakCompleted händelse vid slutförandet av någon av de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       Den <xref:System.Speech.Synthesis.SpeakCompletedEventArgs>klassen har inga egenskaper och inte returnera data från händelsen SpeakCompleted.</xref:System.Speech.Synthesis.SpeakCompletedEventArgs> Den tillhandahålls för att aktivera programmet författare att skriva händelsehanterare för händelsen SpeakCompleted."
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs> SpeakCompleted;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakCompletedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  id: SpeakProgress
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakProgress
  nameWithType: SpeechSynthesizer.SpeakProgress
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Upphöjt efter den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> talar ord. i Kommandotolken."
  remarks: "Den <xref:System.Speech.Synthesis.SpeechSynthesizer>genererar den här händelsen för varje ny ord som programmet använder en fråga med någon av de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Ett exempel och mer information om data som är associerade med händelsen finns <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</xref:System.Speech.Synthesis.SpeakProgressEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs> SpeakProgress;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakProgressEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  id: SpeakSsml(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakSsml(String)
  nameWithType: SpeechSynthesizer.SpeakSsml(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Synkront talar en <xref:System.String>som innehåller SSML markup.</xref:System.String>"
  remarks: "Innehållet i den `textToSpeak` parameter måste innehålla en `speak` element och måste följa den [tal sammanfattande Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763). Mer information finns i [tal sammanfattande Markup Language Reference](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94).       Om du vill asynkront tala en sträng som innehåller SSML markeringar, använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> Du kan använda <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>att initiera synkrona tal om en sträng som inte innehåller SSML markup.</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>       Under ett anrop till den här metoden i <xref:System.Speech.Synthesis.SpeechSynthesizer>kan medföra följande händelser:- <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> </xref:System.Speech.Synthesis.SpeechSynthesizer> Utlöses när synthesizern engelskspråkiga tillstånd ändras.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> Utlöses när synthesizern börjar generera tal.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> Genereras varje gång synthesizern når en bokstav eller en kombination av bokstäver som utgör ett diskret ljud av tal på ett språk.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> Genereras varje gång synthesizern är klar tala ett ord.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> Genereras varje gång talade utdata kräver en ändring i läget för munnen eller ansikte muskler användes för att skapa tal.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> Utlöses när synthesizern påträffar ett bokmärke i Kommandotolken.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> Utlöses när röst för synthesizern ändras.       Den <xref:System.Speech.Synthesis.SpeechSynthesizer>utlöser den <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>händelse under bearbetning av metoden SpeakSsml.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> </xref:System.Speech.Synthesis.SpeechSynthesizer>"
  example:
  - "The following example renders the date 1/29/2009 as a date, in month, day, year order.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Build an SSML prompt in a string.  \n      string str = \"<speak version=\\\"1.0\\\"\";  \n      str += \" xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\"\";  \n      str += \" xml:lang=\\\"en-US\\\">\";  \n      str += \"<say-as type=\\\"date:mdy\\\"> 1/29/2009 </say-as>\";  \n      str += \"</speak>\";  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakSsml(str);  \n  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public void SpeakSsml (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "SSML-strängen ska kunna kommunicera."
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  id: SpeakSsmlAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakSsmlAsync(String)
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Asynkront talar en <xref:System.String>som innehåller SSML markup.</xref:System.String>"
  remarks: "Innehållet i den `textToSpeak` parameter måste innehålla en `speak` element och måste följa den [tal sammanfattande Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763). Mer information finns i [tal sammanfattande Markup Language Reference](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94).       Om du vill synkront tala en sträng som innehåller SSML markeringar, använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>metoden.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> Du kan använda <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>att initiera asynkron tal om en sträng som inte innehåller SSML markup.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>       Under ett anrop till den här metoden i <xref:System.Speech.Synthesis.SpeechSynthesizer>kan medföra följande händelser:- <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged> </xref:System.Speech.Synthesis.SpeechSynthesizer> Utlöses när synthesizern engelskspråkiga tillstånd ändras.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> Utlöses när synthesizern börjar generera tal.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> Genereras varje gång synthesizern når en bokstav eller en kombination av bokstäver som utgör ett diskret ljud av tal på ett språk.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> Genereras varje gång synthesizern är klar tala ett ord.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> Genereras varje gång talade utdata kräver en ändring i läget för munnen eller ansikte muskler användes för att skapa tal.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> Utlöses när synthesizern påträffar ett bokmärke i Kommandotolken.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange> Utlöses när röst för synthesizern ändras.      -   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> Utlöses när synthesizern är klar bearbetningen SpeakSsmlAsync.       Om ditt program dos inte behöver utföra uppgifter när du talar, kan du använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>metod för att generera tal synkront.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>"
  example:
  - "```  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Build an SSML prompt in a string.  \n      string str = \"<speak version=\\\"1.0\\\"\";  \n      str += \" xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\"\";  \n      str += \" xml:lang=\\\"en-US\\\">\";  \n      str += \"<say-as type=\\\"date:mdy\\\"> 1/29/2009 </say-as>\";  \n      str += \"</speak>\";  \n  \n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakSsmlAsync(str);  \n  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "SMML markeringen ska kunna kommunicera."
    return:
      type: System.Speech.Synthesis.Prompt
      description: "Asynkront talar en <xref:System.String>som innehåller SSML markup.</xref:System.String>"
  overload: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  id: SpeakStarted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: SpeakStarted
  nameWithType: SpeechSynthesizer.SpeakStarted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Utlöses när den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> börjar tal om en fråga."
  remarks: "Den <xref:System.Speech.Synthesis.SpeechSynthesizer>genererar den här händelsen när den påbörjar bearbetningen av en fråga med någon av de <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>       Den <xref:System.Speech.Synthesis.SpeakStartedEventArgs>klassen har inga egenskaper och inte returnera data från händelsen SpeakStarted.</xref:System.Speech.Synthesis.SpeakStartedEventArgs> Den tillhandahålls för att aktivera programmet författare att skriva händelsehanterare för händelsen SpeakStarted."
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs> SpeakStarted;
    return:
      type: System.EventHandler{System.Speech.Synthesis.SpeakStartedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.State
  id: State
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: State
  nameWithType: SpeechSynthesizer.State
  fullName: System.Speech.Synthesis.SpeechSynthesizer.State
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hämtar aktuellt tala tillståndet för den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  remarks: "Att hämta den nya statusen på <xref:System.Speech.Synthesis.SpeechSynthesizer>ändringarna, efter att det använder <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A>egenskapen för <xref:System.Speech.Synthesis.StateChangedEventArgs>klassen.</xref:System.Speech.Synthesis.StateChangedEventArgs> </xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer>"
  example:
  - "The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.  \n  \n```c#  \nusing System;  \nusing System.Threading;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer() ;  \n  \n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n  \n      // Subscribe to the SpeakProgress event.         \n      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  \n  \n      // Write the state of the SpeechSynthesizer to the console.  \n      Console.WriteLine(\"Current Synthesizer state: \" + synth.State + \"\\n\");  \n  \n      // Speak a string asynchronously.  \n      synth.SpeakAsync(\"What is your favorite color?\");  \n  \n      // Write the state of the SpeechSynthesizer to the console while it is speaking.  \n      Thread.Sleep(1000);  \n      Console.WriteLine(\"\\n - Current Synthesizer state: \" + synth.State + \" - \\n\");  \n  \n      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  \n      Thread.Sleep(2000);  \n      Console.WriteLine(\"\\nCurrent Synthesizer state: \" + synth.State);  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.SynthesizerState State { get; }
    return:
      type: System.Speech.Synthesis.SynthesizerState
      description: "Returnerar det aktuella engelskspråkiga tillståndet för den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  overload: System.Speech.Synthesis.SpeechSynthesizer.State*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  id: StateChanged
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: StateChanged
  nameWithType: SpeechSynthesizer.StateChanged
  fullName: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Utlöses när tillståndet för den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> ändringar."
  remarks: "Den <xref:System.Speech.Synthesis.SpeechSynthesizer>genererar den här händelsen när dess tala <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A>ändringar.</xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Ett exempel och mer information om data som är associerade med händelsen finns <xref:System.Speech.Synthesis.StateChangedEventArgs>.</xref:System.Speech.Synthesis.StateChangedEventArgs>       Om du vill pausa och återuppta tal sammanfattande, använda på <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>och <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.StateChangedEventArgs> StateChanged;
    return:
      type: System.EventHandler{System.Speech.Synthesis.StateChangedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  id: VisemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: VisemeReached
  nameWithType: SpeechSynthesizer.VisemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Utlöses när en viseme har uppnåtts."
  remarks: "En viseme är grundläggande positionen för munnen och står inför när uttala en phoneme. Visemes är visuella representationer av fonemen.       System.Speech stöder 21 visemes för amerikansk engelska, som motsvarar en eller flera fonemen.  VisemeReached händelser aktiveras när en ny phoneme nå har en annan motsvarande viseme än tidigare phoneme uppnåtts. Eftersom vissa visemes representerar mer än en phoneme, en VisemeReached händelse genereras om nästa phoneme uppnåtts motsvarar samma viseme som tidigare phoneme. Till exempel för orden &quot;den här zonen&quot; en <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>händelsen utlöses för &quot;s&quot; i &quot;denna&quot; och &quot;z&quot; i &quot;zonen&quot;.</xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> En VisemeReached händelse utlöses dock inte för &quot;z&quot; i &quot;zonen&quot; eftersom det motsvarar samma viseme som &quot;s&quot; i &quot;denna&quot;.       Följande är en lista över 21 SAPI fonemen och phoneme grupper som motsvarar en viseme i amerikansk engelska.      | Viseme | Phoneme(s) |   |------------|------------------|   |&0; | tystnad |   |&1; | ae, ax, ah |   |&2; | aa |   |&3; | ao |   |&4; | entkoppling, ft, visst |   |&5; | er |   |&6; | y, iy, ih, ändra |   |&7; | w, uw |   |&8; | ur |   |&9; | aw |   |&10; | oy |   |&11; | ay |   |&12; | h |   |&13; | r |   |&14; | l |   |&15; | s, z |   |&16; | del, ch, jh, zh |   |&17; | th, dh |   |&18; | f, v |   |&19; | d, t, n |   |&20; | k, g, ng |   |&21; | p, b, m |       Information om data som är associerade med den `VisemeReached` händelse finns <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</xref:System.Speech.Synthesis.VisemeReachedEventArgs>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs> VisemeReached;
    return:
      type: System.EventHandler{System.Speech.Synthesis.VisemeReachedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice
  id: Voice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Voice
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hämtar information om den aktuella rösten för den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  remarks: "När du initierar en ny <xref:System.Speech.Synthesis.SpeechSynthesizer>, används standardvärdet system röst.</xref:System.Speech.Synthesis.SpeechSynthesizer> Så här konfigurerar du den <xref:System.Speech.Synthesis.SpeechSynthesizer>objekt som använder en av de installera tal sammanfattande rösterna kan använda den <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>metod.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> Om du vill ha information om vilka röster installeras med hjälp av <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>metoden och <xref:System.Speech.Synthesis.VoiceInfo>klass.</xref:System.Speech.Synthesis.VoiceInfo> </xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>"
  example:
  - "The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>and gets information about the current voice.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Get information about supported audio formats.  \n        string AudioFormats = \"\";  \n        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  \n        {  \n          AudioFormats += String.Format(\"{0}\\n\",  \n          fmt.EncodingFormat.ToString());  \n        }  \n  \n        // Write information about the voice to the console.  \n        Console.WriteLine(\" Name:          \" + synth.Voice.Name);  \n        Console.WriteLine(\" Culture:       \" + synth.Voice.Culture);  \n        Console.WriteLine(\" Age:           \" + synth.Voice.Age);  \n        Console.WriteLine(\" Gender:        \" + synth.Voice.Gender);  \n        Console.WriteLine(\" Description:   \" + synth.Voice.Description);  \n        Console.WriteLine(\" ID:            \" + synth.Voice.Id);  \n        if (synth.Voice.SupportedAudioFormats.Count != 0)  \n        {  \n          Console.WriteLine(\" Audio formats: \" + AudioFormats);  \n        }  \n        else  \n        {  \n          Console.WriteLine(\" No supported audio formats found\");  \n        }  \n  \n        // Get additional information about the voice.  \n        string AdditionalInfo = \"\";  \n        foreach (string key in synth.Voice.AdditionalInfo.Keys)  \n        {  \n          AdditionalInfo += String.Format(\"  {0}: {1}\\n\",  \n            key, synth.Voice.AdditionalInfo[key]);  \n        }  \n  \n        Console.WriteLine(\" Additional Info - \" + AdditionalInfo);  \n        Console.WriteLine();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public System.Speech.Synthesis.VoiceInfo Voice { get; }
    return:
      type: System.Speech.Synthesis.VoiceInfo
      description: "Returnerar information om den aktuella rösten för den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Voice*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  id: VoiceChange
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: VoiceChange
  nameWithType: SpeechSynthesizer.VoiceChange
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Utlöses när röst den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> ändringar."
  remarks: "Ett exempel och information om data som är associerade med händelsen finns <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</xref:System.Speech.Synthesis.VoiceChangeEventArgs>       Du kan ändra rösten som den <xref:System.Speech.Synthesis.SpeechSynthesizer>använder någon av de <xref:System.Speech.Synthesis.PromptBuilder>&quot;s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>metoder eller <xref:System.Speech.Synthesis.SpeechSynthesizer>&quot;s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>eller <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>metoder.</xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> </xref:System.Speech.Synthesis.SpeechSynthesizer> </xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> </xref:System.Speech.Synthesis.PromptBuilder> </xref:System.Speech.Synthesis.SpeechSynthesizer>"
  syntax:
    content: public event EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs> VoiceChange;
    return:
      type: System.EventHandler{System.Speech.Synthesis.VoiceChangeEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume
  id: Volume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  langs:
  - csharp
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Volume
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hämta eller anger volymen av den <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Set the volume of the SpeechSynthesizer's ouput.  \n        synth.Volume = 60;  \n  \n        // Build a prompt containing recorded audio and synthesized speech.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(\"en-US\"));  \n        builder.AppendAudio(\"C:\\\\Test\\\\WelcomeToContosoRadio.wav\");  \n        builder.AppendText(  \n          \"The weather forecast for today is partly cloudy with some sun breaks.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public int Volume { get; set; }
    return:
      type: System.Int32
      description: "Returnerar mängden av <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;> </xref>, mellan 0 och 100."
  overload: System.Speech.Synthesis.SpeechSynthesizer.Volume*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeechSynthesizer()
  nameWithType: SpeechSynthesizer.SpeechSynthesizer()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeechSynthesizer()
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: AddLexicon(Uri,String)
  nameWithType: SpeechSynthesizer.AddLexicon(Uri,String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(Uri,String)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: BookmarkReached
  nameWithType: SpeechSynthesizer.BookmarkReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached
- uid: System.EventHandler{System.Speech.Synthesis.BookmarkReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<BookmarkReachedEventArgs>
  nameWithType: EventHandler<BookmarkReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.BookmarkReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.BookmarkReachedEventArgs
    name: BookmarkReachedEventArgs
    nameWithType: BookmarkReachedEventArgs
    fullName: BookmarkReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Dispose()
  nameWithType: SpeechSynthesizer.Dispose()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Dispose()
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Finalize()
  nameWithType: SpeechSynthesizer.Finalize()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Finalize()
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetCurrentlySpokenPrompt()
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt()
- uid: System.Speech.Synthesis.Prompt
  parent: System.Speech.Synthesis
  isExternal: false
  name: Prompt
  nameWithType: Prompt
  fullName: System.Speech.Synthesis.Prompt
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices()
  nameWithType: SpeechSynthesizer.GetInstalledVoices()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Synthesis.InstalledVoice}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<InstalledVoice>
  nameWithType: ReadOnlyCollection<InstalledVoice>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Synthesis.InstalledVoice>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.InstalledVoice
    name: InstalledVoice
    nameWithType: InstalledVoice
    fullName: InstalledVoice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices(CultureInfo)
  nameWithType: SpeechSynthesizer.GetInstalledVoices(CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Pause()
  nameWithType: SpeechSynthesizer.Pause()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Pause()
- uid: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: PhonemeReached
  nameWithType: SpeechSynthesizer.PhonemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached
- uid: System.EventHandler{System.Speech.Synthesis.PhonemeReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PhonemeReachedEventArgs>
  nameWithType: EventHandler<PhonemeReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.PhonemeReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.PhonemeReachedEventArgs
    name: PhonemeReachedEventArgs
    nameWithType: PhonemeReachedEventArgs
    fullName: PhonemeReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Rate
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: RemoveLexicon(Uri)
  nameWithType: SpeechSynthesizer.RemoveLexicon(Uri)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(Uri)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Resume()
  nameWithType: SpeechSynthesizer.Resume()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Resume()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoice(String)
  nameWithType: SpeechSynthesizer.SelectVoice(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender)
- uid: System.Speech.Synthesis.VoiceGender
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceGender
  nameWithType: VoiceGender
  fullName: System.Speech.Synthesis.VoiceGender
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge)
- uid: System.Speech.Synthesis.VoiceAge
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceAge
  nameWithType: VoiceAge
  fullName: System.Speech.Synthesis.VoiceAge
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  nameWithType: SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo
  parent: System.Speech.AudioFormat
  isExternal: false
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToDefaultAudioDevice()
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToNull()
  nameWithType: SpeechSynthesizer.SetOutputToNull()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile(String)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(String,SpeechAudioFormatInfo)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveStream(Stream)
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream(Stream)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(Stream)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(Prompt)
  nameWithType: SpeechSynthesizer.Speak(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(PromptBuilder)
  nameWithType: SpeechSynthesizer.Speak(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(PromptBuilder)
- uid: System.Speech.Synthesis.PromptBuilder
  parent: System.Speech.Synthesis
  isExternal: false
  name: PromptBuilder
  nameWithType: PromptBuilder
  fullName: System.Speech.Synthesis.PromptBuilder
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak(String)
  nameWithType: SpeechSynthesizer.Speak(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Speak(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsync(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(PromptBuilder)
  nameWithType: SpeechSynthesizer.SpeakAsync(PromptBuilder)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(PromptBuilder)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync(String)
  nameWithType: SpeechSynthesizer.SpeakAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancel(Prompt)
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel(Prompt)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(Prompt)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancelAll()
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll()
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll()
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakCompleted
  nameWithType: SpeechSynthesizer.SpeakCompleted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted
- uid: System.EventHandler{System.Speech.Synthesis.SpeakCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakCompletedEventArgs>
  nameWithType: EventHandler<SpeakCompletedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakCompletedEventArgs
    name: SpeakCompletedEventArgs
    nameWithType: SpeakCompletedEventArgs
    fullName: SpeakCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakProgress
  nameWithType: SpeechSynthesizer.SpeakProgress
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress
- uid: System.EventHandler{System.Speech.Synthesis.SpeakProgressEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakProgressEventArgs>
  nameWithType: EventHandler<SpeakProgressEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakProgressEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakProgressEventArgs
    name: SpeakProgressEventArgs
    nameWithType: SpeakProgressEventArgs
    fullName: SpeakProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsml(String)
  nameWithType: SpeechSynthesizer.SpeakSsml(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsmlAsync(String)
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync(String)
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(String)
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakStarted
  nameWithType: SpeechSynthesizer.SpeakStarted
  fullName: System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted
- uid: System.EventHandler{System.Speech.Synthesis.SpeakStartedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeakStartedEventArgs>
  nameWithType: EventHandler<SpeakStartedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.SpeakStartedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.SpeakStartedEventArgs
    name: SpeakStartedEventArgs
    nameWithType: SpeakStartedEventArgs
    fullName: SpeakStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.State
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: State
  nameWithType: SpeechSynthesizer.State
  fullName: System.Speech.Synthesis.SpeechSynthesizer.State
- uid: System.Speech.Synthesis.SynthesizerState
  parent: System.Speech.Synthesis
  isExternal: false
  name: SynthesizerState
  nameWithType: SynthesizerState
  fullName: System.Speech.Synthesis.SynthesizerState
- uid: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: StateChanged
  nameWithType: SpeechSynthesizer.StateChanged
  fullName: System.Speech.Synthesis.SpeechSynthesizer.StateChanged
- uid: System.EventHandler{System.Speech.Synthesis.StateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<StateChangedEventArgs>
  nameWithType: EventHandler<StateChangedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.StateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.StateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.StateChangedEventArgs
    name: StateChangedEventArgs
    nameWithType: StateChangedEventArgs
    fullName: StateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: VisemeReached
  nameWithType: SpeechSynthesizer.VisemeReached
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VisemeReached
- uid: System.EventHandler{System.Speech.Synthesis.VisemeReachedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisemeReachedEventArgs>
  nameWithType: EventHandler<VisemeReachedEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.VisemeReachedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.VisemeReachedEventArgs
    name: VisemeReachedEventArgs
    nameWithType: VisemeReachedEventArgs
    fullName: VisemeReachedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Voice
- uid: System.Speech.Synthesis.VoiceInfo
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceInfo
  nameWithType: VoiceInfo
  fullName: System.Speech.Synthesis.VoiceInfo
- uid: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: VoiceChange
  nameWithType: SpeechSynthesizer.VoiceChange
  fullName: System.Speech.Synthesis.SpeechSynthesizer.VoiceChange
- uid: System.EventHandler{System.Speech.Synthesis.VoiceChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VoiceChangeEventArgs>
  nameWithType: EventHandler<VoiceChangeEventArgs>
  fullName: System.EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Synthesis.VoiceChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Synthesis.VoiceChangeEventArgs
    name: VoiceChangeEventArgs
    nameWithType: VoiceChangeEventArgs
    fullName: VoiceChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
  fullName: System.Speech.Synthesis.SpeechSynthesizer.Volume
- uid: System.Speech.Synthesis.SpeechSynthesizer.#ctor*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeechSynthesizer
  nameWithType: SpeechSynthesizer.SpeechSynthesizer
- uid: System.Speech.Synthesis.SpeechSynthesizer.AddLexicon*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: AddLexicon
  nameWithType: SpeechSynthesizer.AddLexicon
- uid: System.Speech.Synthesis.SpeechSynthesizer.Dispose*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Dispose
  nameWithType: SpeechSynthesizer.Dispose
- uid: System.Speech.Synthesis.SpeechSynthesizer.Finalize*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Finalize
  nameWithType: SpeechSynthesizer.Finalize
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetCurrentlySpokenPrompt
  nameWithType: SpeechSynthesizer.GetCurrentlySpokenPrompt
- uid: System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: GetInstalledVoices
  nameWithType: SpeechSynthesizer.GetInstalledVoices
- uid: System.Speech.Synthesis.SpeechSynthesizer.Pause*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Pause
  nameWithType: SpeechSynthesizer.Pause
- uid: System.Speech.Synthesis.SpeechSynthesizer.Rate*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Rate
  nameWithType: SpeechSynthesizer.Rate
- uid: System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: RemoveLexicon
  nameWithType: SpeechSynthesizer.RemoveLexicon
- uid: System.Speech.Synthesis.SpeechSynthesizer.Resume*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Resume
  nameWithType: SpeechSynthesizer.Resume
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoice
  nameWithType: SpeechSynthesizer.SelectVoice
- uid: System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SelectVoiceByHints
  nameWithType: SpeechSynthesizer.SelectVoiceByHints
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToAudioStream
  nameWithType: SpeechSynthesizer.SetOutputToAudioStream
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToDefaultAudioDevice
  nameWithType: SpeechSynthesizer.SetOutputToDefaultAudioDevice
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToNull
  nameWithType: SpeechSynthesizer.SetOutputToNull
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveFile
  nameWithType: SpeechSynthesizer.SetOutputToWaveFile
- uid: System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SetOutputToWaveStream
  nameWithType: SpeechSynthesizer.SetOutputToWaveStream
- uid: System.Speech.Synthesis.SpeechSynthesizer.Speak*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Speak
  nameWithType: SpeechSynthesizer.Speak
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsync
  nameWithType: SpeechSynthesizer.SpeakAsync
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancel
  nameWithType: SpeechSynthesizer.SpeakAsyncCancel
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakAsyncCancelAll
  nameWithType: SpeechSynthesizer.SpeakAsyncCancelAll
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsml
  nameWithType: SpeechSynthesizer.SpeakSsml
- uid: System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: SpeakSsmlAsync
  nameWithType: SpeechSynthesizer.SpeakSsmlAsync
- uid: System.Speech.Synthesis.SpeechSynthesizer.State*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: State
  nameWithType: SpeechSynthesizer.State
- uid: System.Speech.Synthesis.SpeechSynthesizer.Voice*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Voice
  nameWithType: SpeechSynthesizer.Voice
- uid: System.Speech.Synthesis.SpeechSynthesizer.Volume*
  parent: System.Speech.Synthesis.SpeechSynthesizer
  isExternal: false
  name: Volume
  nameWithType: SpeechSynthesizer.Volume
