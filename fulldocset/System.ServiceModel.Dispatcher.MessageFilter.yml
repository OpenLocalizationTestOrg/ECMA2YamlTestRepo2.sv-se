### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  id: MessageFilter
  children:
  - System.ServiceModel.Dispatcher.MessageFilter.#ctor
  - System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: MessageFilter
  nameWithType: MessageFilter
  fullName: System.ServiceModel.Dispatcher.MessageFilter
  type: Class
  summary: "<xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;></xref>basklass för olika klasser av filter som används för att fråga meddelanden."
  remarks: "MessageFilter är en `abstract` klassen som utvecklare implementera för att ange villkoren för att använda för att kontrollera meddelanden. Filter som normalt används av ett endpoint-program för att avgöra vad du gör med ett meddelande utifrån en undersökning av en del av meddelandet. En Köprocess kan till exempel använda en 1.0 XPath-fråga för att kontrollera elementet prioritet för att avgöra om du vill flytta ett meddelande till kön framför kända sidhuvudet.       Filtren lagras i en tabell med filter som implementerar <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> Varje filter i tabellen är associerad med angivna filtrera data som kan användas för att ange vilka åtgärder som ska vidtas om ett meddelande som matchar filtret. Den <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>metoder som används för att avgöra om meddelanden som uppfyller ett filter.</xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>       Det kriterium som används av ett filter kan inte ändras när filtret har skapats eftersom filter-tabeller har inget sätt att identifiera en ändring. Det enda sättet att ändra kriterier för ett filter är att skapa en ny och ta bort filtret.       Följande klasser implementera den `abstract`MessageFilter klass:- <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>använder ett 1.0 XPath-uttryck för att ange kriterier för matchning.</xref:System.ServiceModel.Dispatcher.XPathMessageFilter>      - <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter>matchar alla meddelanden.</xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter>      - <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter>matchar inget meddelande.</xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter>      - <xref:System.ServiceModel.Dispatcher.ActionMessageFilter>testar om åtgärden för ett meddelande som ingår i en angiven mängd av åtgärder.</xref:System.ServiceModel.Dispatcher.ActionMessageFilter>      - <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>testar om meddelandet uppfyller ett angivet slutpunktsadress.</xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>       <xref:System.ServiceModel.Channels.ChannelListenerBase%601>är en `abstract` basklassen som du kan använda för att skriva icke-Queuing-lyssnare.</xref:System.ServiceModel.Channels.ChannelListenerBase%601>"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))]

      public abstract class MessageFilter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: MessageFilter()
  nameWithType: MessageFilter.MessageFilter()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.MessageFilter()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "När den anropas i en härledd klass initierar en ny instans av den <xref href=&quot;System.ServiceModel.Dispatcher.MessageFilter&quot;> </xref> klass."
  remarks: "Konstruktorn är skyddad så att endast filter som härleds från <xref:System.ServiceModel.Dispatcher.MessageFilter>instansieras.</xref:System.ServiceModel.Dispatcher.MessageFilter>"
  syntax:
    content: protected MessageFilter ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.MessageFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: CreateFilterTable()
  nameWithType: MessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: "Som ska läggas till."
  overload: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable<FilterData>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: MessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "När åsidosätts i en härledd klass testar om meddelanden som uppfyller filtervillkoren. Innehållet kan inte granskas."
  remarks: "Den här metoden kan inte kontrollera innehållet i meddelandetexten."
  syntax:
    content: public abstract bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Det <xref:System.ServiceModel.Channels.Message>objekt som ska testas.</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.ServiceModel.Channels.Message>objekt uppfyller filtervillkoren, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: MessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "När åsidosätts i en härledd klass testar om buffrade meddelanden som uppfyller villkoren i ett filter."
  remarks: "Meddelandet måste vara fullständigt buffrad om brödtexten är kontrolleras av filtret. Innehållet i den <xref:System.ServiceModel.Channels.MessageBuffer>är fullständigt buffrad och därför kan kontrolleras av ett filter.</xref:System.ServiceModel.Channels.MessageBuffer> Innehållet i en <xref:System.ServiceModel.Channels.Message>som inte har fullständigt buffrad kan användas av filter-kontroll.</xref:System.ServiceModel.Channels.Message> Elementet rubrik i en <xref:System.ServiceModel.Channels.Message>buffertlagras automatiskt och därför kan kontrolleras utan används.</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "Det <xref:System.ServiceModel.Channels.MessageBuffer>objekt som ska testas.</xref:System.ServiceModel.Channels.MessageBuffer>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.ServiceModel.Channels.MessageBuffer>objekt uppfyller filtervillkoren, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.MessageBuffer>"
  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: MessageFilter()
  nameWithType: MessageFilter.MessageFilter()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.MessageFilter()
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: CreateFilterTable()
  nameWithType: MessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: IMessageFilterTable<FilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: MessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: MessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: MessageFilter
  nameWithType: MessageFilter.MessageFilter
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable<FilterData>*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: MessageFilter.CreateFilterTable<FilterData>
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match
  nameWithType: MessageFilter.Match
