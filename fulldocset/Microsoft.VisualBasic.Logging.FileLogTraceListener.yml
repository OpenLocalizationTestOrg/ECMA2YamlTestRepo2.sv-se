### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  id: FileLogTraceListener
  children:
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
  type: Class
  summary: "Tillhandahåller en enkel lyssnare som leder loggning utdata till fil."
  remarks: "Klassen FileLogTraceListener ger automatisk Underhåll funktioner för att arkivera loggfiler på dagsvis eller per program. Funktionen för automatisk arkivering hjälper till att minska Underhåll ansvaret för utvecklare och administratörer.       En instans av FileLogTraceListener kan läggas till i <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>eller <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>samlingar för att dirigera om utdata från loggning till en textfil.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> Instanser av den här klassen kan också läggas till `My.Application.Log` eller `My.Log` (för webbprogram) i [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] program. Mer information finns i [genomgång: ändra där My.Application.Log skriver Information](~/add/includes/ajax-current-ext-md.md) `.` de viktigaste funktionerna i den här klassen är: 1.  *Arkivering funktioner*. Loggfiler som skapas av den här klassen är namngivna enligt det grundläggande namnet och det datum då, tillsammans med en siffra och skilja loggfilen från efterföljande versioner av loggen. Nya loggfiler skapas på en efter behov.           Den explicita formen av filnamnet är `baseName`[-`dateStamp`] [-`version`] .log, där: – `baseName` delen är den grundläggande loggnamn som anges av den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>          - `dateStamp` Del har formatet &quot;Åååå-MM-DD&quot; och visas när <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>eller <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>          -Om det behövs mer än en loggfil med samma `baseName` och `dateStamp`, `version` tillhör en positiv `Integer`, har lagts till i filnamnet.      2.  *Flera klassinstanser*. Om en instans av klassen FileLogTraceListener skriver till en fil som används:-klassen delar filen om den används av en annan instans av klassen FileLogTraceListener i samma process.          -Klassen skapas en ny loggfil med hjälp av nästa tillgängliga namnet om filen används av en annan process.      3.  *Trådsäkerhet*. Klassen FileLogTraceListener är trådsäkra. På så sätt kan du på ett säkert sätt skriva meddelanden till loggen från flera trådar utan att använda lås.       **Loggfilen plats** – <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>egenskap tar en <xref:Microsoft.VisualBasic.Logging.LogFileLocation>uppräkningen för att ange en av de vanliga kataloger att skriva till loggfilen.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>      -Om du vill skriva loggfilen till en annan plats, ange den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>egenskapen på den platsen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>       **Namn på loggfilen** -huvudnamnet för loggfilen anges av den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>      -Aktuella loggfilens namn kan läsas från den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Den härleds från flera egenskaper och det aktuella tillståndet i loggar i filsystemet.       **Logga Underhåll** -den lägsta frekvensen för att skapa nya loggfiler bestäms av den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> När värdet är <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>eller <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>, en ny loggfil skapas minst en gång varje dag eller en vecka och en datumstämpel ingår i den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>namn.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>      -Maximal storlek (i byte) för loggfilen bestäms av den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Om loggfilens storlek överskrider den här storleken ytterligare meddelanden i loggen är borttagna och, beroende på den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>egenskapen genereras ett undantag.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>Egenskapen anger hur mycket ledigt utrymme (i byte) måste vara tillgänglig.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Detta säkerställer att klassen FileLogTraceListener inte kommer att använda allt tillgängligt diskutrymme. Använd den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>att ange beteendet för log skriver när det finns mindre än <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>byte ledigt.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>       **Inställningar för loggfilen utdata** – <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>egenskap anger om den underliggande dataströmmen ska rensas automatiskt efter varje skrivning till loggfilen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>Egenskap anger om du vill lägga till meddelanden i den aktuella loggfilen om eller skriva dem till en ny loggfil.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>Egenskapen anger strängen som ska användas för avgränsar fält inom ett loggmeddelande.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>Egenskapen anger kodning som ska användas när du skapar en ny loggfil.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>       **Loggfilen utdata** – <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>och <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>metoder skriva meddelanden till loggfilen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Dessa metoder Kontrollera den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>egenskapen tillsammans med alla befintliga loggar med samma grundläggande namn att avgöra om en ny loggfil skapas.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>Metoden rensar alla meddelanden som finns i utdatabufferten till loggfilen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>Metod stänger loggfilen så att den kan användas av andra processer.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>       **Aktivera utgående** måste du aktivera spårning eller felsökning om du vill använda en spårningslyssnaren. Följande syntax är kompileraren specifika. Om du använder kompilerare än C# eller [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], finns i dokumentationen för din kompilator.      -Om du vill aktivera felsökning i C#, lägger du till den `/d:DEBUG` flaggan till kommandoraden kompileraren när du kompilerar koden eller du kan lägga till `#define DEBUG` överst i filen. I [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], lägga till den `/d:DEBUG=True` flaggan till kommandoraden kompileraren.      -Om du vill aktivera spårning i C#, lägger du till den `/d:TRACE` flaggan till kommandoraden kompileraren när du kompilera koden eller Lägg till `#define TRACE` överst i filen. I [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], lägga till den `/d:TRACE=True` flaggan till kommandoraden kompileraren.       Om du vill ställa in din lyssnare, redigera konfigurationsfilen för ditt program. I den här filen kan du lägga till en lyssnare, ange dess typ och ange dess parametrar, ta bort en lyssnare eller avmarkera alla lyssnare som tidigare har angetts av programmet. Konfigurationsfilen ska formateras som i följande exempel.       Att köra det här exemplet måste du ange fullständigt kvalificerat sammansättningsnamn. Information om hur du hämtar det fullständigt kvalificerade sammansättningsnamnet finns [sammansättningsnamn](~/add/includes/ajax-current-ext-md.md).      ```   <configuration>       <system.diagnostics>           <sharedListeners>               <add name=&quot;FileLog&quot;                   type=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener,                          Microsoft.VisualBasic, Version=8.0.0.0,                          Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,                          processorArchitecture=MSIL&quot;                    initializeData=&quot;FileLogWriter&quot;/>           </sharedListeners>       </system.diagnostics>   </configuration>   ```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class FileLogTraceListener : System.Diagnostics.TraceListener
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Initierar en ny instans av den <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> klass med standardnamnet."
  remarks: "Den här metoden anger namnet på den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klass FileLogTraceListener.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Du kan komma åt instansnamnet via den <xref:System.Diagnostics.TraceListener.Name%2A>egenskapen.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Initierar en ny instans av den <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> klass med det angivna namnet."
  remarks: "Den här metoden anger namnet på den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>undergrupp till `name`.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Du kan komma åt instansnamnet tänkte den <xref:System.Diagnostics.TraceListener.Name%2A>egenskapen.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Namnet på instansen-objekt."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  id: Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Anger om du vill lägga till utdata till den aktuella filen eller skriva till en ny fil."
  remarks: "När egenskapen Append är `False`, skrivs utdata till en ny fil. När egenskapen är `True`, utdata läggs till i den aktuella filen, såvida inte:-utdatafilen är låst av en annan process. I detta fall skapas en ny loggfil med ett versionsnummer som ingår i den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>namn.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      -Den aktuella filstorleken är större än vad den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>egenskap kan.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Ytterligare meddelanden i den här situationen är borttagna och, beroende på den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>egenskapen genereras ett undantag.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -Det befintliga filnamnet är för gammal enligt det schema för skapande av loggen som anges av den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> I så fall kan en ny loggfil skapas och Datumstämpeln ingår i den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>namn.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>"
  syntax:
    content: public bool Append { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, med <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> som anger att utdata läggs till den aktuella filen och <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> som anger att utdata skrivs till en ny fil. Standardinställningen för den här egenskapen är <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  id: AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Anger huruvida skrivning till filen loggström tömmer bufferten."
  remarks: "Den `False` inställningen för egenskapen AutoFlush ger bästa prestanda för de flesta program eftersom det är mer effektivt att skriva flera meddelanden till loggfilen i taget. Du kan använda den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>metod för att tömma alla meddelanden som finns i loggfilen utdata buffert.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Du kan också använda den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>metod som implicit rensningar dataströmmen innan du stänger loggfilen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>"
  syntax:
    content: public bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, med <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> som anger att dataströmmen rensas efter varje skrivning; annars loggposterna är buffrade och skrivs mer effektivt. Standardinställningen för den här egenskapen är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  id: BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar eller anger det grundläggande namnet för loggfilerna som används för att skapa loggfilen fullständiga namn."
  remarks: "The BaseFileName property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the BaseFileName property.  \n  \n-   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string BaseFileName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Det grundläggande namnet på loggfilerna. Standardvärdet är programmets produktnamn."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  id: Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Stänger den underliggande strömmen för den aktuella loggfilen och frigör alla resurser som är associerade med den aktuella dataströmmen."
  remarks: "Du behöver inte explicit anropa metoden Close eftersom den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klassen hanterar underliggande ångan.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  id: CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar eller anger loggfilskatalogen när den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>egenskapen <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>"
  remarks: "När egenskapen CustomLocation anges också anges <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>egenskapen <xref:Microsoft.VisualBasic.Logging.LogFileLocation>.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>       Egenskapen CustomLocation genereras ett undantagsfel om katalogen inte kan matchas."
  syntax:
    content: public string CustomLocation { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, som är namnet på katalogen för loggfilen. Standardinställningen för den här egenskapen är användarens katalog för programdata."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  id: Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar eller anger den avgränsare som används för att avgränsa fält inom ett loggmeddelande."
  remarks: "Egenskapen avgränsare kan du ändra standardavgränsaren."
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, vilket är avgränsaren som ska användas för fält inom ett loggmeddelande. Standardinställningen för den här egenskapen är FLIKEN tecken."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  id: DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Anger vad du ska göra när du skriver till loggfilen och det finns mindre ledigt utrymme än vad som anges av den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>"
  remarks: "När egenskapen DiskSpaceExhaustedBehavior har angetts <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>, loggmeddelanden har ignorerats om det inte finns tillräckligt med diskutrymme för reserverade.</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption> Detta är standardbeteendet och det förhindrar att enkla program misslyckas om disken blir full.       Mer robusta program kan ange egenskapen DiskSpaceExhaustedBehavior till <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>, och Lägg till `Try...Catch` block runt all kod som skriver till loggen</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>"
  syntax:
    content: public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;></xref>. Anger vad som ska göras vid försök att skriva till loggfilen fil och det finns mindre ledigt utrymme än vad som anges av den <> </> *> egenskap, eller om loggfilens storlek är större än vad den <> </> *> egenskap kan. Standardvärdet är <xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Stänger den underliggande dataströmmen och släpper eventuellt hanterade resurser."
  remarks: "När den `disposing` parametern är `True`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>referenser.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Den här metoden startar den `Dispose` metod för varje refererade till objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Frigör resurser för både hanterade och ohanterade. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> versioner ohanterad endast resurser."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  id: Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar eller anger den teckenkodning som ska använda när du skapar en ny loggfil."
  remarks: "När du lägger till text i en befintlig loggfil, används kodning för filen i stället för den kodning som anges av egenskapen kodning."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>, som kodning som ska användas när du skapar en ny loggfil.</xref:System.Text.Encoding> Standardvärdet för den här egenskapen är <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  id: Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Tömmer den underliggande dataströmmen som skriver till den aktuella loggfilen."
  remarks: "Använd metoden Flush för att skriva alla buffrade data till den aktuella loggfilen."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  id: FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar namnet på aktuella fullständig loggfilen."
  remarks: "The FullLogFileName property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log-file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where:  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string FullLogFileName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, som är namnet på aktuella fullständig loggfilen."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar de anpassade XML-konfigurationen attribut som stöds av spårningslyssnaren."
  remarks: "Anpassade attribut för som <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>kan användas i XML-konfigurationsfilen för att styra beteendet för en instans av <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klassen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Med hjälp av andra attribut gör att ett undantag i konfigurationen."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>matris som innehåller de attribut för XML-konfiguration som identifieras av den här lyssnaren."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  id: IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Anger om värdnamnet för datorn för loggning ska ingå i utdata."
  remarks: "Använd egenskapen för att konfigurera hur den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>och <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>metoder.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public bool IncludeHostName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Använd <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> om värd-ID ska ingå; Använd annars <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  id: Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar eller anger platsen för filerna."
  remarks: "Use the Location property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.  \n  \n|**Location value**|**Path**|  \n|------------------------|--------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data that is shared among all users, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\All Users\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the executable file that started the application.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data of a user, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\\\`username`\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path of the current system's temporary folder.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileLocation
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;></xref>, som är platsen där loggfilen. Standardvärdet är <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  id: LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Anger vilket datum som ska ingå i namnen på loggfilerna."
  remarks: "Tilldela någon av de <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>LogFileCreationSchedule-egenskapen för att ange vilket datum som ska ingå i namnen på loggfilerna som uppräkningsvärden.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>       Formatet för datum är åååå-MM-DD. Mer information om formatet till loggfilens namn finns <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      | **LogFileCreationSchedule värdet**|**datum i loggfilens namn**|   |---------------------------------------|-----------------------------------|   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Inkludera det aktuella datumet i loggfilens namn. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Inkludera inte datumet i loggfilens namn. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Ta med den första dagen i den aktuella veckan i loggfilens namn.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption><br /><br /> Veckan börjar med lördag. |"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;></xref>. Detta anger vilket datum som ska inkluderas i loggfilen namn. Standardvärdet är <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  id: MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar eller anger den största tillåtna storleken för loggfilen, i byte."
  remarks: "Använd den här egenskapen för att se till att filerna inte blir för stor.       Om loggen filstorlek (i byte) är större än värdet för den här egenskapen när den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klassen försök att skriva ett meddelande till loggen, ignoreras detta meddelande och felet är tyst eller ett undantagsfel genereras beroende på värdet för den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Annars skrivs meddelandet till loggen, om mängden ledigt utrymme (i byte) är mindre än <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>"
  syntax:
    content: public long MaxFileSize { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Detta är den högsta tillåtna loggfil-storleken i byte. Standardvärdet är 5000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "När den här egenskapen har angetts till ett värde mindre än 1 000."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  id: ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Hämtar eller anger mängden ledigt diskutrymme, i byte, krävs innan meddelanden kan skrivas till loggfilen."
  remarks: "Använd den här egenskapen för att se till att filerna inte helt fyller disken.       Om mängden ledigt utrymme (i byte) är mindre än värdet för den här egenskapen när den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klassen försök att skriva ett meddelande till loggen, ignoreras detta meddelande och felet är tyst eller ett undantagsfel genereras beroende på värdet för den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>egenskapen.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Annars skrivs meddelandet till loggen, om loggfilens storlek (i byte) som är större än <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>"
  syntax:
    content: public long ReserveDiskSpace { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Det här är mängden ledigt diskutrymme krävs. Standardvärdet är 10000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "När den här egenskapen har angetts till ett värde som är mindre än 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Skrivningar spårningsinformation, ett dataobjekt och händelseinformation till utdatafilen eller dataströmmen."
  remarks: "Den här metoden: 1.  Formaterar data och kontext information för utdata.      2.  Skapar en ny loggfil, om det behövs.      3.  Skriver informationen till loggfilen.       Mer information om hur du skapar nya loggfiler finns i <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       I följande tabell visas utdata fälten i den ordning de visas. Fälten avgränsas med strängen som den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>egenskapen anger och följs av en rad Begränsare.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Fältet**|**utdata villkoret**|**beskrivning**|   |---------------|--------------------------|---------------------|   | `source`| Alltid | Värdet för `name`. |   | `severity`| Alltid | Uppräkningsvärdet namnet på `eventType`. |   | `id`| Alltid | Strängrepresentation av `id`. |   | `message`| Alltid | Strängrepresentation av `data`. |   | `callStack`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.Callstack%2A>för `eventCache`. |   | `CorrelationID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>för `eventCache`. |   | `DateTime`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.DateTime%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `ProcessID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `ThreadID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>för `eventCache`. |   | `Timestamp`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `HostName`| När egenskapen <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>är `True`. | Namnet på datorn. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "En <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objekt som innehåller aktuellt process-ID, tråd-ID och stacken spårningsinformation."
    - id: source
      type: System.String
      description: "Ett namn på spårningskällan som den här metoden anropas."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "En av de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> uppräkningsvärden."
    - id: id
      type: System.Int32
      description: "En numerisk identifierare för händelsen."
    - id: data
      type: System.Object
      description: "Att generera spårningsdata."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Skrivningar spåra information, en uppsättning dataobjekt och händelseinformation till utdatafilen eller dataströmmen."
  remarks: "Den här metoden: 1.  Formaterar data och kontext information för 2-utdata.  Skapar en ny logg-fil, om det behövs 3.  Skriver informationen till loggfilen.       Mer information om hur du skapar nya loggfiler finns i <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Den här tabellen visas utdata fälten i den ordning de visas. Fälten avgränsas med strängen som den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>egenskapen anger och följs av en rad Begränsare.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Fältet**|**utdata villkoret**|**beskrivning**|   |---------------|--------------------------|---------------------|   | `source`| Alltid | Värdet för `name`. |   | `severity`| Alltid | Uppräkningsvärdet namnet på `eventType`. |   | `id`| Alltid | Strängrepresentation av `id`. |   | `message`| Alltid | Sträng som består av strängrepresentation av alla element i `data`, åtskilda med <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>. |   | `callStack`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.Callstack%2A>för `eventCache`. |   | `CorrelationID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>för `eventCache`. |   | `DateTime`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.DateTime%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Invariabla används för Strängkonverteringen. |   | `ProcessID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `ThreadID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>för `eventCache`. |   | `Timestamp`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `HostName`| När egenskapen <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>är `True`. | Namnet på datorn. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "En <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objekt som innehåller aktuellt process-ID, tråd-ID och stacken spårningsinformation."
    - id: source
      type: System.String
      description: "Namnet på spårningskällan som den här metoden anropas."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "En av de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> uppräkningsvärden."
    - id: id
      type: System.Int32
      description: "En numerisk identifierare för händelsen."
    - id: data
      type: System.Object[]
      description: "En matris med objekt som ska generera som data."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Skrivningar spåra information, ett meddelande och händelse information till utdatafilen eller dataströmmen."
  remarks: "Den här metoden: 1.  Formaterar data och kontext information för utdata.      2.  Skapar en ny loggfil, om det behövs.      3.  Skriver informationen till loggfilen.       Mer information om hur du skapar nya loggfiler finns i <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Den här tabellen visas utdata fälten i den ordning de visas. Fälten avgränsas med strängen som den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>egenskapen anger och följs av en rad Begränsare.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Fältet**|**utdata villkoret**|**beskrivning**|   |---------------|--------------------------|---------------------|   | `source`| Alltid. | Värdet för `name`. |   | `severity`| Alltid. | Uppräkningsvärdet namnet på `eventType`. |   | `id`| Alltid. | Strängrepresentation av `id`. |   | `message`| Alltid. | Värdet för `message`. |   | `callStack`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.Callstack%2A>för `eventCache`. |   | `CorrelationID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>för `eventCache`. |   | `DateTime`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.DateTime%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `ProcessID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `ThreadID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>för `eventCache`. |   | `Timestamp`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `HostName`| När egenskapen <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>är `True`. | Namnet på datorn. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "En <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objekt som innehåller aktuellt process-ID, tråd-ID och stacken spårningsinformation."
    - id: source
      type: System.String
      description: "Ett namn på spårningskällan som den här metoden anropas."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "En av de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> uppräkningsvärden."
    - id: id
      type: System.Int32
      description: "En numerisk identifierare för händelsen."
    - id: message
      type: System.String
      description: "Ett meddelande att skriva."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Skrivningar spåra information, en formaterad matris av objekt och händelseinformation till utdatafilen eller dataströmmen."
  remarks: "Den här metoden: 1.  Formaterar data och kontext information för utdata.      2.  En ny en ny loggfil skapas, om det behövs.      3.  Skriver informationen till loggfilen.       Mer information om hur du skapar ny loggfil finns <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Den här tabellen visas utdata fälten i den ordning de visas. Fälten avgränsas med strängen som den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>egenskapen anger och följas av en rad Begränsare.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Fältet**|**utdata villkoret**|**beskrivning**|   |---------------|--------------------------|---------------------|   | `source`| Alltid | Värdet för `name`. |   | `severity`| Alltid | Uppräkningsvärdet namnet på `eventType`. |   | `id`| Alltid | Strängrepresentation av `id`. |   | `message`| Alltid | Data i `args` formaterad med den `format` sträng och med den invariabla kulturen för strängkonvertering. |   | `callStack`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.Callstack%2A>för `eventCache`. |   | `CorrelationID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>för `eventCache`. |   | `DateTime`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.DateTime%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `ProcessID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `ThreadID`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Egenskapen <xref:System.Diagnostics.TraceEventCache.ThreadId%2A>för `eventCache`. |   | `Timestamp`| När flaggan <xref:System.Diagnostics.TraceOptions>har angetts i egenskapen <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Den sträng som innehåller den <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>egenskapen för `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Invariabla används för Strängkonverteringen. |   | `HostName`| När egenskapen <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>är `True`. | Namnet på datorn. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "En <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objekt som innehåller aktuellt process-ID, tråd-ID och stacken spårningsinformation."
    - id: source
      type: System.String
      description: "Ett namn på spårningskällan som den här metoden anropas."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "En av de <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> uppräkningsvärden."
    - id: id
      type: System.Int32
      description: "En numerisk identifierare för händelsen."
    - id: format
      type: System.String
      description: "En formatsträng som innehåller noll eller flera format artiklar som motsvarar objekt i den `args` matris."
    - id: args
      type: System.Object[]
      description: "En <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> matris som innehåller noll eller flera objekt att formatera."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Skriver ett ordagrant meddelande till disk utan ytterligare kontextinformation."
  remarks: "Metoden Write skriver ett visst meddelande till loggfilen utan ytterligare kontextinformation.       Använd någon av de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>metoder med kontextinformation i loggutdata.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Det anpassade meddelandet för att skriva."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Skriver ett ordagrant meddelande till disk, följt av den aktuella raden Begränsare utan ytterligare kontextinformation."
  remarks: "Metoden WriteLine skriver ett visst meddelande till loggfilen utan ytterligare kontextinformation.       Använd någon av de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>metoder med kontextinformation i loggutdata.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Det anpassade meddelandet för att skriva."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: DiskSpaceExhaustedOption
  nameWithType: DiskSpaceExhaustedOption
  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.LogFileLocation
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileLocation
  nameWithType: LogFileLocation
  fullName: Microsoft.VisualBasic.Logging.LogFileLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileCreationScheduleOption
  nameWithType: LogFileCreationScheduleOption
  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener.FileLogTraceListener
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close
  nameWithType: FileLogTraceListener.Close
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: FileLogTraceListener.Dispose
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush
  nameWithType: FileLogTraceListener.Flush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: FileLogTraceListener.GetSupportedAttributes
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: FileLogTraceListener.TraceData
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: FileLogTraceListener.TraceEvent
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write
  nameWithType: FileLogTraceListener.Write
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: FileLogTraceListener.WriteLine
