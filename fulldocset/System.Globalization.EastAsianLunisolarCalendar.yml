### YamlMime:ManagedReference
items:
- uid: System.Globalization.EastAsianLunisolarCalendar
  id: EastAsianLunisolarCalendar
  children:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: EastAsianLunisolarCalendar
  nameWithType: EastAsianLunisolarCalendar
  fullName: System.Globalization.EastAsianLunisolarCalendar
  type: Class
  summary: "Representerar en kalender som delar upp tid i månader, dagar, år och epoker och har datum som är baserade på cykler sol och månen."
  remarks: "Klassen EastAsianLunisolarCalendar stöder sexagenary cykel år (som upprepas var 60 år) utöver kryssrutan år och månkalender månader. Varje år kryssrutan i kalendern är associerad med ett Sexagenary år (finns <xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>), Celestial stam (finns <xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A>), och en land gren (se <xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A>).</xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A> </xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A> </xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>      > [!NOTE] > Information om hur du använder den <xref:System.Globalization.HebrewCalendar>klass och det andra kalender klasser i .NET Framework, se [arbeta med kalendrar](~/add/includes/ajax-current-ext-md.md).</xref:System.Globalization.HebrewCalendar>       Ett år kan ha ett skottår månad efter varje månad och en månad kan ha en leap dag. Till exempel den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar ett positivt heltal som anger vilken månad som är associerad med ett visst datum.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Om det finns en leap månad mellan åttonde och nionde månader år, den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar 8 för den åttonde månaden, 9 för leap åttonde månad och 10 för den nionde månaden.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       Varje <xref:System.Globalization.CultureInfo>stöder en uppsättning kalendrar.</xref:System.Globalization.CultureInfo> För närvarande används ingen sol-och månkalender kalender klasser som härleds från EastAsianLunisolarCalendar av någon av kulturer som stöds av <xref:System.Globalization.CultureInfo>klass.</xref:System.Globalization.CultureInfo> Den här klassen och de som härleds från den kan därför användas för bara för att beräkna datum i östasiatiska sol-och månkalender kalendrar. Den här klassen stöder flera &quot;Hämta&quot; metoder för att beskriva en <xref:System.DateTime>i termer som används av sol-och månkalender kalendrar och <xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A>metod för att konvertera från sol-och månkalender kalenderdata till en <xref:System.DateTime>.</xref:System.DateTime> </xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A> </xref:System.DateTime>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EastAsianLunisolarCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar det datum som infaller det angivna antalet månader från det angivna datumet."
  remarks: "Den dag-delen av den resulterande <xref:System.DateTime>påverkas om den resulterande dagen inte är en giltig dag i den resulterande månaden resulterande.</xref:System.DateTime> I det här fallet ändras dag-del till den sista giltiga dagen i den resulterande månaden resulterande. År tillhör den resulterande <xref:System.DateTime>påverkas om den resulterande månaden är utanför året i angivet <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Den här implementeringen stöder endast den aktuella era. Därför <xref:System.ArgumentException>genereras om resulterande året ligger utanför era inom den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Den tid på dag delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Om den angivna månaden oktober som har 31 dagar, den angivna dagen är exempelvis trettio första dagen i månaden och värdet för den `months` parameter är 6, resulterande året är en mer än det angivna året, månaden resulterande April, och den resulterande dagen trettionde dag, vilket är den sista dagen i April.       Om värdet för den `months` parameter är negativ, den resulterande som <xref:System.DateTime>är äldre än den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen för det returnerade <xref:System.DateTime>värdet alltid är lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Du kan behålla den <xref:System.DateTime.Kind%2A>-egenskapen för den `time` parameter genom att anropa den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som visas i följande exempel.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/d86a04c2-1ef4-4a8d-ab7c-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/d86a04c2-1ef4-4a8d-ab7c-_1.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>som ska läggas till `months`.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Antalet månader att lägga till."
    return:
      type: System.DateTime
      description: "En ny <xref:System.DateTime>som resultat av att lägga till det angivna antalet månader i <code> time </code> parameter.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultatet ligger utanför intervallet som stöds av <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>är mindre än-120000 eller större än 120000.       - eller - <code>time</code> är mindre än <xref:System.Globalization.Calendar.MinSupportedDateTime*> eller större än <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar det datum som infaller det angivna antalet år från det angivna datumet."
  remarks: "Den dag-delen av den resulterande <xref:System.DateTime>påverkas om den resulterande dagen inte är en giltig dag i den resulterande månaden resulterande.</xref:System.DateTime> I det här fallet ändras dag-del till den sista giltiga dagen i den resulterande månaden resulterande. Den månad delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Den här implementeringen stöder endast den aktuella era. Därför <xref:System.ArgumentException>genereras om resulterande året ligger utanför era inom den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Den tid på dag delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Till exempel har februari 28 dagar utom under skottår när det har 29 dagar. Om det angivna datumet är den 29 dagen i februari under ett skottår och värdet för den `years` parametern är 1 blir det resulterande datumet 20 åttonde dagen i februari följande år.       Om `years` är negativ, den resulterande som <xref:System.DateTime>är äldre än den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen för det returnerade <xref:System.DateTime>värdet alltid är lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Du kan behålla den <xref:System.DateTime.Kind%2A>-egenskapen för den `time` parameter genom att anropa den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som visas i följande exempel.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/6f9d0244-83a4-4a86-acea-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/6f9d0244-83a4-4a86-acea-_1.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>som ska läggas till `years`.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Antalet år för att lägga till."
    return:
      type: System.DateTime
      description: "En ny <xref:System.DateTime>som resultat av att lägga till det angivna antalet år som den <code> time </code> parameter.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultatet ligger utanför intervallet som stöds av <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>är mindre än <xref:System.Globalization.Calendar.MinSupportedDateTime*> eller större än <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
  fullName: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar ett värde som anger om den aktuella kalendern är sol-baserade, lunar-baserad eller en kombination av båda."
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Returnerar alltid <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  id: GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetCelestialStem(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar celestial stam för den angivna år i rutinen sexagenary (60 år)."
  syntax:
    content: public int GetCelestialStem (int sexagenaryYear);
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: "Ett heltal mellan 1 och 60 som representerar ett år i sexagenary cykeln."
    return:
      type: System.Int32
      description: "En siffra mellan 1 och 10."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sexagenaryYear</code>är mindre än 1 eller större än 60."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar dagen i månaden i det angivna datumet."
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen i månaden som angetts i den <code> time </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar veckodagen i det angivna datumet."
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "En av de <xref:System.DayOfWeek>värden som representerar dagen i veckan som anges i den <code> time </code> parameter.</xref:System.DayOfWeek>"
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>är mindre än <xref:System.Globalization.Calendar.MinSupportedDateTime*> eller större än <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar dagen på året i det angivna datumet."
  remarks: "Dag på året definieras som antalet dagar från den första dagen på året. Till exempel GetDayOfYear för den första dagen i den första månaden returnerar 1 och GetDayOfYear för den sista dagen i den senaste månaden returnerar det totala antalet dagar i år, vilket är det samma värde som returneras av <xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>.</xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal från 1 till 354 till ett vanligt år eller 1 till 384 under ett skottår som representerar dagen på året som anges i den <code> time </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar antalet dagar i den angivna månaden för det angivna året och era."
  remarks: "Säljbarkvalitet `month` parametern är den andra månaden, metoden GetDaysInMonth returnerar 28 eller 29, beroende på om den `year` parameter är ett skottår."
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 i ett vanligt år eller 1 till och med 13 under ett skottår, som representerar månaden."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet dagar i den angivna månaden för det angivna året och era."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, eller <code>era</code> ligger utanför intervallet som denna kalender stöder."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar antalet dagar i angivna år och era."
  remarks: "Metoden GetDaysInYear returnerar 365 eller 366, beroende på om den `year` parameter är ett skottår."
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet dagar i det angivna året och era."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>eller <code>era</code> ligger utanför intervallet som denna kalender stöder."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar leap månaden för det angivna året och era."
  remarks: "I en kalender som har stöd för en månad leap kan leap månaden inträffa efter en viss månad eller efter en månad i ett år. Till exempel den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar ett tal från 1 till och med 13 som anger den månad som är associerad med ett visst datum.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Om det finns en leap månad mellan åttonde och nionde månader år, den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar 8 för den åttonde månaden, 9 för leap åttonde månad och 10 för den nionde månaden.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Ett positivt heltal mellan 1 och 13 som anger leap månaden i det angivna året och era.       - eller - noll om denna kalender inte stöder leap i månaden, eller om den <code> year </code> och <code> era </code> parametrar inte anger ett skottår."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar månaden i det angivna datumet."
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal från 1 till 13 som representerar månad som anges i den <code> time </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar antalet månader i angivna år och era."
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet månader under det angivna året angivna era. Det returnera värdet är 12 månader i en gemensam år eller 13 månader under ett skottår."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>eller <code>era</code> ligger utanför intervallet som denna kalender stöder."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  id: GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetSexagenaryYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar år i rutinen sexagenary (60 år) som motsvarar det angivna datumet."
  syntax:
    content: public virtual int GetSexagenaryYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "En <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett tal från 1 till 60 i sexagenary cykeln som motsvarar den <code> date </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  id: GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetTerrestrialBranch(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar grenen land för den angivna år i rutinen sexagenary (60 år)."
  syntax:
    content: public int GetTerrestrialBranch (int sexagenaryYear);
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: "Ett heltal mellan 1 och 60 som representerar ett år i sexagenary cykeln."
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 12."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sexagenaryYear</code>är mindre än 1 eller större än 60."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar året i det angivna datumet."
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal som representerar året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna datumet i den angivna era är ett skottår dag."
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal från 1 till och med 13 som motsvarar månaden."
    - id: day
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna dagen är leap om dagen. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, eller <code>era</code> ligger utanför intervallet som denna kalender stöder."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om den angivna månaden i det angivna året och era är ett skottår månad."
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal från 1 till och med 13 som motsvarar månaden."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <code> month </code> parameter är en leap månad, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, eller <code>era</code> ligger utanför intervallet som denna kalender stöder."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna året angivna era är ett skottår."
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna året är ett skottår; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>eller <code>era</code> ligger utanför intervallet som denna kalender stöder."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar en <xref:System.DateTime>som har angetts till angivet datum, tid och era.</xref:System.DateTime>"
  remarks: "Metoden ToDateTime kan konvertera ett datum i den aktuella kalendern till ett datum i gregoriansk kalender. Gregorianskt datum kan därefter användas, till exempel att jämföra datum i olika kalendrar eller skapa ett motsvarande datum i en viss kalender."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal från 1 till och med 13 som motsvarar månaden."
    - id: day
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen."
    - id: hour
      type: System.Int32
      description: "Ett heltal mellan 0 och 23 som representerar timmen."
    - id: minute
      type: System.Int32
      description: "Ett heltal mellan 0 och 59 som representerar minut."
    - id: second
      type: System.Int32
      description: "Ett heltal mellan 0 och 59 som representerar sekund."
    - id: millisecond
      type: System.Int32
      description: "Ett heltal mellan 0 och 999 som representerar millisekunder."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>som har angetts till angivet datum, tid och era.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, <code>millisecond</code>, eller <code>era</code> ligger utanför intervallet som denna kalender stöder."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Konverterar år till ett fyrsiffriga år."
  remarks: "Metoden ToFourDigitYear använder den <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>egenskapen fastställa lämpliga talet.</xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>       ToFourDigitYear stöder ett årtal eller ett fyrsiffriga år. Skicka ett årtal värde (mindre än 100) medför metoden att konvertera värdet till ett fyrsiffrigt värde enligt den <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>-värde som representerar på lämplig talet.</xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A> Om programmet tillhandahåller ett årtal-värde som ligger inom intervallet kalender som stöds till ToFourDigitYear, returnerar metoden faktiska indatavärdet. Om programmet tillhandahåller ett fyrsiffrigt-värde som är utanför intervallet som stöds kalender, eller om det finns ett negativt värde, genereras metoden ett undantag."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett två siffror eller fyra siffror heltal som representerar året ska konverteras."
    return:
      type: System.Int32
      description: "Ett heltal som innehåller fyra siffror representation av den <code> year </code> parameter."
  overload: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför intervallet som denna kalender stöder."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar eller anger det senaste året för ett urval av 100 år som representeras av ett 2 årtal."
  remarks: "Den här egenskapen gör en 2 årtal korrekt översättas till ett 4-siffrig år. Till exempel i gregoriansk kalender är om den här egenskapen anges till 2029, 100 år intervallet från 1930 till 2029. Därför tolkas 30 2-siffrig värdet som 1930, medan 29 2-siffrig värdet tolkas som 2029.       Det första värdet i den här egenskapen är härledd från inställningarna i den nationella inställningar och språkinställningar alternativ delen av Kontrollpanelen. Denna information kan dock ändra under <xref:System.AppDomain>.</xref:System.AppDomain> Den <xref:System.Globalization.EastAsianLunisolarCalendar>klassen upptäcker inte ändringar i systeminställningarna för automatiskt.</xref:System.Globalization.EastAsianLunisolarCalendar>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Det senaste året för ett intervall om 100 år som representeras av ett 2 årtal."
  overload: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Aktuellt <xref href=&quot;System.Globalization.EastAsianLunisolarCalendar&quot;> </xref> är skrivskyddad."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet i en set-åtgärd är mindre än 99 eller större än den maximala stöds år i den aktuella kalendern."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
  fullName: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetCelestialStem(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetSexagenaryYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetTerrestrialBranch(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddMonths
  nameWithType: EastAsianLunisolarCalendar.AddMonths
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddYears
  nameWithType: EastAsianLunisolarCalendar.AddYears
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetCelestialStem
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonth
  nameWithType: EastAsianLunisolarCalendar.GetMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetSexagenaryYear
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetTerrestrialBranch
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetYear
  nameWithType: EastAsianLunisolarCalendar.GetYear
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: EastAsianLunisolarCalendar.ToDateTime
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
