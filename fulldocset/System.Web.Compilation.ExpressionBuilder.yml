### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ExpressionBuilder
  id: ExpressionBuilder
  children:
  - System.Web.Compilation.ExpressionBuilder.#ctor
  - System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder
  fullName: System.Web.Compilation.ExpressionBuilder
  type: Class
  summary: "Utvärderar uttryck under tolkning av sidan."
  remarks: "Klassen ExpressionBuilder är basklass för uttrycksbyggare, som den <xref:System.Web.Compilation.AppSettingsExpressionBuilder>klass som skapar koden uttryck under parsning av sidan.</xref:System.Web.Compilation.AppSettingsExpressionBuilder>       Uttrycksbyggare parsa deklarativ uttryck och skapa kod för att hämta värden som är bundet till en kontrollegenskap. I nr kompilera scenarier utvärderar en uttrycksbyggare som har stöd för en funktion för Nej kompilera uttryck under körning.       När sidan parsern påträffar ett uttryck som avgränsas med strängen `<%$ %>`, skapas en uttrycksbyggare för uttryck baserat på prefixet i strängen. Prefixet är del av den sträng som är till vänster om kolon (:). Till exempel när parsern påträffar strängen `<%$ ConnectionStrings:MessageDB %>`, skapas en <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>objektet.</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> Prefix som är associerade med uttrycksbyggare i Web.config-filen i den <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>avsnitt.</xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>       Höger sida av deklarativ uttryck har överförts till expression-verktyg för utvärdering. Åsidosätta den <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>metod för att generera kod kompileras med sidan.</xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>       Om du vill anpassat uttryck builder är aktiv på sidor som inte kompilera, måste du även åsidosätta den <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metod för att returnera ett objekt som representerar resultatet av uttrycket.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Du måste även åsidosätta den <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>egenskap som anger anpassade uttryck builder stöder Nej kompilera sidor.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>       Du kan definiera en uppsättning egenskaper och metoder för att välja och utvärderingen av ett uttryck som är kopplad till en kontrollegenskap i designläge genom att implementera en uttrycksredigerare. Redigeraren är markerat i uttrycksbyggare via klassnivå metadata. Mer information finns i <xref:System.Web.UI.Design.ExpressionEditor>.</xref:System.Web.UI.Design.ExpressionEditor>"
  example:
  - "The following code examples demonstrate how to build a custom expression builder by implementing the ExpressionBuilder abstract class. This implementation of ExpressionBuilder returns an evaluated statement that is passed to the expression. To run this example, you must first register the custom expression builder in the Web.config file. The first code example demonstrates how to register the custom expression builder in the Web.config file.  \n  \n```  \n<configuration>  \n    <system.web>  \n       <compilation>  \n          <expressionBuilders>  \n              <add expressionPrefix=\"MyCustomExpression\"  \n               type=\"MyCustomExpressionBuilder\"/>  \n          </expressionBuilders>  \n       </compilation>  \n    </system.web>  \n</configuration>  \n```  \n  \n The second code example demonstrates how to reference the expression in an .aspx file.  \n  \n```  \n<asp:Label ID=\"Label1\" runat=\"server\"   \nText=\"<%$ MyCustomExpression:Hello, world! %>\" />  \n```  \n  \n The third code example demonstrates how to develop a customized expression builder by deriving from ExpressionBuilder. To run this code example, you must place the class in the App_Code folder.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract class ExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> klass."
  remarks: "Eftersom den <xref:System.Web.Compilation.ExpressionBuilder>klassen är abstrakt, du kan inte skapa en instans av <xref:System.Web.Compilation.ExpressionBuilder>direkt med hjälp av konstruktorn ExpressionBuilder.</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: protected ExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returnerar ett objekt som representerar ett uttryck som utvärderas när åsidosätts i en härledd klass."
  remarks: "Om du vill att din <xref:System.Web.Compilation.ExpressionBuilder>objektet ska vara aktiv på en sida som stöder Nej kompilera-funktionen kan du åsidosätta metoden EvaluateExpression och <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>egenskapen.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> </xref:System.Web.Compilation.ExpressionBuilder> Metoden EvaluateExpression ska returnera utvärderingen av uttrycket för aktuella."
  example:
  - "The following code example demonstrates how to use the overridden EvaluateExpression method to return an evaluated expression.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "Det objekt som innehåller uttrycket."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Det objekt som representerar information om egenskapen bunden till av uttrycket."
    - id: parsedData
      type: System.Object
      description: "Det objekt som innehåller parsa data som returneras av <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Sammanhangsberoende information om utvärderingen av uttrycket."
    return:
      type: System.Object
      description: "Ett objekt som representerar det utvärderade uttrycket; Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om inheritor inte implementerar EvaluateExpression."
  overload: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returnerar kod som används under körning av sidan för att hämta det utvärderade uttrycket när åsidosätts i en härledd klass."
  remarks: "Klasser som ärver från den <xref:System.Web.Compilation.ExpressionBuilder>klassen måste implementera GetCodeExpression abstrakt metod.</xref:System.Web.Compilation.ExpressionBuilder>"
  example:
  - "The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the GetCodeExpression method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Det objekt som representerar information om egenskapen bunden till av uttrycket."
    - id: parsedData
      type: System.Object
      description: "Det objekt som innehåller parsa data som returneras av <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Sammanhangsberoende information om utvärderingen av uttrycket."
    return:
      type: System.CodeDom.CodeExpression
      description: "En <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> som används för egenskapstilldelning."
  overload: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returnerar ett objekt som representerar det parsade uttrycket när åsidosätts i en härledd klass."
  remarks: "När åsidosätts i härledda klassen metoden Parsar uttrycket och returnerar det som ett objekt som kan användas som den `parsedData` parameter i en <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>eller <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metod.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> </xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>"
  syntax:
    content: public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "Värdet för deklarativ uttrycket."
    - id: propertyType
      type: System.Type
      description: "Typen för egenskapen bunden till av uttrycket."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Sammanhangsberoende information om utvärderingen av uttrycket."
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller den parsa representationen av uttrycket; annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om ParseExpression inte är implementerad.</xref:System.Object>"
  overload: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "När åsidosätts i en härledd klass returnerar ett värde som anger om aktuellt <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> objekt stöder Nej kompilera sidor."
  remarks: "Standardvärdet för egenskapen SupportsEvaluate är `false`. För att stödja Nej kompilera sidor, måste du åsidosätta både den <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>metoden och egenskapen SupportsEvaluate.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>"
  example:
  - "The following code example demonstrates how to use the SupportsEvaluate property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> stöder uttrycksutvärdering, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder.ExpressionBuilder
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
