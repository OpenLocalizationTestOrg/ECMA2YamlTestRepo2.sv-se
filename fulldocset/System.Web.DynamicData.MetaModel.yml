### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaModel
  id: MetaModel
  children:
  - System.Web.DynamicData.MetaModel.#ctor
  - System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  - System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  - System.Web.DynamicData.MetaModel.Default
  - System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  - System.Web.DynamicData.MetaModel.EntityTemplateFactory
  - System.Web.DynamicData.MetaModel.FieldTemplateFactory
  - System.Web.DynamicData.MetaModel.FilterFactory
  - System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  - System.Web.DynamicData.MetaModel.GetModel(System.Type)
  - System.Web.DynamicData.MetaModel.GetTable(System.String)
  - System.Web.DynamicData.MetaModel.GetTable(System.Type)
  - System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.ResetRegistrationException
  - System.Web.DynamicData.MetaModel.Tables
  - System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.MetaModel.VisibleTables
  langs:
  - csharp
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
  type: Class
  summary: "Representerar en eller flera databaser som används av ASP.NET dynamiska Data."
  remarks: "Typen metamodellen kan du registrera en eller flera datakontexter för en dynamisk Data webbprogram.       En datakontext är ett objekt som representerar en databasanslutning. En datakontext har åtkomst till en datamodell som representerar en databas som är tillgängliga via anslutningen. En datamodell är ett objekt som representerar databasenheter data som CLR-typer. Dynamiska Data stöder datamodeller baserade på LINQ to SQL och ADO.NET Entity Framework.       I [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], du kan generera datamodellen typer med hjälp av den **LINQ to SQL klasser** mall eller **ADO.NET Entity Data Model** mall. Dessa mallar Använd Object relationella Designer (O/R Designer) för LINQ to SQL-modell eller ADO.NET Entity Data Model Designer (Entity Designer) för Entity Framework-modellen."
  example:
  - "The following example shows how to use MetaModel type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:  \n  \n-   Get the data model for the default data context.  \n  \n-   Get the data model for a specified data context.  \n  \n-   Evaluate the routing path (determine the URL) for a specified table.  \n  \n The example consists of a page and its code-behind file.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_1.cs)]\n [!code-cs[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_1.aspx)]\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx#1)]\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PlaceHolder.vb#1)]  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#2](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_2.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#2](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#2)]  \n  \n To compile the example, you need the following:  \n  \n-   [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] or [!INCLUDE[vwd_exp_dev10_long](~/add/includes/vwd-exp-dev10-long-md.md)].  \n  \n-   A Dynamic Data Web site. For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](~/add/includes/ajax-current-ext-md.md).  \n  \n See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel)."
  syntax:
    content: public class MetaModel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: MetaModel()
  nameWithType: MetaModel.MetaModel()
  fullName: System.Web.DynamicData.MetaModel.MetaModel()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Instansierar en ny instans av den <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> klass."
  remarks: "Du vanligtvis anropa konstruktorn metamodellen i den `Application_Start` metod för filen Global.asax."
  example:
  - "The following example shows how to use the MetaModel constructor to perform the following tasks:  \n  \n-   Instantiate the <xref:System.Web.DynamicData.MetaModel> class.  \n  \n-   Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/global.asax.vb#99)]\n [!code-cs[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/csharp/m-system.web.dynamicdata_4_1.cs)]"
  syntax:
    content: public MetaModel ();
    parameters: []
  overload: System.Web.DynamicData.MetaModel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: MetaModel(Boolean)
  nameWithType: MetaModel.MetaModel(Boolean)
  fullName: System.Web.DynamicData.MetaModel.MetaModel(Boolean)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Instansierar en ny instans av den <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> klass."
  remarks: "Den här konstruktorn avgör om datamodellen är registrerad globalt så att de kan hämtas med hjälp av den <xref:System.Web.DynamicData.MetaModel.GetModel%2A>metoden.</xref:System.Web.DynamicData.MetaModel.GetModel%2A> På så sätt kan du skapa flera modeller och använda samma entitetstyper samtidigt typen konflikter.       Du vanligtvis anropa konstruktorn metamodellen i den `Application_Start` metod för filen Global.asax."
  syntax:
    content: public MetaModel (bool registerGlobally);
    parameters:
    - id: registerGlobally
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att ange att modellen registreras globalt; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  id: CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: CreateTable(TableProvider)
  nameWithType: MetaModel.CreateTable(TableProvider)
  fullName: System.Web.DynamicData.MetaModel.CreateTable(TableProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Instansierar en <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> objekt."
  remarks: "Metoden CreateTable kan åsidosättas om du vill skapa en instans av en härledd typ."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);
    parameters:
    - id: provider
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "Provider för tabellen."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "En ny instans av tabellen."
  overload: System.Web.DynamicData.MetaModel.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.Default
  id: Default
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: Default
  nameWithType: MetaModel.Default
  fullName: System.Web.DynamicData.MetaModel.Default
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar den första förekomsten av en datamodell som skapats av programmet."
  remarks: "Den här egenskapen gör det enkelt att referera till datamodellen instansen. Om programmet använder flera modeller, måste du ange egna sätt att lagra referenser till ytterligare data-modeller. Om du vill söka efter en specifik datamodell anropa den <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName>metoden.</xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use the Default property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.  \n  \n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/csharp/p-system.web.dynamicdata_5_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#22)]"
  syntax:
    content: public static System.Web.DynamicData.MetaModel Default { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Datamodellen instans."
  overload: System.Web.DynamicData.MetaModel.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  id: DynamicDataFolderVirtualPath
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
  fullName: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar eller anger den virtuella sökvägen till mappen DynamicData på webbplatsen."
  remarks: "Den här egenskapen kan du ändra den virtuella sökvägen till mappen DynamicData. Standardvärdet är &quot;~/DynamicData&quot;."
  syntax:
    content: public string DynamicDataFolderVirtualPath { get; set; }
    return:
      type: System.String
      description: "Den virtuella sökvägen till mappen DynamicData."
  overload: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  id: EntityTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar eller anger den <xref href=&quot;System.Web.DynamicData.EntityTemplateFactory&quot;> </xref> objekt som är kopplade till modellen."
  syntax:
    content: public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }
    return:
      type: System.Web.DynamicData.EntityTemplateFactory
      description: "En instans av den <xref href=&quot;System.Web.DynamicData.EntityTemplateFactory&quot;> </xref> objekt som är kopplade till modellen."
  overload: System.Web.DynamicData.MetaModel.EntityTemplateFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  id: FieldTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar eller anger en anpassad <xref href=&quot;System.Web.DynamicData.IFieldTemplateFactory&quot;> </xref> gränssnitt."
  remarks: "Den <xref:System.Web.DynamicData.IFieldTemplateFactory>gränssnittet kan du ange vilka fält mallar skapas för tabellkolumnerna.</xref:System.Web.DynamicData.IFieldTemplateFactory>"
  syntax:
    content: public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }
    return:
      type: System.Web.DynamicData.IFieldTemplateFactory
      description: "Den <xref href=&quot;System.Web.DynamicData.IFieldTemplateFactory&quot;> </xref> gränssnitt."
  overload: System.Web.DynamicData.MetaModel.FieldTemplateFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.FilterFactory
  id: FilterFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
  fullName: System.Web.DynamicData.MetaModel.FilterFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar eller anger den <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> objekt som är kopplade till modellen."
  syntax:
    content: public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }
    return:
      type: System.Web.DynamicData.FilterFactory
      description: "En instans av den <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> objekt som är kopplade till modellen."
  overload: System.Web.DynamicData.MetaModel.FilterFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  id: GetActionPath(System.String,System.String,System.Object)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetActionPath(String,String,Object)
  nameWithType: MetaModel.GetActionPath(String,String,Object)
  fullName: System.Web.DynamicData.MetaModel.GetActionPath(String,String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar åtgärdssökvägen till som är associerad med en viss tabell."
  remarks: "Vägen bestäms av kombinationen av tabellnamnet och åtgärden.       [Kör](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) online exempel på den här funktionen."
  example:
  - "The following example shows how to use the GetActionPath method to evaluate the routing path (determine the URL) for a specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel>.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#23](~/add/codesnippet/csharp/ccd53684-51b1-498b-9a9e-_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#23](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#23)]"
  syntax:
    content: public string GetActionPath (string tableName, string action, object row);
    parameters:
    - id: tableName
      type: System.String
      description: "Namnet på den tabell som åtgärden gäller för."
    - id: action
      type: System.String
      description: "Åtgärden som ska användas i tabellen."
    - id: row
      type: System.Object
      description: "Ett objekt som representerar en enda rad med data i en tabell. `row`används för att ange värden för frågesträng parametrar."
    return:
      type: System.String
      description: "Den URL som är associerad med vägen."
  overload: System.Web.DynamicData.MetaModel.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)
  id: GetModel(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetModel(Type)
  nameWithType: MetaModel.GetModel(Type)
  fullName: System.Web.DynamicData.MetaModel.GetModel(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar datamodellen instansen för den angivna kontexten."
  remarks: ''
  example:
  - "The following example shows how to use the GetModel method to perform the following tasks:  \n  \n-   Getting the default data model.  \n  \n-   Getting the data model specified by the passed context type.  \n  \n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/csharp/m-system.web.dynamicdata_1_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#22)]"
  syntax:
    content: public static System.Web.DynamicData.MetaModel GetModel (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "Typ av datakontexten som definierats i datamodellen."
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Datamodellen som är associerad med den angivna kontexttypen."
  overload: System.Web.DynamicData.MetaModel.GetModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)
  id: GetTable(System.String)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(String)
  nameWithType: MetaModel.GetTable(String)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar metadata som associeras med den angivna tabellen."
  remarks: "Namnet som unikt identifierar en tabell i datamodellen och används för att generera relaterade URL: en för routning."
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#42](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#42)]\n [!code-cs[System.Web.DynamicData.MetaModel#42](~/add/codesnippet/csharp/m-system.web.dynamicdata_2_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);
    parameters:
    - id: uniqueTableName
      type: System.String
      description: "Det namn som identifierar tabellen i datamodellen."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Metadata som beskriver den angivna tabellen."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Namnet hittades inte i datamodellen."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)
  id: GetTable(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(Type)
  nameWithType: MetaModel.GetTable(Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar metadata som beskriver den angivna tabellen."
  remarks: ''
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#41](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#41)]\n [!code-cs[System.Web.DynamicData.MetaModel#41](~/add/codesnippet/csharp/m-system.web.dynamicdata_5_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "Typen som identifierar tabellen i datamodellen."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Metadata som beskriver den angivna tabellen."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Typen hittades inte i datamodellen."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  id: GetTable(System.String,System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(String,Type)
  nameWithType: MetaModel.GetTable(String,Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String,Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar metadata som beskriver den angivna tabellen."
  remarks: ''
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#43](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#43)]\n [!code-cs[System.Web.DynamicData.MetaModel#43](~/add/codesnippet/csharp/m-system.web.dynamicdata_3_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);
    parameters:
    - id: tableName
      type: System.String
      description: "Namnet på tabellen."
    - id: contextType
      type: System.Type
      description: "Datakontexten att söka efter tabellen."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Metadata som beskriver den angivna tabellen."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tablename</code>or <code>contextType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kontexten är inte registrerad eller tabellen finns inte i datakontexten."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  id: RegisterContext(System.Func{System.Object})
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Func<Object>)
  nameWithType: MetaModel.RegisterContext(Func<Object>)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Registrerar datakontexten som anges av en fabrik kontext."
  remarks: "Den här metoden använder kontexten standardinformation som definieras av <xref:System.Web.DynamicData.ContextConfiguration>klassen.</xref:System.Web.DynamicData.ContextConfiguration> På så sätt kan du initiera datakontexten genom att använda din egen konstruktor."
  syntax:
    content: public void RegisterContext (Func<object> contextFactory);
    parameters:
    - id: contextFactory
      type: System.Func{System.Object}
      description: "Fabriken för en instans skapades av datakontexten."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  id: RegisterContext(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Type)
  nameWithType: MetaModel.RegisterContext(Type)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Registrerar en datakontexten instans."
  remarks: "Den här metoden använder kontexten standardinformation som definieras av <xref:System.Web.DynamicData.ContextConfiguration>klassen.</xref:System.Web.DynamicData.ContextConfiguration>"
  syntax:
    content: public void RegisterContext (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "Typ av datakontexten som definierats i datamodellen."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(DataModelProvider)
  nameWithType: MetaModel.RegisterContext(DataModelProvider)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Registrerar en datakontextsinstansen med hjälp av en datamodell provider"
  syntax:
    content: public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);
    parameters:
    - id: dataModelProvider
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "En leverantör av datamodellen."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Func<Object>,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Registrerar en datakontexten instans med hjälp av den angivna kontext konfigurationen och genom att aktivera en anpassad konstruktor."
  remarks: "Kontexten factory i den här metoden kan du skapa en instans av en modell datakontext genom att använda en anpassad konstruktor."
  syntax:
    content: public void RegisterContext (Func<object> contextFactory, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: contextFactory
      type: System.Func{System.Object}
      description: "En delegat som används för att skapa en instans av modellen datakontexten."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "Kontextinformation som definieras av den <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> klass."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextFactory</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> contextType </code> som instansieras av <code> contextFactory </code> är inte giltig."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Type,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Type,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Registrerar en datakontexten instans med den angivna kontext-konfigurationen."
  remarks: ''
  example:
  - "The following example shows how to use the RegisterContext method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/global.asax.vb#99)]\n [!code-cs[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/csharp/d01c18e1-b759-4ac9-a729-_1.cs)]"
  syntax:
    content: public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: contextType
      type: System.Type
      description: "Typ av datakontexten som definierats i datamodellen."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "Konfigurationsinformationen för kontext, som definieras av den <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> klass."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(DataModelProvider,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Registrerar en datakontexten instans med hjälp av den angivna kontext konfigurationen och genom att aktivera en datamodell provider."
  syntax:
    content: public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: dataModelProvider
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "En leverantör av datamodellen."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "Kontextinformation som definieras av den <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> klass."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataModelProvider</code>or <code>configuration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>contextType</code>har redan registrerats."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException
  id: ResetRegistrationException
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: ResetRegistrationException()
  nameWithType: MetaModel.ResetRegistrationException()
  fullName: System.Web.DynamicData.MetaModel.ResetRegistrationException()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Återställer alla tidigare kontexten registreringsfel som kan ha inträffat."
  remarks: "När ett fel uppstår under datakontexten registreringen, cachelagras undantaget och utlöstes på alla efterföljande åtgärder. Om det uppstår ett fel vid programstart, genereras det till exempel för varje begäran. Anropa den här metoden om du vill ta bort felet och aktivera en ny kontext registrering ska utföras."
  syntax:
    content: public static void ResetRegistrationException ();
    parameters: []
  overload: System.Web.DynamicData.MetaModel.ResetRegistrationException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.Tables
  id: Tables
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: Tables
  nameWithType: MetaModel.Tables
  fullName: System.Web.DynamicData.MetaModel.Tables
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar en samling med alla tabeller som ingår i datamodellen."
  remarks: "Samlingen innehåller alla tabeller i datamodellen, som innehåller de tabeller som inte är synliga (är inte en del av scaffold-teknik för dynamiska Data).       [Kör](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) online exempel på den här funktionen."
  example:
  - "The following example shows how to use the Tables and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:  \n  \n-   Get a collection of all the tables in a data model and show them in a `GridView` control.  \n  \n-   Get a collection of the visible tables in a data model and show them in a `GridView` control.  \n  \n The example consists of a page and its code-behind file.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#5](~/add/codesnippet/csharp/p-system.web.dynamicdata_1_1.aspx)]\n [!code-vb[System.Web.DynamicData.MetaModel#5](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx#5)]  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#6](~/add/codesnippet/csharp/p-system.web.dynamicdata_1_2.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#6](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx.vb#6)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable> Tables { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}
      description: "En samling som innehåller de tabeller som hör till datamodellen."
  overload: System.Web.DynamicData.MetaModel.Tables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: TryGetTable(String,MetaTable)
  nameWithType: MetaModel.TryGetTable(String,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(String,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Försök att hämta metadata som associeras med den angivna tabellen."
  remarks: "Den här metoden hämtar metadata som associeras med den angivna tabellen. Om tabellen inte hittas, den här metoden returnerar `false`. Detta skiljer sig från den <xref:System.Web.DynamicData.MetaModel.GetTable%2A>metod som utlöser ett undantag om tabellen inte hittas.</xref:System.Web.DynamicData.MetaModel.GetTable%2A>"
  syntax:
    content: public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: uniqueTableName
      type: System.String
      description: "Det namn som unikt identifierar tabellen."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "När den här metoden returnerar och som har påträffats i begärda tabell innehåller metadata för tabellen. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tabellmetadata hittas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uniqueTableName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaModel.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(Type,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Försök att hämta metadata som associeras med den angivna tabellen."
  remarks: "Den här metoden hämtar metadata som associeras med den angivna tabellen. Om tabellen inte hittas, den här metoden returnerar `false`. Detta skiljer sig från den <xref:System.Web.DynamicData.MetaModel.GetTable%2A>metod som utlöser ett undantag om tabellen inte hittas.</xref:System.Web.DynamicData.MetaModel.GetTable%2A>"
  syntax:
    content: public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: entityType
      type: System.Type
      description: "Tabelltypen."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "När den här metoden returnerar, och om den begärda tabellen har hittats, innehåller metadata för den angivna tabellen. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tabellmetadata hittas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entityType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.VisibleTables
  id: VisibleTables
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
  fullName: System.Web.DynamicData.MetaModel.VisibleTables
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar en samling av synliga tabellerna i datamodellen."
  remarks: ''
  example:
  - "The following example shows how to use the VisibleTables property to get a collection of the visible tables in the data model. For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#62](~/add/codesnippet/csharp/p-system.web.dynamicdata_0_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#62](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx.vb#62)]"
  syntax:
    content: public System.Collections.Generic.List<System.Web.DynamicData.MetaTable> VisibleTables { get; }
    return:
      type: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}
      description: "En synlig tabell refererar till en tabell som har aktiverat scaffold-teknik. Detta innebär att det är en tabell som det finns en List.aspx sida."
  overload: System.Web.DynamicData.MetaModel.VisibleTables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.MetaModel.#ctor
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel()
  nameWithType: MetaModel.MetaModel()
  fullName: System.Web.DynamicData.MetaModel.MetaModel()
- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel(Boolean)
  nameWithType: MetaModel.MetaModel(Boolean)
  fullName: System.Web.DynamicData.MetaModel.MetaModel(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: CreateTable(TableProvider)
  nameWithType: MetaModel.CreateTable(TableProvider)
  fullName: System.Web.DynamicData.MetaModel.CreateTable(TableProvider)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.ModelProviders.TableProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: TableProvider
  nameWithType: TableProvider
  fullName: System.Web.DynamicData.ModelProviders.TableProvider
- uid: System.Web.DynamicData.MetaModel.Default
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Default
  nameWithType: MetaModel.Default
  fullName: System.Web.DynamicData.MetaModel.Default
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
  fullName: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.EntityTemplateFactory
- uid: System.Web.DynamicData.EntityTemplateFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: EntityTemplateFactory
  fullName: System.Web.DynamicData.EntityTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.FieldTemplateFactory
- uid: System.Web.DynamicData.IFieldTemplateFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FilterFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
  fullName: System.Web.DynamicData.MetaModel.FilterFactory
- uid: System.Web.DynamicData.FilterFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: FilterFactory
  nameWithType: FilterFactory
  fullName: System.Web.DynamicData.FilterFactory
- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetActionPath(String,String,Object)
  nameWithType: MetaModel.GetActionPath(String,String,Object)
  fullName: System.Web.DynamicData.MetaModel.GetActionPath(String,String,Object)
- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetModel(Type)
  nameWithType: MetaModel.GetModel(Type)
  fullName: System.Web.DynamicData.MetaModel.GetModel(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(String)
  nameWithType: MetaModel.GetTable(String)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String)
- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(Type)
  nameWithType: MetaModel.GetTable(Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(Type)
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(String,Type)
  nameWithType: MetaModel.GetTable(String,Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String,Type)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Func<Object>)
  nameWithType: MetaModel.RegisterContext(Func<Object>)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>)
- uid: System.Func{System.Object}
  parent: System
  isExternal: true
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Type)
  nameWithType: MetaModel.RegisterContext(Type)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(DataModelProvider)
  nameWithType: MetaModel.RegisterContext(DataModelProvider)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider)
- uid: System.Web.DynamicData.ModelProviders.DataModelProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: DataModelProvider
  nameWithType: DataModelProvider
  fullName: System.Web.DynamicData.ModelProviders.DataModelProvider
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Func<Object>,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
- uid: System.Web.DynamicData.ContextConfiguration
  parent: System.Web.DynamicData
  isExternal: false
  name: ContextConfiguration
  nameWithType: ContextConfiguration
  fullName: System.Web.DynamicData.ContextConfiguration
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Type,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Type,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type,ContextConfiguration)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(DataModelProvider,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: ResetRegistrationException()
  nameWithType: MetaModel.ResetRegistrationException()
  fullName: System.Web.DynamicData.MetaModel.ResetRegistrationException()
- uid: System.Web.DynamicData.MetaModel.Tables
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Tables
  nameWithType: MetaModel.Tables
  fullName: System.Web.DynamicData.MetaModel.Tables
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaTable>
  nameWithType: ReadOnlyCollection<MetaTable>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.DynamicData.MetaTable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaTable
    name: MetaTable
    nameWithType: MetaTable
    fullName: MetaTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable(String,MetaTable)
  nameWithType: MetaModel.TryGetTable(String,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(String,MetaTable)
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaModel.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(Type,MetaTable)
- uid: System.Web.DynamicData.MetaModel.VisibleTables
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
  fullName: System.Web.DynamicData.MetaModel.VisibleTables
- uid: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}
  parent: System.Collections.Generic
  isExternal: true
  name: List<MetaTable>
  nameWithType: List<MetaTable>
  fullName: System.Collections.Generic.List<System.Web.DynamicData.MetaTable>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Web.DynamicData.MetaTable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaTable
    name: MetaTable
    nameWithType: MetaTable
    fullName: MetaTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.#ctor*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel.MetaModel
- uid: System.Web.DynamicData.MetaModel.CreateTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: CreateTable
  nameWithType: MetaModel.CreateTable
- uid: System.Web.DynamicData.MetaModel.Default*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Default
  nameWithType: MetaModel.Default
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FilterFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
- uid: System.Web.DynamicData.MetaModel.GetActionPath*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetActionPath
  nameWithType: MetaModel.GetActionPath
- uid: System.Web.DynamicData.MetaModel.GetModel*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetModel
  nameWithType: MetaModel.GetModel
- uid: System.Web.DynamicData.MetaModel.GetTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable
  nameWithType: MetaModel.GetTable
- uid: System.Web.DynamicData.MetaModel.RegisterContext*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext
  nameWithType: MetaModel.RegisterContext
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: ResetRegistrationException
  nameWithType: MetaModel.ResetRegistrationException
- uid: System.Web.DynamicData.MetaModel.Tables*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Tables
  nameWithType: MetaModel.Tables
- uid: System.Web.DynamicData.MetaModel.TryGetTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable
  nameWithType: MetaModel.TryGetTable
- uid: System.Web.DynamicData.MetaModel.VisibleTables*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
