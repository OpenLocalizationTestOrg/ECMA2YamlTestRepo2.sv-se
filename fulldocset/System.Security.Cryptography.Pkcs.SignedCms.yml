### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignedCms
  id: SignedCms
  children:
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.Certificates
  - System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  - System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  - System.Security.Cryptography.Pkcs.SignedCms.Detached
  - System.Security.Cryptography.Pkcs.SignedCms.Encode
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  - System.Security.Cryptography.Pkcs.SignedCms.Version
  langs:
  - csharp
  name: SignedCms
  nameWithType: SignedCms
  fullName: System.Security.Cryptography.Pkcs.SignedCms
  type: Class
  summary: 'Klassen SignedCms gör det möjligt för signering och verifiering av CMS/PKCS #7-meddelanden.'
  remarks: "Den kryptografiska meddelandet Syntax RFC anger följande MIME-typer och filnamnstillägg för CMS/PKCS #7-meddelanden med dessa typer av innehåll.      | Innehållstyp | MIME-typen | Tillägget |   |------------------|---------------|---------------|   | envelopedData | application/pkcs7-mime |. p7m |   | signedData | pkcs7-program-signaturen |. p7s.P7C|"
  syntax:
    content: public sealed class SignedCms
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktorn SignedCms skapar en instans av den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klass."
  remarks: "Den <xref:System.Security.Cryptography.Pkcs.SignedCms>klassen har följande egenskapen standardvärden.</xref:System.Security.Cryptography.Pkcs.SignedCms>      | Egenskapen | Standardvärde |   |--------------|-------------------|   | <xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>| 1.2.840.113549.1.7.1 (data) längd: noll |   | <xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>| Frånkopplat tillstånd: `false` det innehåll som har signerats ingår i meddelandet CMS/PKCS #7 tillsammans med information om signaturer. |       Standard <xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType>för undertecknare är SubjectIdentifierType.IssuerAndSerialNumber.</xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType> </xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A> </xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>       Om frånkopplat tillstånd är `false` (standard), signerat innehåll ingår i meddelandet CMS/PKCS #7 tillsammans med information för signaturer. Om frånkopplat tillstånd är `true`, klienter som det går inte att avkoda S/MIME-meddelanden kan se innehållet i meddelandet om det har skickats separat. Detta kan vara användbart i ett arkivering program som arkiveras meddelandeinnehåll om avsändaren kan verifieras äkthet."
  syntax:
    content: public SignedCms ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktorn SignedCms skapar en instans av den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klassen med hjälp av angivna innehållsinformationen som innehållet."
  remarks: "Egenskapen standardvärdena används tillsammans med den här konstruktorn finns <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Om frånkopplat tillstånd är `false` (standard), det innehåll som har signerats ingår i meddelandet CMS/PKCS #7 tillsammans med information för signaturer. Om frånkopplat tillstånd är `true`, klienter som det går inte att avkoda S/MIME-meddelanden kan se innehållet i meddelandet om det har skickats separat. Detta kan vara användbart i ett arkivering program som arkiveras meddelandeinnehåll om avsändaren kan verifieras äkthet."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objekt som anger innehållsinformationen som innehållet i den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> meddelande."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktorn SignedCms skapar en instans av den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klassen med hjälp av angivna Ämnesidentifierarens typ som standard Ämnesidentifierarens typ för undertecknare."
  remarks: "Egenskapen standardvärdena används tillsammans med den här konstruktorn finns <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Om frånkopplat tillstånd är `false` (standard), det innehåll som har signerats ingår i meddelandet CMS/PKCS #7 tillsammans med information för signaturer. Om frånkopplat tillstånd är `true`, klienter som det går inte att avkoda S/MIME-meddelanden kan se innehållet i meddelandet om det har skickats separat. Detta kan vara användbart i ett arkivering program som arkiveras meddelandeinnehåll om avsändaren kan verifieras äkthet."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> som anger standard Ämnesidentifierarens typ för undertecknare."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktorn SignedCms skapar en instans av den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klassen med hjälp av angivna innehållsinformationen som innehållet och med hjälp av frånkopplat tillstånd."
  remarks: "Egenskapen standardvärdena används tillsammans med den här konstruktorn finns <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Om frånkopplat tillstånd är `false` (standard), det innehåll som har signerats ingår i meddelandet CMS/PKCS #7 tillsammans med information för signaturer. Om frånkopplat tillstånd är `true`, klienter som det går inte att avkoda S/MIME-meddelanden kan se innehållet i meddelandet om det har skickats separat. Detta kan vara användbart i ett arkivering program som arkiveras meddelandeinnehåll om avsändaren kan verifieras äkthet."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objekt som anger innehållsinformationen som innehållet i den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> meddelande."
    - id: detached
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> används för en frånkopplad signatur.</xref:System.Boolean> Om `detached` är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, signaturen är frånkopplat. Om `detached` är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, signaturen inte är frånkopplat."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktorn SignedCms skapar en instans av den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klass med angivna Ämnesidentifierarens typ som standard Ämnesidentifierarens typ för undertecknare och innehållsinformation som innehållet."
  remarks: "Egenskapen standardvärdena används tillsammans med den här konstruktorn finns <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Om frånkopplat tillstånd är `false` (standard), det innehåll som har signerats ingår i meddelandet CMS/PKCS #7 tillsammans med information för signaturer. Om frånkopplat tillstånd är `true`, klienter som det går inte att avkoda S/MIME-meddelanden kan se innehållet i meddelandet om det har skickats separat. Detta kan vara användbart i ett arkivering program som arkiveras meddelandeinnehåll om avsändaren kan verifieras äkthet."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> som anger standard Ämnesidentifierarens typ för undertecknare."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objekt som anger innehållsinformationen som innehållet i den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> meddelande."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktorn SignedCms skapar en instans av den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klassen med hjälp av angivna Ämnesidentifierarens typ som standard Ämnesidentifierarens typ för undertecknare innehållsinformationen som inre innehåll och genom att använda frånkopplat tillstånd."
  remarks: 'Om frånkopplat tillstånd är `false` (standard), det innehåll som har signerats ingår i meddelandet CMS/PKCS #7 tillsammans med information för signaturer. Om frånkopplat tillstånd är `true`, klienter som det går inte att avkoda S/MIME-meddelanden kan se innehållet i meddelandet om det har skickats separat. Detta kan vara användbart i ett arkivering program som arkiveras meddelandeinnehåll oavsett avsändaren kan verifieras äkthet.'
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> som anger standard Ämnesidentifierarens typ för undertecknare."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objekt som anger innehållsinformationen som innehållet i den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> meddelande."
    - id: detached
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> används för en frånkopplad signatur.</xref:System.Boolean> Om `detached` är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, signaturen är frånkopplat. Om oberoende är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, signaturen inte är frånkopplat."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  id: Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Egenskapen certifikat hämtar de certifikat som är associerade med den kodade CMS/PKCS #7-meddelanden.'
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: 'En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> samling som representerar uppsättningen av certifikat för kodade CMS/PKCS #7-meddelandet.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Metoden CheckHash verifierar dataintegriteten för CMS/PKCS #7-meddelandet. CheckHash är en särskild metod som används i specifika säkerhetsbehörigheter infrastrukturprogram som bara vill kontrollera hash CMS-meddelandet, i stället för att utföra en fullständig digital signatur-verifiering. CheckHash autentiserar inte författaren eller avsändare eftersom den här metoden inte inbegriper verifiera en digital signatur. För allmänna kontrollerar integritet och ett CMS/PKCS #7-meddelande är äkta och använda den &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; eller &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt; metoder.'
  remarks: 'Den här metoden ger inte autentisering i CMS/PKCS #7-meddelande.'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett metodanrop var ogiltigt för objektets aktuella tillstånd."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers'' certificates.'
  remarks: "Den här metoden kontrollerar alla signaturer, inklusive kontrasignaturer för CMS/PKCS #7-meddelande. Om det finns signerade attribut som ingår i meddelandet, verifieras också attributen. Om du väljer alternativet för att verifiera certifikat verifieras hela inkluderade delen av certifikatkedjan.       Den här metoden genereras ett undantag om verifiering av en digital signatur misslyckas eller validering kraven inte uppfylls."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached. The message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_31_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_31_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_31_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_31_2.cs)]"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om digitala signaturer har verifierats utan av dem certifikat som verifieras.</xref:System.Boolean>       Om `verifySignatureOnly` är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, digitala signaturer har verifierats. Om det är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, digitala signaturer har verifierats, valideras certifikaten av dem och tillämpningen av certifikat verifieras. I syfte att ett certifikat betraktas som giltigt om certifikatet har nyckelanvändningen eller om nyckelanvändningen stöder digitala signaturer och oavvislighet."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att slutföra en krypteringsåtgärd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett metodanrop var ogiltigt för objektets aktuella tillstånd."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers'' certificates.'
  remarks: "Den här metoden kontrollerar alla signaturer, inklusive kontrasignaturer för CMS/PKCS #7-meddelande. Om det finns signerade attribut som ingår i meddelandet, verifieras också attributen. Om du väljer alternativet för att verifiera certifikat verifieras hela inkluderade delen av certifikatkedjan.       Den här metoden genereras ett undantag om verifiering av en digital signatur misslyckas eller validering kraven inte uppfylls."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_2.cs)]"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> objekt som kan användas för att verifiera certifikatkedjan. Om inga ytterligare certifikat ska användas för att verifiera certifikatkedjan använder &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; i stället för CheckSignature."
    - id: verifySignatureOnly
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om digitala signaturer har verifierats utan av dem certifikat som verifieras.</xref:System.Boolean>       Om `verifySignatureOnly` är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, digitala signaturer har verifierats. Om det är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, digitala signaturer har verifierats, valideras certifikaten av dem och tillämpningen av certifikat verifieras. I syfte att ett certifikat betraktas som giltigt om certifikatet har nyckelanvändningen eller om nyckelanvändningen stöder digitala signaturer och oavvislighet."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att slutföra en krypteringsåtgärd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett metodanrop var ogiltigt för objektets aktuella tillstånd."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Metoden ComputeSignature uppmanas användaren att välja ett signeringscertifikat, skapar en signatur och lägger till signaturen CMS/PKCS #7-meddelandet.'
  remarks: "Den här metoden visar ett användargränssnitt där du kan välja undertecknare för det här meddelandet. Detta kräver att den aktuella processen körs i *användaren interaktivt läge*, vilket innebär som den <xref:System.Environment.UserInteractive%2A?displayProperty=fullName>egenskap är inställd på `true`.</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> En process är normalt i interaktivt läge för användaren om det inte är en process för tjänsten eller körs i ett webbprogram.       Undertecknare vars certifikat uppfyller följande villkor visas i listan:-certifikatet har en associerad privat nyckel.      -Certifikatet är inom sin giltighetstid.      -Certifikatet har nyckelanvändningen eller en nyckelanvändning som har stöd för digitala signaturer och oavvislighet.       Signerat certifikat är valt från den mitt Arkiv.      ## Säkerhet för .NET framework följande behörigheter krävs för att visa användargränssnittet:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>följande behörigheter krävs för att få åtkomst till signaturnyckeln:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/m-system.security.crypto_77_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/m-system.security.crypto_77_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/m-system.security.crypto_77_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/m-system.security.crypto_77_2.cs)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att slutföra en krypteringsåtgärd."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Metoden ComputeSignature skapar en signatur med hjälp av angivna Signerare och lägger till signaturen CMS/PKCS #7-meddelandet.'
  remarks: "## Säkerhet för .NET framework följande behörigheter krävs för att få åtkomst till signaturnyckeln:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_2.cs)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> objekt som representerar undertecknarens."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att slutföra en krypteringsåtgärd."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Skapar en signatur med hjälp av angivna Signerare och lägger till signaturen CMS/PKCS #7-meddelandet. Om värdet för parametern tyst är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> och <xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>-egenskapen för den <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> objekt som anges av parametern undertecknare är inte ett giltigt certifikat och den här metoden uppmanar användaren att välja ett signeringscertifikat.</xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>'
  remarks: "## Säkerhet för .NET framework följande behörigheter krävs för att visa användargränssnittet:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>följande behörigheter krävs för att få åtkomst till signaturnyckeln:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> objekt som representerar undertecknarens."
    - id: silent
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Uppmana användaren att välja ett signeringscertifikat."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att slutföra en krypteringsåtgärd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Värdet för den <code> silent </code> parametern är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> och ett signeringscertifikat har inte angetts."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  id: ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Egenskapen ContentInfo hämtar inre innehållet i den kodade CMS/PKCS #7-meddelanden.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }
    return:
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: 'En <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objekt som representerar innehållet i den kodade CMS/PKCS #7-meddelanden.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Metoden avkoda avkodar ett kodat <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> meddelande. Efter lyckad avkoda avkodade informationen kan hämtas från egenskaperna för den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> objekt."
  remarks: "Den här metoden återställer alla Medlemsvariabler för objektet med hjälp av informationen som hämtas från lyckad avkodning."
  example:
  - "The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_48_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_48_1.cs)]  \n  \n The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_48_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_48_2.cs)]"
  syntax:
    content: public void Decode (byte[] encodedMessage);
    parameters:
    - id: encodedMessage
      type: System.Byte[]
      description: 'Matris med bytevärden som representerar den kodade CMS/PKCS #7-meddelanden till avkodas.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att slutföra en krypteringsåtgärd."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  id: Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Frånkoppla egenskapen hämtar om den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> används för en frånkopplad signatur."
  syntax:
    content: public bool Detached { get; }
    return:
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om den <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> används för en frånkopplad signatur.</xref:System.Boolean> Om den här egenskapen är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, signaturen är frånkopplat. Om den här egenskapen är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, signaturen inte är frånkopplat."
  overload: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  id: Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Metoden koda kodar information i objektet i ett CMS/PKCS #7-meddelande.'
  syntax:
    content: public byte[] Encode ();
    parameters: []
    return:
      type: System.Byte[]
      description: "En matris med bytevärden som representerar encoded-meddelande. Encoded-meddelande kan avkodas av den <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>metoden.</xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>"
  overload: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att slutföra en krypteringsåtgärd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett metodanrop var ogiltigt för objektets aktuella tillstånd."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  id: RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Tar bort signaturen med det angivna indexet för den <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>samling.</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>"
  syntax:
    content: public void RemoveSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet för signatur för att ta bort."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'Ett CMS/PKCS #7-meddelande är inte signerad, och <code> index </code> är ogiltig.'
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll.       - eller - <code>index</code> är större än antalet signatur minus 1."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att ta bort signaturen.       - eller - ett internt kryptografiska fel uppstod."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Metoden RemoveSignature tar bort signaturen för den angivna <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> objekt."
  syntax:
    content: public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);
    parameters:
    - id: signerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "En <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> objekt som representerar den kontrasignatur har tas bort."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En null-referens skickades till en metod som inte accepterar som ett giltigt argument."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet för ett argument låg utanför det tillåtna värdeintervallet som definieras av den anropade metoden."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det gick inte att slutföra en krypteringsåtgärd."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  id: SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'SignerInfos egenskapen hämtar den <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> samlingen som är kopplad till CMS/PKCS #7-meddelande.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: 'En <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> objekt som representerar Signerare information för CMS/PKCS #7-meddelande.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Egenskapen Version hämtar versionen för CMS/PKCS #7-meddelandet.'
  remarks: 'Versionen som anger om meddelandet är en PKCS #7- eller CMS Cryptographic Message Syntax () visas. CMS står nyare PKCS #7.'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: 'Ett heltalsvärde som representerar meddelandeversionen CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
- uid: System.Security.Cryptography.Pkcs.ContentInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: ContentInfo
  nameWithType: ContentInfo
  fullName: System.Security.Cryptography.Pkcs.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierType
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifierType
  nameWithType: SubjectIdentifierType
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierType
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms
  nameWithType: SignedCms.SignedCms
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash
  nameWithType: SignedCms.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature
  nameWithType: SignedCms.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedCms.ComputeSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode
  nameWithType: SignedCms.Decode
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode
  nameWithType: SignedCms.Encode
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature
  nameWithType: SignedCms.RemoveSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
