### YamlMime:ManagedReference
items:
- uid: System.Activities.ExecutionProperties
  id: ExecutionProperties
  children:
  - System.Activities.ExecutionProperties.Add(System.String,System.Object)
  - System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  - System.Activities.ExecutionProperties.Find(System.String)
  - System.Activities.ExecutionProperties.GetEnumerator
  - System.Activities.ExecutionProperties.IsEmpty
  - System.Activities.ExecutionProperties.Remove(System.String)
  - System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ExecutionProperties
  nameWithType: ExecutionProperties
  fullName: System.Activities.ExecutionProperties
  type: Class
  summary: "Representerar insamlingen av egenskaper för ett visst område."
  remarks: "Via tråd lokal lagring (TLS) upprätthåller CLR en körningskontexten för varje tråd. Den här körningskontexten styr välkända tråd egenskaper, till exempel en tråd identitet, den omgivande transaktionen och den aktuella behörighetsgrupp samt användardefinierade tråd egenskaper som namngivna fack.       Till skillnad från program som direkt mål CLR är arbetsflödesprogram hierarkiskt omfång träd kör i en tråd-oberoende-miljö. Detta innebär att standardmekanismer för TLS direkt inte kan användas för att avgöra vilket sammanhang ingår i omfånget för ett visst arbetsobjekt. Till exempel två parallella grenar av körningen kan använda olika identiteter ännu Schemaläggaren kan interleave körningen på samma CLR-tråd.       Körningen av egenskaperna kan en aktivitet för att deklarera vilka egenskaper som ingår i omfattningen för dess underträd samt ger hook för installation och går sönder ned TLS ska fungera korrekt tillsammans med CLR-objekt."
  syntax:
    content: 'public sealed class ExecutionProperties : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: ExecutionProperties.Add(String,Object)
  fullName: System.Activities.ExecutionProperties.Add(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Registrerar en ny egenskap med det angivna namnet."
  syntax:
    content: public void Add (string name, object property);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på egenskapen."
    - id: property
      type: System.Object
      description: "Objekt som representerar egenskapen."
  overload: System.Activities.ExecutionProperties.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  id: Add(System.String,System.Object,System.Boolean)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Add(String,Object,Boolean)
  nameWithType: ExecutionProperties.Add(String,Object,Boolean)
  fullName: System.Activities.ExecutionProperties.Add(String,Object,Boolean)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Registrerar en egenskap med angivet namn och en underordnad synlighet."
  syntax:
    content: public void Add (string name, object property, bool onlyVisibleToPublicChildren);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på egenskapen."
    - id: property
      type: System.Object
      description: "Objekt som representerar egenskapen."
    - id: onlyVisibleToPublicChildren
      type: System.Boolean
      description: "Ett värde som avgör om den här egenskapen är synlig för aktiviteten ägande underordnade."
  overload: System.Activities.ExecutionProperties.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Find(System.String)
  id: Find(System.String)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Find(String)
  nameWithType: ExecutionProperties.Find(String)
  fullName: System.Activities.ExecutionProperties.Find(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returnerar egenskapen närmaste för det angivna namnet."
  remarks: "Söker efter den närmaste egenskapen visible med hjälp av hierarkiska omfång. Om två egenskaper med samma namn, returneras närmaste egenskapen på den överordnade omfattningen."
  syntax:
    content: public object Find (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på egenskapen."
    return:
      type: System.Object
      description: "Egenskapen närmaste för det angivna namnet."
  overload: System.Activities.ExecutionProperties.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ExecutionProperties.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returnerar en uppräknare går igenom insamlingen av egenskaper."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "En uppräknare går igenom insamlingen av egenskaper."
  overload: System.Activities.ExecutionProperties.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.IsEmpty
  id: IsEmpty
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
  fullName: System.Activities.ExecutionProperties.IsEmpty
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Hämtar ett värde som anger om det finns egenskaper som har registrerats på den aktuella omfattningen."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det finns egenskaper som är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.ExecutionProperties.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Remove(System.String)
  id: Remove(System.String)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ExecutionProperties.Remove(String)
  fullName: System.Activities.ExecutionProperties.Remove(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avregistrerar egenskapen med det angivna namnet."
  remarks: "Egenskaperna är automatiskt avregistrera när aktiviteten har slutförts. Den här metoden kan användas för att avregistrera en egenskap innan aktiviteten har slutförts."
  syntax:
    content: public bool Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på egenskapen att avregistrera."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om egenskapen avregistrerades; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.ExecutionProperties.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returnerar en uppräknare går igenom insamlingen av egenskaper."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En uppräknare går igenom insamlingen av egenskaper."
  overload: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add(String,Object)
  nameWithType: ExecutionProperties.Add(String,Object)
  fullName: System.Activities.ExecutionProperties.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add(String,Object,Boolean)
  nameWithType: ExecutionProperties.Add(String,Object,Boolean)
  fullName: System.Activities.ExecutionProperties.Add(String,Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.ExecutionProperties.Find(System.String)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Find(String)
  nameWithType: ExecutionProperties.Find(String)
  fullName: System.Activities.ExecutionProperties.Find(String)
- uid: System.Activities.ExecutionProperties.GetEnumerator
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: GetEnumerator()
  nameWithType: ExecutionProperties.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ExecutionProperties.IsEmpty
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
  fullName: System.Activities.ExecutionProperties.IsEmpty
- uid: System.Activities.ExecutionProperties.Remove(System.String)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Remove(String)
  nameWithType: ExecutionProperties.Remove(String)
  fullName: System.Activities.ExecutionProperties.Remove(String)
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.ExecutionProperties.Add*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add
  nameWithType: ExecutionProperties.Add
- uid: System.Activities.ExecutionProperties.Find*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Find
  nameWithType: ExecutionProperties.Find
- uid: System.Activities.ExecutionProperties.GetEnumerator*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: GetEnumerator
  nameWithType: ExecutionProperties.GetEnumerator
- uid: System.Activities.ExecutionProperties.IsEmpty*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
- uid: System.Activities.ExecutionProperties.Remove*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Remove
  nameWithType: ExecutionProperties.Remove
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator
