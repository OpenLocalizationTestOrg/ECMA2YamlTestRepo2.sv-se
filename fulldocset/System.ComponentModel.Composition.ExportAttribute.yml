### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ExportAttribute
  id: ExportAttribute
  children:
  - System.ComponentModel.Composition.ExportAttribute.#ctor
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ExportAttribute.ContractName
  - System.ComponentModel.Composition.ExportAttribute.ContractType
  langs:
  - csharp
  name: ExportAttribute
  nameWithType: ExportAttribute
  fullName: System.ComponentModel.Composition.ExportAttribute
  type: Class
  summary: "Anger att en typ, egenskap, fält eller metod tillhandahåller en viss export."
  remarks: "I attributet Programming modellen, ExportAttribute försäkrar att exporterar en del, eller innehåller ett objekt som uppfyller ett visst kontrakt i sammansättning-behållaren. Under sammansättning har delar med import som har kontrakt de beroenden som fylls det exportera objektet.       ExportAttribute kan skapa snygga en hel objektklass eller en egenskap, fält eller metod för en klass. Om hela klassen innehåller är en instans av klassen det exportera objektet. Om en medlem av en klass som innehåller kommer det exportera objektet att värdet för dekorerade medlem.       Huruvida ett kontrakt matchar beror i första hand kontraktnamn och kontrakttypen. Mer information finns i <xref:System.ComponentModel.Composition.ImportAttribute>.</xref:System.ComponentModel.Composition.ImportAttribute>"
  example:
  - "The following example shows three classes decorated with the ExportAttribute, and three imports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)]

      public class ExportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> klass, exportera typ eller medlem markerats med attributet under standardnamnet för kontraktet."
  remarks: "Kontraktet för standardnamnet är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metod på typen egenskap eller fält, eller på den typ som har markerats med attributet.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Metoder som markerats med attributet måste ange ett namn för avtalet eller en typ med hjälp av antingen <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>eller <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29> </xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>       Kontraktnamn jämförs med hjälp av den <xref:System.StringComparer.Ordinal%2A>egenskapen för att utföra en skiftlägeskänslig, icke-språkliga jämförelse.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> klass, exportera typ eller medlem markerats med attributet under angivet kontraktnamn."
  remarks: "Kontraktet för standardnamnet är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metod på typen egenskap eller fält, eller på den typ som den är markerad med det här attributet.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Metoder som markerats med attributet måste ange ett namn för avtalet eller en typ med ExportAttribute eller <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>       Kontraktnamn jämförs med hjälp av den <xref:System.StringComparer.Ordinal%2A>egenskapen för att utföra en skiftlägeskänslig, icke-språkliga jämförelse.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Kontraktnamn som används för att exportera typ eller medlem som markerats med det här attributet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;) att använda standardnamnet för kontraktet."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> klass, exportera typ eller medlem markerats med attributet under ett kontraktnamn som härletts från den angivna typen."
  remarks: "Kontraktnamn är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metoden på `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Kontraktet för standardnamnet är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metod på typen egenskap eller fält, eller på den typ som har markerats med attributet.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Metoder som markerats med attributet måste ange ett kontraktnamn eller en typ med antingen <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>eller ExportAttribute.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>       Kontraktnamn jämförs med hjälp av den <xref:System.StringComparer.Ordinal%2A>egenskapen för att utföra en skiftlägeskänslig, icke-språkliga jämförelse.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "En typ som härleds kontraktnamn som används för att exportera typ eller medlem som markerats med det här attributet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardnamnet för kontraktet."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> klass, exportera den angivna typen under angivet kontraktnamn."
  syntax:
    content: public ExportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "Kontraktnamn som används för att exportera typ eller medlem som markerats med det här attributet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;) att använda standardnamnet för kontraktet."
    - id: contractType
      type: System.Type
      description: "Så här exporterar du typ."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hämtar kontraktnamn som används för att exportera typ eller medlem som markerats med attributet."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "Kontraktnamn som används för att exportera typ eller medlem som markerats med attributet. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ExportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hämtar kontrakttypen som exporteras av medlem som det här attributet är kopplad till."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "Typ av export som har angetts. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vilket innebär att typ som kommer att hämtas genom att titta på typen på den medlem som den här exporten är kopplad till."
  overload: System.ComponentModel.Composition.ExportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute
  nameWithType: ExportAttribute.ExportAttribute
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
