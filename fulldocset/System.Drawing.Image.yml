### YamlMime:ManagedReference
items:
- uid: System.Drawing.Image
  id: Image
  children:
  - System.Drawing.Image.Clone
  - System.Drawing.Image.Dispose
  - System.Drawing.Image.Dispose(System.Boolean)
  - System.Drawing.Image.Finalize
  - System.Drawing.Image.Flags
  - System.Drawing.Image.FrameDimensionsList
  - System.Drawing.Image.FromFile(System.String)
  - System.Drawing.Image.FromFile(System.String,System.Boolean)
  - System.Drawing.Image.FromHbitmap(System.IntPtr)
  - System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  - System.Drawing.Image.FromStream(System.IO.Stream)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  - System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  - System.Drawing.Image.GetEncoderParameterList(System.Guid)
  - System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  - System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.GetPropertyItem(System.Int32)
  - System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  - System.Drawing.Image.Height
  - System.Drawing.Image.HorizontalResolution
  - System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.Palette
  - System.Drawing.Image.PhysicalDimension
  - System.Drawing.Image.PixelFormat
  - System.Drawing.Image.PropertyIdList
  - System.Drawing.Image.PropertyItems
  - System.Drawing.Image.RawFormat
  - System.Drawing.Image.RemovePropertyItem(System.Int32)
  - System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  - System.Drawing.Image.Save(System.String)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  - System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  - System.Drawing.Image.Size
  - System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Image.Tag
  - System.Drawing.Image.VerticalResolution
  - System.Drawing.Image.Width
  langs:
  - csharp
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
  type: Class
  summary: "En abstrakt basklass som tillhandahåller funktioner för den <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> och <xref href=&quot;System.Drawing.Imaging.Metafile&quot;> </xref> underordnade klasser."
  remarks: "Om du vill rita en avbildning i en Windows-formulär, bör du använda en av de <xref:System.Drawing.Graphics.DrawImage%2A>metoder.</xref:System.Drawing.Graphics.DrawImage%2A>"
  example:
  - "The following code example is designed for use with Windows Forms. It is a handler for the <xref:System.Windows.Forms.Control.Paint> event. A <xref:System.Drawing.Graphics> object is passed to the event and is used to draw the image on the form. The code performs the following actions:  \n  \n-   Creates an image from a file named SampImag.jpg. This file must be located in the same folder as the application executable file.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image on the form.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/cpp/t-system.drawing.image_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/csharp/t-system.drawing.image_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/visualbasic/t-system.drawing.image_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.ImageEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.ImmutableObject(true)]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Image.Clone
  id: Clone
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Clone()
  nameWithType: Image.Clone()
  fullName: System.Drawing.Image.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Skapar en exakt kopia av det här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Den <xref href=&quot;System.Drawing.Image&quot;> </xref> den här metoden skapar omvandla som ett objekt."
  overload: System.Drawing.Image.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Dispose
  id: Dispose
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: System.Drawing.Image.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Frigör alla resurser som används av detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Att anropa metoden Dispose kan de resurser som används av detta <xref:System.Drawing.Image>att fördelas för andra ändamål.</xref:System.Drawing.Image>       Anropa Dispose när du är klar med hjälp av <xref:System.Drawing.Image>.</xref:System.Drawing.Image> Metoden Dispose lämnar den <xref:System.Drawing.Image>oanvändbar.</xref:System.Drawing.Image> När du anropar Dispose, måste du släppa alla referenser till den <xref:System.Drawing.Image>så skräpinsamlingen kan frigöra minne som den <xref:System.Drawing.Image>var upptar.</xref:System.Drawing.Image> </xref:System.Drawing.Image> Mer information finns i [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md) och [implementera en metod för ta bort](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid anropet avyttra innan du släpper senaste referens till <xref:System.Drawing.Image>.</xref:System.Drawing.Image> De resurser som den använder frigörs annars inte förrän skräpinsamlingen anrop av <xref:System.Drawing.Image>objektets `Finalize` metod.</xref:System.Drawing.Image>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: System.Drawing.Image.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Drawing.Image&quot;> </xref> och släpper du de hantera resurserna."
  remarks: >-
    > [!NOTE]

    >  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Finalize
  id: Finalize
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: System.Drawing.Image.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tillåter ett objekt att frigöra de resurser och utföra andra innan skräpinsamling få tillbaka."
  syntax:
    content: ~Image ();
    parameters: []
  overload: System.Drawing.Image.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Flags
  id: Flags
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Flags
  nameWithType: Image.Flags
  fullName: System.Drawing.Image.Flags
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar attributet flaggor för pixeldata av denna <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Heltal som returneras från den här metoden motsvarar summan av <xref:System.Drawing.Imaging.ImageFlags>, enligt beskrivningen i följande tabell.</xref:System.Drawing.Imaging.ImageFlags>      | Värdet för ImageFlag | Heltal representation |   |---------------------|----------------------------|   | `ImageFlagsNone`|0|   | `ImageFlagsScalable`|1|   | `ImageFlagsHasAlpha`|2|   | `ImageFlagsHasTranslucent`|4|   | `ImageFlagsPartiallyScalable`|8|   | `ImageFlagsColorSpaceRGB`|16|   | `ImageFlagsColorSpaceCMYK`|32|   | `ImageFlagsColorSpaceGRAY`|64|   | `ImageFlagsColorSpaceYCBCR`|128|   | `ImageFlagsColorSpaceYCCK`|256|   | `ImageFlagsHasRealDPI`|4096|   | `ImageFlagsHasRealPixelSize`|8192|   | `ImageFlagsReadOnly`| 65536 |   | `ImageFlagsCaching`| 131072 |       Om egenskapen flaggor för en bild returnerade 77960, till exempel den <xref:System.Drawing.Imaging.ImageFlags>bilden skulle bli <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>, och <xref:System.Drawing.Imaging.ImageFlags>.</xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags>"
  syntax:
    content: public int Flags { get; }
    return:
      type: System.Int32
      description: "Det heltal som motsvarar en binär kombination av <xref href=&quot;System.Drawing.Imaging.ImageFlags&quot;> </xref> för den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FrameDimensionsList
  id: FrameDimensionsList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: System.Drawing.Image.FrameDimensionsList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar en matris med GUID som representerar mått ramar inom detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Den här metoden returnerar information om flera ram avbildningar som finns i två format: flera sida och flera lösning.       En avbildning av flera sidor är en avbildning som innehåller mer än en bild. Varje sida innehåller en enda avbildning (eller ram). Dessa sidor (eller bilder eller ramar) visas vanligtvis i följd att skapa en animerad sekvens, till exempel en animerad GIF-fil.       En upplösning flera avbildning är en avbildning som innehåller mer än en kopia av en bild på olika lösningar. Detta används vanligtvis genom att mappa MIP där visas bildstorleken anger den bild som används för att rita upplösning. [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]har stöd för ett godtyckligt antal sidor (eller bilder eller ramar), samt ett godtyckligt antal lösningar. De definierade dimensionerna är egenskaper för <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension>"
  syntax:
    content: public Guid[] FrameDimensionsList { get; }
    return:
      type: System.Guid[]
      description: "En matris med GUID som anger dimensionerna ramar inom detta <xref href=&quot;System.Drawing.Image&quot;> </xref> från viktigaste till minst viktiga."
  overload: System.Drawing.Image.FrameDimensionsList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromFile(System.String)
  id: FromFile(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: System.Drawing.Image.FromFile(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Skapar en <xref href=&quot;System.Drawing.Image&quot;> </xref> från den angivna filen."
  remarks: "Hanterade GDI + har inbyggda kodare och avkodare som har stöd för följande filtyper: - BMP - GIF - JPEG - PNG - TIFF filen förblir låst tills den <xref:System.Drawing.Image>har tagits bort.</xref:System.Drawing.Image>       Om filen inte har något giltigt bildformat eller om [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] stöder inte bildpunktsformat i filen, den här metoden genererar ett <xref:System.OutOfMemoryException>undantag.</xref:System.OutOfMemoryException>      > [!NOTE] > Den <xref:System.Drawing.Image>klassen stöder inte alfanumeriska insyn i bitmappar.</xref:System.Drawing.Image> Om du vill aktivera alfanumeriska genomskinlighet, använda PNG-bilder med 32 bitar per bildpunkt."
  example:
  - "The following code example demonstrates how to use the FromFile<xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.f_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.f_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.f_0_1.vb)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "En sträng som innehåller namnet på den fil som du vill skapa den <xref href=&quot;System.Drawing.Image&quot;> </xref>."
    return:
      type: System.Drawing.Image
      description: "Den <xref href=&quot;System.Drawing.Image&quot;> </xref> den här metoden skapar."
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Filen har inte något giltigt bildformat.       - eller - [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] stöder inte bildpunktsformat i filen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Den angivna filen finns inte."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>is a <xref:System.Uri>."
  platform:
  - net462
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  id: FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String,Boolean)
  nameWithType: Image.FromFile(String,Boolean)
  fullName: System.Drawing.Image.FromFile(String,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Skapar en <xref href=&quot;System.Drawing.Image&quot;> </xref> från den angivna filen med inbäddade färghanteringsinformation i den filen."
  remarks: "Hanterade GDI + har inbyggda kodare och avkodare som har stöd för följande filtyper: - BMP - GIF - JPEG - PNG - TIFF om filen inte har något giltigt bildformat eller om [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] stöder inte bildpunktsformat i filen, den här metoden genererar ett <xref:System.OutOfMemoryException>undantag.</xref:System.OutOfMemoryException>       Filen förblir låst tills den <xref:System.Drawing.Image>har tagits bort.</xref:System.Drawing.Image>       Den `useEmbeddedColorManagement` parametern anger om den nya <xref:System.Drawing.Image>gäller färgkorrigering enligt färghanteringsinformation som är inbäddad i avbildningsfilen.</xref:System.Drawing.Image> Inbäddade information kan omfatta internationella färg Consortium (ICC)-profiler, gamma och chromaticity information.      > [!NOTE] > Den <xref:System.Drawing.Image>klassen stöder inte alfanumeriska insyn i bitmappar.</xref:System.Drawing.Image> Om du vill aktivera alfanumeriska genomskinlighet, använda PNG-bilder med 32 bitar per bildpunkt."
  example:
  - "The following code example demonstrates how to obtain a new bitmap using the FromFile method. It also demonstrates a <xref:System.Drawing.TextureBrush>.  \n  \n This example is designed to be used with Windows Forms. Create a form containing a button named `Button2`. Paste the code into the form and associate the `Button2_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#2](~/add/codesnippet/csharp/m-system.drawing.image.f_1_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#2](~/add/codesnippet/cpp/m-system.drawing.image.f_1_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#2](~/add/codesnippet/visualbasic/m-system.drawing.image.f_1_1.vb)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);
    parameters:
    - id: filename
      type: System.String
      description: "En sträng som innehåller namnet på den fil som du vill skapa den <xref href=&quot;System.Drawing.Image&quot;> </xref>."
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "Ange till <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> att använda färg management information som är inbäddad i filen, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Drawing.Image
      description: "Den <xref href=&quot;System.Drawing.Image&quot;> </xref> den här metoden skapar."
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Filen har inte något giltigt bildformat.       - eller - [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] stöder inte bildpunktsformat i filen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Den angivna filen finns inte."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>is a <xref:System.Uri>."
  platform:
  - net462
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  id: FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Skapar en <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> från en referens till en GDI-bitmapp."
  remarks: "Metoden FromHbitmap skapas en kopia av den [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmappen; så du kan släppa inkommande [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmapp med hjälp av den [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject` metoden omedelbart när du har skapat den nya <xref:System.Drawing.Image>.</xref:System.Drawing.Image>"
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: "Den [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmapp referens som du vill skapa den <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    return:
      type: System.Drawing.Bitmap
      description: "Den <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> den här metoden skapar."
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  id: FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr,IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr,IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Skapar en <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> från en referens till en GDI-bitmapp och en referens till en GDI-palett."
  remarks: "Metoden FromHbitmap skapas en kopia av den [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmappen; så du kan släppa inkommande [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmapp med hjälp av den [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject` metoden omedelbart när du har skapat den nya <xref:System.Drawing.Image>.</xref:System.Drawing.Image>"
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: "Den [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmapp referens som du vill skapa den <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
    - id: hpalette
      type: System.IntPtr
      description: "En referens till en [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] paletten som används för att definiera bitmappen färger om bitmappen har angetts i den `hBitmap` parametern är inte en enhetsoberoende bitmappsformatet (DIB)."
    return:
      type: System.Drawing.Bitmap
      description: "Den <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> den här metoden skapar."
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  id: FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: System.Drawing.Image.FromStream(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Skapar en <xref href=&quot;System.Drawing.Image&quot;> </xref> från angivna dataströmmen."
  remarks: "Du måste behålla dataströmmen öppna under processernas livstid <xref:System.Drawing.Image>.</xref:System.Drawing.Image>       Dataströmmen har återställts till noll om den här metoden anropas efter varandra med samma dataström.      > [!NOTE] > Den <xref:System.Drawing.Image>klassen stöder inte alfanumeriska insyn i bitmappar.</xref:System.Drawing.Image> Om du vill aktivera alfanumeriska genomskinlighet, använda PNG-bilder med 32 bitar per bildpunkt."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>som innehåller data för den här <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    return:
      type: System.Drawing.Image
      description: "Den <xref href=&quot;System.Drawing.Image&quot;> </xref> den här metoden skapar."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Dataströmmen har inte något giltigt bildformat - eller - <code> stream </code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Skapar en <xref href=&quot;System.Drawing.Image&quot;> </xref> från den angivna dataströmmen, vid behov kan inbäddade färghanteringsinformation i dataströmmen."
  remarks: "Du måste behålla dataströmmen öppna under processernas livstid <xref:System.Drawing.Image>.</xref:System.Drawing.Image>       Den `useEmbeddedColorManagement` parametern anger om den nya <xref:System.Drawing.Image>gäller färgkorrigering enligt färghanteringsinformation som är inbäddad i dataströmmen.</xref:System.Drawing.Image> Inbäddade information kan omfatta internationella färg Consortium (ICC)-profiler, gamma och chromaticity information.       Dataströmmen har återställts till noll om den här metoden anropas efter varandra med samma dataström.      > [!NOTE] > Den <xref:System.Drawing.Image>klassen stöder inte alfanumeriska insyn i bitmappar.</xref:System.Drawing.Image> Om du vill aktivera alfanumeriska genomskinlighet, använda PNG-bilder med 32 bitar per bildpunkt."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>som innehåller data för den här <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att använda färghanteringsinformation inbäddat i dataströmmen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Drawing.Image
      description: "Den <xref href=&quot;System.Drawing.Image&quot;> </xref> den här metoden skapar."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Dataströmmen har inte något giltigt bildformat - eller - <code> stream </code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream,Boolean,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Skapar en <xref href=&quot;System.Drawing.Image&quot;> </xref> från den angivna dataströmmen, du kan också använda inbäddade färghanteringsinformation och verifiera bilddata."
  remarks: "Den `useEmbeddedColorManagement` parametern anger om den nya <xref:System.Drawing.Image>gäller färgkorrigering enligt färghanteringsinformation som är inbäddad i dataströmmen.</xref:System.Drawing.Image> Inbäddade information kan omfatta internationella färg Consortium (ICC)-profiler, gamma och chromaticity information.      > [!NOTE] > Den <xref:System.Drawing.Image>klassen stöder inte alfanumeriska insyn i bitmappar.</xref:System.Drawing.Image> Om du vill aktivera alfanumeriska genomskinlighet, använda PNG-bilder med 32 bitar per bildpunkt."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>som innehåller data för den här <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att använda färghanteringsinformation inbäddat i dataströmmen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: validateImageData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Validera bilddata; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Drawing.Image
      description: "Den <xref href=&quot;System.Drawing.Image&quot;> </xref> den här metoden skapar."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Dataströmmen har inte något giltigt bildformat."
  platform:
  - net462
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  id: GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: System.Drawing.Image.GetBounds(GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar gränser för bilden i den angivna enheten."
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle, using the <xref:System.Drawing.GraphicsUnit> enumeration, and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/m-system.drawing.image.g_1_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/m-system.drawing.image.g_1_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/m-system.drawing.image.g_1_1.cpp)]"
  syntax:
    content: public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);
    parameters:
    - id: pageUnit
      type: System.Drawing.GraphicsUnit
      description: "En av de <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> värden som anger måttenheten för avgränsningsrektangeln."
    return:
      type: System.Drawing.RectangleF
      description: "Den <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> som representerar bilden i den angivna enheten gränser."
  overload: System.Drawing.Image.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  id: GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: System.Drawing.Image.GetEncoderParameterList(Guid)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returnerar information om de parametrar som stöds av avbildningsfilen kodaren."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);
    parameters:
    - id: encoder
      type: System.Guid
      description: "Ett GUID som anger image-kodaren."
    return:
      type: System.Drawing.Imaging.EncoderParameters
      description: "En <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> som innehåller en matris med <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objekt. Varje <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> innehåller information om en av parametrarna som stöds av avbildningsfilen kodaren."
  overload: System.Drawing.Image.GetEncoderParameterList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  id: GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: System.Drawing.Image.GetFrameCount(FrameDimension)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returnerar antalet ramar för angiven dimension."
  remarks: "Den här metoden returnerar information om flera ram avbildningar som finns i två format: flera sida och flera lösning.       En avbildning av flera sidor är en avbildning som innehåller mer än en bild. Varje sida innehåller en enda avbildning (eller ram). Dessa sidor (eller bilder eller ramar) visas vanligtvis i följd att skapa en animerad sekvens, till exempel en animerad GIF-fil.       En upplösning flera avbildning är en avbildning som innehåller mer än en kopia av en bild på olika lösningar. Detta används vanligtvis genom att mappa MIP där visas bildstorleken anger den bild som används för att rita upplösning. [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]har stöd för ett godtyckligt antal sidor (eller bilder eller ramar), samt ett godtyckligt antal lösningar. De definierade dimensionerna är egenskaper för <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension>"
  syntax:
    content: public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: "En <xref href=&quot;System.Drawing.Imaging.FrameDimension&quot;> </xref> som anger identitet dimensionstypen."
    return:
      type: System.Int32
      description: "Antal bildrutor i angiven dimension."
  overload: System.Drawing.Image.GetFrameCount*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  id: GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: System.Drawing.Image.GetPixelFormatSize(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returnerar antal färger i antal bitar per bildpunkt, det angivna bildpunktsformatet."
  syntax:
    content: public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "Den <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> medlem som anger det format som du vill hitta storlek."
    return:
      type: System.Int32
      description: "Färgdjupet för det angivna bildpunktsformatet."
  overload: System.Drawing.Image.GetPixelFormatSize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  id: GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: System.Drawing.Image.GetPropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar det angivna egenskapen objektet från den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "En lista över egenskapen objekt-ID och länkar till mer information finns i <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.</xref:System.Drawing.Imaging.PropertyItem.Id%2A>       Det är svårt att ange egenskapen objekt eftersom den <xref:System.Drawing.Imaging.PropertyItem>klassen har inga offentliga konstruktorer.</xref:System.Drawing.Imaging.PropertyItem> Ett sätt att undvika den här begränsningen är att hämta en <xref:System.Drawing.Imaging.PropertyItem>genom att hämta den <xref:System.Drawing.Image.PropertyItems%2A>egenskapsvärdet eller anropa GetPropertyItem-metoden i en <xref:System.Drawing.Image>som redan har egenskapsobjekten.</xref:System.Drawing.Image> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> Du kan ange fälten <xref:System.Drawing.Imaging.PropertyItem>och skicka det till <xref:System.Drawing.Image.SetPropertyItem%2A>.</xref:System.Drawing.Image.SetPropertyItem%2A> </xref:System.Drawing.Imaging.PropertyItem>"
  example:
  - "The following code example demonstrates how to use the GetPropertyItem and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example calls GetPropertyItem passing an ID value. For a list of ID values see, <xref:System.Drawing.Imaging.PropertyItem.Id%2A>. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.g_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.g_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.g_0_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: "ID för objektet egenskapen att hämta."
    return:
      type: System.Drawing.Imaging.PropertyItem
      description: "Den <xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> den här metoden hämtar."
  overload: System.Drawing.Image.GetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Bildformat för den här avbildningen stöder inte egenskapen objekt."
  platform:
  - net462
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  id: GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  fullName: System.Drawing.Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);
    parameters:
    - id: thumbWidth
      type: System.Int32
      description: "Som ska läggas till."
    - id: thumbHeight
      type: System.Int32
      description: "Som ska läggas till."
    - id: callback
      type: System.Drawing.Image.GetThumbnailImageAbort
      description: "Som ska läggas till."
    - id: callbackData
      type: System.IntPtr
      description: "Som ska läggas till."
    return:
      type: System.Drawing.Image
      description: "Som ska läggas till."
  overload: System.Drawing.Image.GetThumbnailImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Height
  id: Height
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Height
  nameWithType: Image.Height
  fullName: System.Drawing.Image.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar höjden i bildpunkter för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> and Height properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.h_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.h_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.h_1.vb)]"
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "Höjden i bildpunkter för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.HorizontalResolution
  id: HorizontalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: System.Drawing.Image.HorizontalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar den vågräta bildskärmsupplösningen i bildpunkter per tum för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  syntax:
    content: public float HorizontalResolution { get; }
    return:
      type: System.Single
      description: "Vågrät upplösning, i pixlar per tum på detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.HorizontalResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsAlphaPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returnerar ett värde som anger om pixeln format för den här <xref href=&quot;System.Drawing.Image&quot;> </xref> innehåller alfanumeriska information."
  syntax:
    content: public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "Den <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> att testa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> pixfmt </code> innehåller alfanumeriska information, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Image.IsAlphaPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsCanonicalPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returnerar ett värde som anger om bildpunktsformat är 32 bitar per bildpunkt."
  remarks: "Kanoniskt bildpunktsformat anger ett bildpunktsformat med 32 bitar per bildpunkt. Det här formatet anger 24-bitars färgdjupet och en 8-bitars alpha-kanal."
  syntax:
    content: public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "Den <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> att testa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> pixfmt </code> är kanoniska, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Image.IsCanonicalPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsExtendedPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returnerar ett värde som anger om bildpunktsformat är 64 bitar per bildpunkt."
  syntax:
    content: public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "Den <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> uppräkningen för att testa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>pixfmt</code> is extended; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Image.IsExtendedPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Palette
  id: Palette
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Palette
  nameWithType: Image.Palette
  fullName: System.Drawing.Image.Palette
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar eller anger den färgpalett som används för den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Den här egenskapen returnerar en kopia av <xref:System.Drawing.Imaging.ColorPalette>objektet som används av denna <xref:System.Drawing.Image>.</xref:System.Drawing.Image> </xref:System.Drawing.Imaging.ColorPalette>"
  syntax:
    content: public System.Drawing.Imaging.ColorPalette Palette { get; set; }
    return:
      type: System.Drawing.Imaging.ColorPalette
      description: "En <xref href=&quot;System.Drawing.Imaging.ColorPalette&quot;> </xref> som representerar den färgpalett som används för den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Palette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PhysicalDimension
  id: PhysicalDimension
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: System.Drawing.Image.PhysicalDimension
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar bredden och höjden på den här avbildningen."
  remarks: "Om bilden är en bitmapp, returneras bredd och höjd i bildpunkter. Om bilden är en metafile, returneras bredd och höjd i 0,01 millimeter enheter."
  syntax:
    content: public System.Drawing.SizeF PhysicalDimension { get; }
    return:
      type: System.Drawing.SizeF
      description: "En <xref href=&quot;System.Drawing.SizeF&quot;> </xref> struktur som representerar bredden och höjden på detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.PhysicalDimension*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PixelFormat
  id: PixelFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: System.Drawing.Image.PixelFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar bildpunktsformat för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the PixelFormat property.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.p_1_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.p_1_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.p_1_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PixelFormat PixelFormat { get; }
    return:
      type: System.Drawing.Imaging.PixelFormat
      description: "En <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> som representerar bildpunktsformat för den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.PixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PropertyIdList
  id: PropertyIdList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: System.Drawing.Image.PropertyIdList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar ID-numren för egenskapen-objekt som lagras i det här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Om avbildningen har inga egenskapen objekt eller om bildformatet inte stöder egenskapen objekt, returnerar egenskapen PropertyIdList en tom matris (som är en matris med längden noll)."
  syntax:
    content: public int[] PropertyIdList { get; }
    return:
      type: System.Int32[]
      description: "En matris med egenskapen ID, ett för varje egenskap-objekt som lagras i den här avbildningen."
  overload: System.Drawing.Image.PropertyIdList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PropertyItems
  id: PropertyItems
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: System.Drawing.Image.PropertyItems
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar alla egendom objekt (delar av metadata) lagras i det här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Om avbildningen har inga egenskapen objekt eller om bildformatet inte stöder egenskapen objekt, PropertyItems returneras en tom matris (som är en matris med längden noll)."
  example:
  - "The following code example demonstrates how to read and display the metadata in an image file using the <xref:System.Drawing.Imaging.PropertyItem?displayProperty=fullName> class and the PropertyItems property.  \n  \n This example is designed to be used a Windows Form that imports the <xref:System.Drawing.Imaging?displayProperty=fullName> namespace. Paste the code into the form and change the path to `fakePhoto.jpg` to point to an image file on your system. Call the `ExtractMetaData` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#6](~/add/codesnippet/csharp/p-system.drawing.image.p_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#6](~/add/codesnippet/cpp/p-system.drawing.image.p_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#6](~/add/codesnippet/visualbasic/p-system.drawing.image.p_0_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }
    return:
      type: System.Drawing.Imaging.PropertyItem[]
      description: "En matris med <xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> objekt, en för varje egenskap objekt lagras i avbildningen."
  overload: System.Drawing.Image.PropertyItems*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.RawFormat
  id: RawFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: System.Drawing.Image.RawFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar filformatet för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  syntax:
    content: public System.Drawing.Imaging.ImageFormat RawFormat { get; }
    return:
      type: System.Drawing.Imaging.ImageFormat
      description: "Den <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref> som representerar filformatet för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.RawFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  id: RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: System.Drawing.Image.RemovePropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tar bort den angivna egenskapen från den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Det är svårt att ange egenskapen objekt eftersom den <xref:System.Drawing.Imaging.PropertyItem>klassen har inga offentliga konstruktorer.</xref:System.Drawing.Imaging.PropertyItem> Ett sätt att undvika den här begränsningen är att hämta en <xref:System.Drawing.Imaging.PropertyItem>genom att hämta den <xref:System.Drawing.Image.PropertyItems%2A>egenskapsvärdet eller anropar den <xref:System.Drawing.Image.GetPropertyItem%2A>metoden för en <xref:System.Drawing.Image>som redan har egenskapsobjekten.</xref:System.Drawing.Image> </xref:System.Drawing.Image.GetPropertyItem%2A> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> Du kan ange fälten <xref:System.Drawing.Imaging.PropertyItem>och skicka det till <xref:System.Drawing.Image.SetPropertyItem%2A>.</xref:System.Drawing.Image.SetPropertyItem%2A> </xref:System.Drawing.Imaging.PropertyItem>"
  syntax:
    content: public void RemovePropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: "ID för egenskapen objekt att ta bort."
  overload: System.Drawing.Image.RemovePropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Bilden innehåller inte det begärda egenskapen-objektet.       - eller - bildformat för den här avbildningen stöder inte egenskapen objekt."
  platform:
  - net462
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  id: RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: System.Drawing.Image.RotateFlip(RotateFlipType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Roterar vänder, eller roterar och vänder den <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Metoden RotateFlip roterar bilden medurs.       Om du vill rita på en bild när den har roterats bör du alltid hämta ett nytt graphics-objekt från avbildningen, annars undantag kan inträffa."
  example:
  - "The following code example demonstrates how to call the RotateFlip method on an <xref:System.Drawing.Image> and the <xref:System.Drawing.RotateFlipType> enumeration.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.PictureBox> named `PictureBox1` and a button named `Button1`. Paste the code into a form, call `InitializeBitmap` from the form's constructor, and associate `Button1_Click` with the button's <xref:System.Windows.Forms.Control.Click> event. Ensure the file path to the bitmap is valid on your system.  \n  \n [!code-cs[System.Drawing.BitmapMembers#3](~/add/codesnippet/csharp/m-system.drawing.image.r_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#3](~/add/codesnippet/visualbasic/m-system.drawing.image.r_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#3](~/add/codesnippet/cpp/m-system.drawing.image.r_1.cpp)]"
  syntax:
    content: public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);
    parameters:
    - id: rotateFlipType
      type: System.Drawing.RotateFlipType
      description: "En <xref href=&quot;System.Drawing.RotateFlipType&quot;> </xref> medlem som anger vilken typ av rotation och vänd ska tillämpas på avbildningen."
  overload: System.Drawing.Image.RotateFlip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String)
  id: Save(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: System.Drawing.Image.Save(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sparar detta <xref href=&quot;System.Drawing.Image&quot;> </xref> till den angivna filen eller dataströmmen."
  remarks: "Om det finns inga kodare för formatet för bilden, används PNG Portable Network Graphics ()-kodaren. När du använder metoden Spara för att spara en bild som en Windows Metafile Format (WMF) eller EMF Enhanced Metafile Format ()-fil, spara den resulterande filen som en PNG Portable Network Graphics ()-fil. Detta beror på [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] komponent av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] har inte en kodare som du kan använda för att spara filer som .wmf eller .emf filer.       Avbildningen sparas i samma fil som den skapades från är inte tillåtet och genererar ett undantag."
  example:
  - "The following code example demonstrates how to call the Save method. This example is designed to be used with Windows Forms. Create a form that contains a button named `Button5`. Paste the code into the form, and associate the method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#5](~/add/codesnippet/csharp/m-system.drawing.image.s_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#5](~/add/codesnippet/cpp/m-system.drawing.image.s_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#5](~/add/codesnippet/visualbasic/m-system.drawing.image.s_0_1.vb)]"
  syntax:
    content: public void Save (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "En sträng som innehåller namnet på filen som du vill spara den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>är<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Bilden har sparats med fel bildformat.       - eller - bilden har sparats i samma fil som den skapades från."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream,ImageFormat)
  nameWithType: Image.Save(Stream,ImageFormat)
  fullName: System.Drawing.Image.Save(Stream,ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sparar den här avbildningen till den angivna dataströmmen i angivet format."
  remarks: "Du bör undvika att spara en avbildning till samma dataström som användes för att skapa den. Då kan skada dataströmmen.       Bilden måste sparas till en dataström med en förskjutning på noll. Om ytterligare data som har skrivits till dataströmmen innan du sparar bilden, vara image-data i dataströmmen skadad."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Den <xref:System.IO.Stream>där avbildningen sparas.</xref:System.IO.Stream>"
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: "En <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref> som anger formatet för den sparade bilden."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>format</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Bilden har sparats med fel bildformat"
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  id: Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String,ImageFormat)
  nameWithType: Image.Save(String,ImageFormat)
  fullName: System.Drawing.Image.Save(String,ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sparar detta <xref href=&quot;System.Drawing.Image&quot;> </xref> till den angivna filen i angivet format."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a bitmap from a type, and how to use the Save method. To run this example, paste the code into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event, and call the `ConstructFromResourceSaveAsGif` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>  \n  \n [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/cpp/m-system.drawing.image.s_1_1.cpp)]\n [!code-cs[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/csharp/m-system.drawing.image.s_1_1.cs)]\n [!code-vb[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/visualbasic/m-system.drawing.image.s_1_1.vb)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: filename
      type: System.String
      description: "En sträng som innehåller namnet på filen som du vill spara den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>or <code>format</code> is<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Bilden har sparats med fel bildformat.       - eller - bilden har sparats i samma fil som den skapades från."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sparar den här avbildningen till den angivna dataströmmen med de angivna kodare och avbildningen kodaren parametrar."
  remarks: "Spara inte en bild till samma dataström som användes för att skapa avbildningen. Då kan skada dataströmmen.       Bilden måste sparas till en dataström med en förskjutning på noll. Om ytterligare data som har skrivits till dataströmmen innan du sparar bilden, vara image-data i dataströmmen skadad."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Den <xref:System.IO.Stream>där avbildningen sparas.</xref:System.IO.Stream>"
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "En <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> som anger de parametrar som används av avbildningen kodaren."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Bilden har sparats med fel bildformat."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(String,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(String,ImageCodecInfo,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sparar detta <xref href=&quot;System.Drawing.Image&quot;> </xref> till den angivna filen med de angivna parametrarna kodare och image-kodaren."
  remarks: "Avbildningen sparas i samma fil som den skapades från är inte tillåtet och genererar ett undantag."
  example:
  - "The following example creates a <xref:System.Drawing.Bitmap> object from a BMP file. The code saves the bitmap to three JPEG files, each with a different quality level.  \n  \n [!code-cs[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/csharp/e093e484-33cc-46d5-936c-_1.cs)]\n [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/visualbasic/e093e484-33cc-46d5-936c-_1.vb)]\n [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/cpp/e093e484-33cc-46d5-936c-_1.cpp)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: filename
      type: System.String
      description: "En sträng som innehåller namnet på filen som du vill spara den här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "An <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;></xref> to use for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>or <code>encoder</code> is<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "Bilden har sparats med fel bildformat.       - eller - bilden har sparats i samma fil som den skapades från."
  platform:
  - net462
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Lägger till en ram i filen eller dataströmmen som anges i ett tidigare anrop till den <xref:System.Drawing.Image.Save*>metoden.</xref:System.Drawing.Image.Save*> Använd den här metoden för att spara valda ramar från en avbildning av flera ramar i en annan flera ram-bild."
  syntax:
    content: public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "En <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> som innehåller parametrar som krävs av avbildningen kodaren som används av den tillagda åtgärden Spara."
  overload: System.Drawing.Image.SaveAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(Image,EncoderParameters)
  nameWithType: Image.SaveAdd(Image,EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(Image,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Lägger till en ram i filen eller dataströmmen som anges i ett tidigare anrop till den <xref:System.Drawing.Image.Save*>metoden.</xref:System.Drawing.Image.Save*>"
  syntax:
    content: public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "En <xref href=&quot;System.Drawing.Image&quot;> </xref> som innehåller ram att lägga till."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "En <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> som innehåller parametrar som krävs av avbildningen kodaren som används av den tillagda åtgärden Spara."
  overload: System.Drawing.Image.SaveAdd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  id: SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SelectActiveFrame(FrameDimension,Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension,Int32)
  fullName: System.Drawing.Image.SelectActiveFrame(FrameDimension,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Markerar bildruta som anges av dimensionen och index."
  remarks: "De möjliga värdena för den `dimensionID` parameter är egenskaper för <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension> Dessa kan användas för att identifiera en avbildning av den tid, lösning eller sidnumret.       Den här metoden anropas gör alla ändringar som gjorts till föregående ram ignoreras. Innan du väljer en annan ram, spara alla ändringar som gjorts i den aktuella ramen, inklusive ändringar i pixelvärden och egenskaper. Om anropet till metoden SelectActiveFrame lyckas (ett undantag uppstår inte), metoden returnerar 0."
  syntax:
    content: public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: "En <xref href=&quot;System.Drawing.Imaging.FrameDimension&quot;> </xref> som anger identitet dimensionstypen."
    - id: frameIndex
      type: System.Int32
      description: "Indexet för den aktiva ramen."
    return:
      type: System.Int32
      description: "Returnerar alltid 0."
  overload: System.Drawing.Image.SelectActiveFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  id: SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: System.Drawing.Image.SetPropertyItem(PropertyItem)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Lagrar egenskapen-objekt (typ av metadata) i det här <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: "Om bildformatet inte stöder egenskapen objekt, utlöser den här metoden <xref:System.ArgumentException>med meddelandet &quot;egenskapen stöds inte.&quot;</xref:System.ArgumentException> Om bildformatet stöder egenskapen objekt, men inte har stöd för en viss egenskap som du vill lägga till, den här metoden ignorerar försöket men undantag genereras inget.       Det är svårt att ange egenskapen objekt eftersom den <xref:System.Drawing.Imaging.PropertyItem>klassen har inga offentliga konstruktorer.</xref:System.Drawing.Imaging.PropertyItem> Ett sätt att undvika den här begränsningen är att hämta en <xref:System.Drawing.Imaging.PropertyItem>genom att hämta den <xref:System.Drawing.Image.PropertyItems%2A>egenskapsvärdet eller anropar den <xref:System.Drawing.Image.GetPropertyItem%2A>metoden för en <xref:System.Drawing.Image>som redan har egenskapsobjekten.</xref:System.Drawing.Image> </xref:System.Drawing.Image.GetPropertyItem%2A> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> Sedan kan du definiera fälten för den <xref:System.Drawing.Imaging.PropertyItem>och skickar den till SetPropertyItem.</xref:System.Drawing.Imaging.PropertyItem>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.GetPropertyItem%2A> and SetPropertyItem methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.s_2_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.s_2_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.s_2_1.vb)]"
  syntax:
    content: public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);
    parameters:
    - id: propitem
      type: System.Drawing.Imaging.PropertyItem
      description: "Den <xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> ska lagras."
  overload: System.Drawing.Image.SetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Bildformat för den här avbildningen stöder inte egenskapen objekt."
  platform:
  - net462
- uid: System.Drawing.Image.Size
  id: Size
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Size
  nameWithType: Image.Size
  fullName: System.Drawing.Image.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar bredd och höjd i bildpunkter för den här avbildningen."
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "En <xref href=&quot;System.Drawing.Size&quot;> </xref> struktur som representerar bredd och höjd i bildpunkter för den här avbildningen."
  overload: System.Drawing.Image.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Image
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Fyller på en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> med de data som behövs för att serialisera målobjektet."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> att fylla i med data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Målet (se <xref:System.Runtime.Serialization.StreamingContext>) för den här serialisering.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Tag
  id: Tag
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Tag
  nameWithType: Image.Tag
  fullName: System.Drawing.Image.Tag
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar eller anger ett objekt som innehåller ytterligare information om bilden."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "Den <xref:System.Object>som ger ytterligare information om bilden.</xref:System.Object>"
  overload: System.Drawing.Image.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.VerticalResolution
  id: VerticalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: System.Drawing.Image.VerticalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar lodrät upplösning i bildpunkter per tum för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  syntax:
    content: public float VerticalResolution { get; }
    return:
      type: System.Single
      description: "Lodrät upplösning, i pixlar per tum på detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.VerticalResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Width
  id: Width
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Width
  nameWithType: Image.Width
  fullName: System.Drawing.Image.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hämtar bredd i bildpunkter för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new <xref:System.Drawing.Bitmap> from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A>, Width, and <xref:System.Drawing.Image.Height%2A> properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1` and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.w_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.w_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.w_1.vb)]"
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "Bredden i bildpunkter för detta <xref href=&quot;System.Drawing.Image&quot;> </xref>."
  overload: System.Drawing.Image.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.InteropServices.ExternalException
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ExternalException
  nameWithType: ExternalException
  fullName: System.Runtime.InteropServices.ExternalException
- uid: System.Drawing.Image.Clone
  parent: System.Drawing.Image
  isExternal: false
  name: Clone()
  nameWithType: Image.Clone()
  fullName: System.Drawing.Image.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Image.Dispose
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: System.Drawing.Image.Dispose()
- uid: System.Drawing.Image.Dispose(System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: System.Drawing.Image.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Image.Finalize
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: System.Drawing.Image.Finalize()
- uid: System.Drawing.Image.Flags
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
  fullName: System.Drawing.Image.Flags
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Image.FrameDimensionsList
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: System.Drawing.Image.FrameDimensionsList
- uid: System.Guid[]
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid[]
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.FromFile(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: System.Drawing.Image.FromFile(String)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String,Boolean)
  nameWithType: Image.FromFile(String,Boolean)
  fullName: System.Drawing.Image.FromFile(String,Boolean)
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr,IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr,IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr,IntPtr)
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: System.Drawing.Image.FromStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean)
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream,Boolean,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean,Boolean)
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: System.Drawing.Image.GetBounds(GraphicsUnit)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: System.Drawing.Image.GetEncoderParameterList(Guid)
- uid: System.Drawing.Imaging.EncoderParameters
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameters
  nameWithType: EncoderParameters
  fullName: System.Drawing.Imaging.EncoderParameters
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: System.Drawing.Image.GetFrameCount(FrameDimension)
- uid: System.Drawing.Imaging.FrameDimension
  parent: System.Drawing.Imaging
  isExternal: false
  name: FrameDimension
  nameWithType: FrameDimension
  fullName: System.Drawing.Imaging.FrameDimension
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: System.Drawing.Image.GetPixelFormatSize(PixelFormat)
- uid: System.Drawing.Imaging.PixelFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Drawing.Imaging.PixelFormat
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: System.Drawing.Image.GetPropertyItem(Int32)
- uid: System.Drawing.Imaging.PropertyItem
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  fullName: System.Drawing.Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
- uid: System.Drawing.Image.GetThumbnailImageAbort
  parent: System.Drawing
  isExternal: false
  name: Image+GetThumbnailImageAbort
  nameWithType: Image+GetThumbnailImageAbort
  fullName: System.Drawing.Image+GetThumbnailImageAbort
- uid: System.Drawing.Image.Height
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
  fullName: System.Drawing.Image.Height
- uid: System.Drawing.Image.HorizontalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: System.Drawing.Image.HorizontalResolution
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsAlphaPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsCanonicalPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsExtendedPixelFormat(PixelFormat)
- uid: System.Drawing.Image.Palette
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
  fullName: System.Drawing.Image.Palette
- uid: System.Drawing.Imaging.ColorPalette
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorPalette
  nameWithType: ColorPalette
  fullName: System.Drawing.Imaging.ColorPalette
- uid: System.Drawing.Image.PhysicalDimension
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: System.Drawing.Image.PhysicalDimension
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Image.PixelFormat
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: System.Drawing.Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: System.Drawing.Image.PropertyIdList
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.PropertyItems
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: System.Drawing.Image.PropertyItems
- uid: System.Drawing.Imaging.PropertyItem[]
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem[]
  spec.csharp:
  - uid: System.Drawing.Imaging.PropertyItem
    name: PropertyItem
    nameWithType: PropertyItem
    fullName: PropertyItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.RawFormat
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: System.Drawing.Image.RawFormat
- uid: System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: System.Drawing.Image.RemovePropertyItem(Int32)
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: System.Drawing.Image.RotateFlip(RotateFlipType)
- uid: System.Drawing.RotateFlipType
  parent: System.Drawing
  isExternal: false
  name: RotateFlipType
  nameWithType: RotateFlipType
  fullName: System.Drawing.RotateFlipType
- uid: System.Drawing.Image.Save(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: System.Drawing.Image.Save(String)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream,ImageFormat)
  nameWithType: Image.Save(Stream,ImageFormat)
  fullName: System.Drawing.Image.Save(Stream,ImageFormat)
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String,ImageFormat)
  nameWithType: Image.Save(String,ImageFormat)
  fullName: System.Drawing.Image.Save(String,ImageFormat)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(Stream,ImageCodecInfo,EncoderParameters)
- uid: System.Drawing.Imaging.ImageCodecInfo
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageCodecInfo
  nameWithType: ImageCodecInfo
  fullName: System.Drawing.Imaging.ImageCodecInfo
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(String,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(String,ImageCodecInfo,EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(Image,EncoderParameters)
  nameWithType: Image.SaveAdd(Image,EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(Image,EncoderParameters)
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame(FrameDimension,Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension,Int32)
  fullName: System.Drawing.Image.SelectActiveFrame(FrameDimension,Int32)
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: System.Drawing.Image.SetPropertyItem(PropertyItem)
- uid: System.Drawing.Image.Size
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
  fullName: System.Drawing.Image.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Image.Tag
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
  fullName: System.Drawing.Image.Tag
- uid: System.Drawing.Image.VerticalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: System.Drawing.Image.VerticalResolution
- uid: System.Drawing.Image.Width
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
  fullName: System.Drawing.Image.Width
- uid: System.Drawing.Image.Clone*
  parent: System.Drawing.Image
  isExternal: false
  name: Clone
  nameWithType: Image.Clone
- uid: System.Drawing.Image.Dispose*
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose
  nameWithType: Image.Dispose
- uid: System.Drawing.Image.Finalize*
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize
  nameWithType: Image.Finalize
- uid: System.Drawing.Image.Flags*
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
- uid: System.Drawing.Image.FrameDimensionsList*
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
- uid: System.Drawing.Image.FromFile*
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile
  nameWithType: Image.FromFile
- uid: System.Drawing.Image.FromHbitmap*
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap
  nameWithType: Image.FromHbitmap
- uid: System.Drawing.Image.FromStream*
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream
  nameWithType: Image.FromStream
- uid: System.Drawing.Image.GetBounds*
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds
  nameWithType: Image.GetBounds
- uid: System.Drawing.Image.GetEncoderParameterList*
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList
  nameWithType: Image.GetEncoderParameterList
- uid: System.Drawing.Image.GetFrameCount*
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount
  nameWithType: Image.GetFrameCount
- uid: System.Drawing.Image.GetPixelFormatSize*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize
  nameWithType: Image.GetPixelFormatSize
- uid: System.Drawing.Image.GetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem
  nameWithType: Image.GetPropertyItem
- uid: System.Drawing.Image.GetThumbnailImage*
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage
  nameWithType: Image.GetThumbnailImage
- uid: System.Drawing.Image.Height*
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
- uid: System.Drawing.Image.HorizontalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
- uid: System.Drawing.Image.IsAlphaPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat
  nameWithType: Image.IsAlphaPixelFormat
- uid: System.Drawing.Image.IsCanonicalPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat
  nameWithType: Image.IsCanonicalPixelFormat
- uid: System.Drawing.Image.IsExtendedPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat
  nameWithType: Image.IsExtendedPixelFormat
- uid: System.Drawing.Image.Palette*
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
- uid: System.Drawing.Image.PhysicalDimension*
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
- uid: System.Drawing.Image.PixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
- uid: System.Drawing.Image.PropertyItems*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
- uid: System.Drawing.Image.RawFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
- uid: System.Drawing.Image.RemovePropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem
  nameWithType: Image.RemovePropertyItem
- uid: System.Drawing.Image.RotateFlip*
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip
  nameWithType: Image.RotateFlip
- uid: System.Drawing.Image.Save*
  parent: System.Drawing.Image
  isExternal: false
  name: Save
  nameWithType: Image.Save
- uid: System.Drawing.Image.SaveAdd*
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd
  nameWithType: Image.SaveAdd
- uid: System.Drawing.Image.SelectActiveFrame*
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame
  nameWithType: Image.SelectActiveFrame
- uid: System.Drawing.Image.SetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem
  nameWithType: Image.SetPropertyItem
- uid: System.Drawing.Image.Size*
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Image.Tag*
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
- uid: System.Drawing.Image.VerticalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
- uid: System.Drawing.Image.Width*
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
