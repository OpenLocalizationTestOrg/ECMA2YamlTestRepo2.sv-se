### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyChangedEventManager
  id: PropertyChangedEventManager
  children:
  - System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  - System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  - System.ComponentModel.PropertyChangedEventManager.NewListenerList
  - System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  - System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  - System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  - System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)
  - System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)
  langs:
  - csharp
  name: PropertyChangedEventManager
  nameWithType: PropertyChangedEventManager
  fullName: System.ComponentModel.PropertyChangedEventManager
  type: Class
  summary: "Ger en <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> implementeringen så att du kan använda mönstret &quot;svaga händelselyssnaren&quot; för att koppla-lyssnare för den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelse.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  remarks: "För att vara lyssnare i det här mönstret måste lyssnare-objekt implementera <xref:System.Windows.IWeakEventListener>.</xref:System.Windows.IWeakEventListener> Du behöver inte implementera <xref:System.Windows.IWeakEventListener>på den klass som är källan till händelserna.</xref:System.Windows.IWeakEventListener>"
  syntax:
    content: 'public class PropertyChangedEventManager : System.Windows.WeakEventManager'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)
  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)
  - System.Windows.WeakEventManager.Item(System.Object)
  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ReadLock
  - System.Windows.WeakEventManager.Remove(System.Object)
  - System.Windows.WeakEventManager.ScheduleCleanup
  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)
  - System.Windows.WeakEventManager.WriteLock
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  id: AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  nameWithType: PropertyChangedEventManager.AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Lägger till den angivna händelsehanteraren som anropas när angiven källa genererar den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelsen för den angivna egenskapen.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  remarks: "Använd den här metoden för att ange händelsehanteraren som du vill använda för att prenumerera på den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelse...</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>  När du använder den här metoden lyssnare objektet behöver inte implementera den <xref:System.Windows.IWeakEventListener>gränssnitt.</xref:System.Windows.IWeakEventListener>"
  syntax:
    content: public static void AddHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler<System.ComponentModel.PropertyChangedEventArgs> handler, string propertyName);
    parameters:
    - id: source
      type: System.ComponentModel.INotifyPropertyChanged
      description: "Käll-objektet som aktiverar den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelse.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
    - id: handler
      type: System.EventHandler{System.ComponentModel.PropertyChangedEventArgs}
      description: "Det ombud som hanterar den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelse.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
    - id: propertyName
      type: System.String
      description: "Namnet på den egenskap som finns på `source` som ska lyssna efter ändringar. Ange till <xref:System.String>att ange &quot;alla egendom&quot;.</xref:System.String>"
  overload: System.ComponentModel.PropertyChangedEventManager.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Fler än en metod som är associerad med <code> handler </code>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  id: AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  nameWithType: PropertyChangedEventManager.AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Lägger till den angivna lyssnaren i listan över lyssnare på den angivna källan."
  syntax:
    content: public static void AddListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);
    parameters:
    - id: source
      type: System.ComponentModel.INotifyPropertyChanged
      description: "Objektet med händelsen."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "Objektet som ska läggas till som en lyssnare."
    - id: propertyName
      type: System.String
      description: "Namnet på den egenskap som finns på `source` som ska lyssna efter ändringar. Ange till <xref:System.String>att ange &quot;alla egendom&quot;.</xref:System.String>"
  overload: System.ComponentModel.PropertyChangedEventManager.AddListener*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.NewListenerList
  id: NewListenerList
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: NewListenerList()
  nameWithType: PropertyChangedEventManager.NewListenerList()
  fullName: System.ComponentModel.PropertyChangedEventManager.NewListenerList()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Returnerar ett nytt objekt att innehålla lyssnare till den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelse.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  syntax:
    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager.ListenerList
      description: "Ett nytt objekt att innehålla lyssnare till den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelse.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  overload: System.ComponentModel.PropertyChangedEventManager.NewListenerList*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  id: Purge(System.Object,System.Object,System.Boolean)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: Purge(Object,Object,Boolean)
  nameWithType: PropertyChangedEventManager.Purge(Object,Object,Boolean)
  fullName: System.ComponentModel.PropertyChangedEventManager.Purge(Object,Object,Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Tar bort lyssnare som inte längre är aktiva data för den angivna källan."
  syntax:
    content: protected override bool Purge (object source, object data, bool purgeAll);
    parameters:
    - id: source
      type: System.Object
      description: "Ta bort alla lyssnare från källobjektet."
    - id: data
      type: System.Object
      description: "Data att tas bort. Detta förväntas vara en <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
    - id: purgeAll
      type: System.Boolean
      description: "Ange till <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> slutar att lyssna och ta bort alla data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om vissa poster har tagits bort; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyChangedEventManager.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  id: RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  nameWithType: PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Tar bort den angivna händelsehanteraren från angiven källa."
  syntax:
    content: public static void RemoveHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler<System.ComponentModel.PropertyChangedEventArgs> handler, string propertyName);
    parameters:
    - id: source
      type: System.ComponentModel.INotifyPropertyChanged
      description: "Käll-objektet som aktiverar den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelse.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
    - id: handler
      type: System.EventHandler{System.ComponentModel.PropertyChangedEventArgs}
      description: "Det ombud som hanterar den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelse.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
    - id: propertyName
      type: System.String
      description: "Namnet på den egenskap som finns på `source` som slutar att lyssna efter ändringar. Ange till <xref:System.String>att ange &quot;alla egendom&quot;.</xref:System.String>"
  overload: System.ComponentModel.PropertyChangedEventManager.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Fler än en metod som är associerad med <code> handler </code>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  id: RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  nameWithType: PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Tar bort den angivna lyssnaren från listan över lyssnare på den angivna källan."
  syntax:
    content: public static void RemoveListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);
    parameters:
    - id: source
      type: System.ComponentModel.INotifyPropertyChanged
      description: "Objekt att ta bort lyssnaren från."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "Lyssnaren ska tas bort."
    - id: propertyName
      type: System.String
      description: "Namnet på den egenskap som finns på `source` som slutar att lyssna efter ändringar. Ange till <xref:System.String>att ange &quot;alla egendom&quot;.</xref:System.String>"
  overload: System.ComponentModel.PropertyChangedEventManager.RemoveListener*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: PropertyChangedEventManager.StartListening(Object)
  fullName: System.ComponentModel.PropertyChangedEventManager.StartListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Börjar lyssna efter den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelsen på den angivna källan.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  remarks: "Detta anger inte en egenskap. när händelsen manager startas, har alla egenskaper på källan <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>avisering aktiverad.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "Objektet som du vill påbörja avlyssning för <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  overload: System.ComponentModel.PropertyChangedEventManager.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: PropertyChangedEventManager.StopListening(Object)
  fullName: System.ComponentModel.PropertyChangedEventManager.StopListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Slutar lyssna efter den <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>händelsen på den angivna källan.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "Källobjektet som slutar att lyssna för <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  overload: System.ComponentModel.PropertyChangedEventManager.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.WeakEventManager
  isExternal: false
  name: System.Windows.WeakEventManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  nameWithType: PropertyChangedEventManager.AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
- uid: System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.EventHandler{System.ComponentModel.PropertyChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PropertyChangedEventArgs>
  nameWithType: EventHandler<PropertyChangedEventArgs>
  fullName: System.EventHandler<System.ComponentModel.PropertyChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.PropertyChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: PropertyChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  nameWithType: PropertyChangedEventManager.AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.AddListener(INotifyPropertyChanged,IWeakEventListener,String)
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: false
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.ComponentModel.PropertyChangedEventManager.NewListenerList
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: NewListenerList()
  nameWithType: PropertyChangedEventManager.NewListenerList()
  fullName: System.ComponentModel.PropertyChangedEventManager.NewListenerList()
- uid: System.Windows.WeakEventManager.ListenerList
  parent: System.Windows
  isExternal: false
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: Purge(Object,Object,Boolean)
  nameWithType: PropertyChangedEventManager.Purge(Object,Object,Boolean)
  fullName: System.ComponentModel.PropertyChangedEventManager.Purge(Object,Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  nameWithType: PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  nameWithType: PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
- uid: System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: StartListening(Object)
  nameWithType: PropertyChangedEventManager.StartListening(Object)
  fullName: System.ComponentModel.PropertyChangedEventManager.StartListening(Object)
- uid: System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: StopListening(Object)
  nameWithType: PropertyChangedEventManager.StopListening(Object)
  fullName: System.ComponentModel.PropertyChangedEventManager.StopListening(Object)
- uid: System.ComponentModel.PropertyChangedEventManager.AddHandler*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: AddHandler
  nameWithType: PropertyChangedEventManager.AddHandler
- uid: System.ComponentModel.PropertyChangedEventManager.AddListener*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: AddListener
  nameWithType: PropertyChangedEventManager.AddListener
- uid: System.ComponentModel.PropertyChangedEventManager.NewListenerList*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: NewListenerList
  nameWithType: PropertyChangedEventManager.NewListenerList
- uid: System.ComponentModel.PropertyChangedEventManager.Purge*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: Purge
  nameWithType: PropertyChangedEventManager.Purge
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveHandler*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: RemoveHandler
  nameWithType: PropertyChangedEventManager.RemoveHandler
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveListener*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: RemoveListener
  nameWithType: PropertyChangedEventManager.RemoveListener
- uid: System.ComponentModel.PropertyChangedEventManager.StartListening*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: StartListening
  nameWithType: PropertyChangedEventManager.StartListening
- uid: System.ComponentModel.PropertyChangedEventManager.StopListening*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: StopListening
  nameWithType: PropertyChangedEventManager.StopListening
