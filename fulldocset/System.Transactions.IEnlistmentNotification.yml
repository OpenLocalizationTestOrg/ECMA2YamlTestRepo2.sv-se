### YamlMime:ManagedReference
items:
- uid: System.Transactions.IEnlistmentNotification
  id: IEnlistmentNotification
  children:
  - System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  - System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  langs:
  - csharp
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
  type: Interface
  summary: "Beskriver ett gränssnitt som en resurshanterare bör tillämpa för att tillhandahålla två fasen commit notification återanrop för transaktionshanteraren när resurshanteraren för deltagande."
  remarks: "För en resurshanterare att delta i en transaktion måste det medverka i transaktionen via transaktionshanteraren. Den <xref:System.Transactions.Transaction>klassen definierar en uppsättning metoder vars namn börjar med `Enlist` som den här funktionen.</xref:System.Transactions.Transaction> De olika `Enlist` metoder som motsvarar de olika typerna av registrering som en resurs maanger kan ha.       Den här klassen beskriver ett gränssnitt som en resurshanterare bör tillämpa för att tillhandahålla två fasen commit notification återanrop för transaktionshanteraren när resurshanteraren för deltagande. För varje resurshanteraren implementering av gränssnittet IEnlistmentNotification, bör du registrera den med hjälp av den <xref:System.Transactions.Transaction.EnlistVolatile%2A>metoden eller <xref:System.Transactions.Transaction.EnlistDurable%2A>-metoden i den <xref:System.Transactions.Transaction>klassen, beroende på om resursen är temporär eller beständig.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A> Mer information om registrering och 2PC finns [resurshanteraren resurser som deltagare i en transaktion](~/add/includes/ajax-current-ext-md.md) och [genomför en transaktion i enfas och flera fasen](~/add/includes/ajax-current-ext-md.md) respektive.       Transaktionshanteraren meddelar registrerade objektet i olika faser i två fasen genomför protokollet med följande metoder.      | Metoden | Beskrivning |   |------------|-----------------|   | <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>| Den här metoden för registrerade objekt används som ett återanrop av transaktionshanterare under den första fasen av en transaktion när transaktionshanteraren deltagare om de kan använda för att genomföra transaktionen. |   | <xref:System.Transactions.IEnlistmentNotification.Commit%2A>| Den här metoden objektets registrerade används som ett återanrop av transaktionshanterare under den andra fasen i en transaktion om transaktionen är bekräftad. |   | <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>| Den här metoden för registrerade objekt används som ett återanrop av transaktionshanterare under den andra fasen i en transaktion om transaktionen avbryts (som, återställs). |   | <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>| Den här metoden för registrerade objekt används som ett återanrop av transaktionshanterare under den andra fasen i en transaktion om transaktionen tvekar. |      > [!NOTE] > Bör du vara medveten att meddelanden inte kan skickas sekventiellt och i en viss ordning.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification.Prepare%2A>"
  example:
  - "The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/t-system.transactions.ie_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/t-system.transactions.ie_1.vb)]"
  syntax:
    content: public interface IEnlistmentNotification
  implements: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  id: Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Meddelar en registrerade objekt att allokeras en transaktion."
  remarks: "Transaktionshanteraren anropar den här metoden för registrerade objekt under den andra fasen av ett åtagande när en instruktion om alla deltagare att genomföra transaktionen.       Resurshanteraren ska utföra allt arbete som behövs för att avsluta transaktionen och informera TM som är klar genom att anropa den <xref:System.Transactions.Enlistment.Done%2A>metoden på den `enlistment` parameter.</xref:System.Transactions.Enlistment.Done%2A>       Om hanteraren för filserverresurser har varaktigt registrerad men inte svarar genom att anropa <xref:System.Transactions.Enlistment.Done%2A>-metoden transaktionshanteraren är säker på att resurshanteraren har tagit emot anropet.</xref:System.Transactions.Enlistment.Done%2A> Därför transaktionshanteraren håller väntar på svar och underhåller information som är relevanta för den här transaktionen.  Om <xref:System.Transactions.Enlistment.Done%2A>är aldrig anropa denna typ av information sparas runt permanent i minnet eller i en resurs för hela systemet.</xref:System.Transactions.Enlistment.Done%2A> Detta resulterar i att frigöras resurser. När det gäller en distribuerad transaktion kan detta slutligen fylla MSDTC-logg som stoppas MSDTC-processen. Om en transaktion som hanteras av <xref:System.Transactions>, detta resulterar i större gradvis och kontinuerliga process resurshanterare minnesförbrukning.</xref:System.Transactions> Därför är det viktigt att du anropar den <xref:System.Transactions.Enlistment.Done%2A>metoden när resurshanteraren är klar med din förbereda arbete.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Commit (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objekt som används för att skicka ett svar till transaktionshanteraren."
  overload: System.Transactions.IEnlistmentNotification.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  id: InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Meddelar ett registrerade objekt som status för en transaktion är osäker."
  remarks: "Den här metoden anropas för temporär resurser när transaktionshanteraren har åberopat ett enda steg genomförandet till en enskild varaktiga resurs och sedan anslutningen till resursen varaktiga avbröts innan du hämtar transaktion resultatet. Vid den punkten kan resultatet av denna transaktion inte på ett säkert sätt fastställas.       Eftersom InDoubt anses vara ett slutgiltigt tillstånd för en transaktion, ska du inte anropa <xref:System.Transactions.IEnlistmentNotification.Commit%2A>eller <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>efter att InDoubt.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A>      > [!NOTE] > Implementeringen av den här metoden för temporär resursen ska utföra oavsett återställning eller inneslutning åtgärden klarar på den berörda informationen.  Det måste också anropa den <xref:System.Transactions.Enlistment.Done%2A>metoden på den på den `enlistment` när du är klar med sitt arbete.</xref:System.Transactions.Enlistment.Done%2A>       Om hanteraren för filserverresurser har varaktigt registrerad men inte svarar genom att anropa <xref:System.Transactions.Enlistment.Done%2A>-metoden transaktionshanteraren är osäker att resurshanteraren har tagit emot anropet InDoubt.</xref:System.Transactions.Enlistment.Done%2A> Därför transaktionshanteraren håller väntar på svar och underhåller information som är relevanta för den här transaktionen.  Om <xref:System.Transactions.Enlistment.Done%2A>är aldrig anropa denna typ av information sparas runt permanent i minnet eller i en resurs för hela systemet.</xref:System.Transactions.Enlistment.Done%2A> Detta resulterar i att frigöras resurser. När det gäller en distribuerad transaktion kan detta slutligen fylla MSDTC-logg som stoppas MSDTC-processen. Om en transaktion som hanteras av <xref:System.Transactions>, detta resulterar i större gradvis och kontinuerliga process resurshanterare minnesförbrukning.</xref:System.Transactions> Därför är det viktigt att du anropar den <xref:System.Transactions.Enlistment.Done%2A>metoden när resurshanteraren är klar med din förbereda arbete.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void InDoubt (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objekt som används för att skicka ett svar till transaktionshanteraren."
  overload: System.Transactions.IEnlistmentNotification.InDoubt*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  id: Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Meddelar ett registrerade objekt som en transaktion förbereds för åtaganden."
  remarks: "Transaktionshanteraren anropar den här metoden för en resurs som är registrerade manager under fas 1 av ett åtagande när den frågar deltagare om de kan använda för att genomföra transaktionen.       När du implementerar en beständig resurshanterare, bör du logga din förbereda posten under den här fasen. Posten ska innehålla all information som behövs för att utföra återställningen. Detta inkluderar den <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>egenskapen som har överförts till transaktionshanteraren i den <xref:System.Transactions.TransactionManager.Reenlist%2A>metoden under återställningen.</xref:System.Transactions.TransactionManager.Reenlist%2A> </xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> Mer information om återställning finns [utför återställningen](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       Resurshanteraren ska utföra allt arbete som måste slutföras innan du anropar den <xref:System.Transactions.PreparingEnlistment.Prepared%2A>metod för den `preparingEnlistment` parameter som anger dess rösta på åtagande.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Kontrollera att detta sker innan du tar emot något fas 2 meddelande sådana som genomför återställning eller osäkra. Detta beror på att fas 2 meddelanden kan inträffa infogade på samma tråd som kallas den <xref:System.Transactions.PreparingEnlistment.Prepared%2A>metod i fas 1.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Därför bör du inte göra allt arbete efter den <xref:System.Transactions.PreparingEnlistment.Prepared%2A>anrop (till exempel släppa Lås) som du förväntar dig att har slutförts innan du tar emot meddelanden för fas 2.</xref:System.Transactions.PreparingEnlistment.Prepared%2A>       Du kan också anropa metoden i den `preparingEnlistment` parameter som anger en röst för återställning.       Om du vill att objektet ska bara se och ta hänsyn till förloppet för transaktion, utan deltar i den implementeringen av den här metoden ska anropa den <xref:System.Transactions.Enlistment.Done%2A>metod för den `preparingEnlistment` när du är klar med sitt arbete.</xref:System.Transactions.Enlistment.Done%2A> På så sätt, emot resurshanteraren inte något fas 2-meddelande."
  syntax:
    content: public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);
    parameters:
    - id: preparingEnlistment
      type: System.Transactions.PreparingEnlistment
      description: "En <xref href=&quot;System.Transactions.PreparingEnlistment&quot;> </xref> objekt som används för att skicka ett svar till transaktionshanteraren."
  overload: System.Transactions.IEnlistmentNotification.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  id: Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Meddelar ett registrerade objekt som en transaktion som återställs (avbrutits)."
  remarks: "Transaktionshanteraren anropar den här metoden för registrerade objekt när transaktionen som återställs (avbröts) på grund av en eller flera transaktion deltagare oförmåga att genomföra transaktionen.       Resurshanteraren ska utföra allt arbete som behövs för att avsluta transaktionen och informera TM som är klar genom att anropa den <xref:System.Transactions.Enlistment.Done%2A>metoden på den `enlistment` parameter.</xref:System.Transactions.Enlistment.Done%2A>       Om hanteraren för filserverresurser har varaktigt registrerad men inte svarar genom att anropa <xref:System.Transactions.Enlistment.Done%2A>-metoden transaktionshanteraren är säker på att resurshanteraren har tagit emot Rollback-anrop.</xref:System.Transactions.Enlistment.Done%2A> Därför transaktionshanteraren håller väntar på svar och underhåller information som är relevanta för den här transaktionen.  Om <xref:System.Transactions.Enlistment.Done%2A>är aldrig anropa denna typ av information sparas runt permanent i minnet eller i en resurs för hela systemet.</xref:System.Transactions.Enlistment.Done%2A> Detta resulterar i att frigöras resurser. När det gäller en distribuerad transaktion kan detta slutligen fylla MSDTC-logg som stoppas MSDTC-processen. Om en transaktion som hanteras av <xref:System.Transactions>, detta resulterar i större gradvis och kontinuerliga process resurshanterare minnesförbrukning.</xref:System.Transactions> Därför är det viktigt att du anropar den <xref:System.Transactions.Enlistment.Done%2A>metoden när resurshanteraren är klar med din förbereda arbete.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Rollback (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objekt som används för att skicka ett svar till transaktionshanteraren."
  overload: System.Transactions.IEnlistmentNotification.Rollback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
- uid: System.Transactions.PreparingEnlistment
  parent: System.Transactions
  isExternal: false
  name: PreparingEnlistment
  nameWithType: PreparingEnlistment
  fullName: System.Transactions.PreparingEnlistment
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Commit*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit
  nameWithType: IEnlistmentNotification.Commit
- uid: System.Transactions.IEnlistmentNotification.InDoubt*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt
  nameWithType: IEnlistmentNotification.InDoubt
- uid: System.Transactions.IEnlistmentNotification.Prepare*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare
  nameWithType: IEnlistmentNotification.Prepare
- uid: System.Transactions.IEnlistmentNotification.Rollback*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback
  nameWithType: IEnlistmentNotification.Rollback
