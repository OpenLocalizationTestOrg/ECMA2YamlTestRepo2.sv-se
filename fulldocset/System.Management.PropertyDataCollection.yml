### YamlMime:ManagedReference
items:
- uid: System.Management.PropertyDataCollection
  id: PropertyDataCollection
  children:
  - System.Management.PropertyDataCollection.Add(System.String,System.Object)
  - System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  - System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  - System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  - System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  - System.Management.PropertyDataCollection.Count
  - System.Management.PropertyDataCollection.GetEnumerator
  - System.Management.PropertyDataCollection.IsSynchronized
  - System.Management.PropertyDataCollection.Item(System.String)
  - System.Management.PropertyDataCollection.Remove(System.String)
  - System.Management.PropertyDataCollection.SyncRoot
  - System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: PropertyDataCollection
  nameWithType: PropertyDataCollection
  fullName: System.Management.PropertyDataCollection
  type: Class
  summary: "Representerar en uppsättning egenskaper för ett WMI-objekt."
  remarks: ''
  example:
  - "The following example lists information about the **Win32_OperatingSystem** class using the <xref:System.Management.PropertyData> class. For more information about **Win32_OperatingSystem**, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-cs[wminet_PropertyDataCollection#1](~/add/codesnippet/csharp/t-system.management.prop_1_1.cs)]\n [!code-vb[wminet_PropertyDataCollection#1](~/add/codesnippet/visualbasic/t-system.management.prop_1_1.vb)]"
  syntax:
    content: 'public class PropertyDataCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: PropertyDataCollection.Add(String,Object)
  fullName: System.Management.PropertyDataCollection.Add(String,Object)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Lägger till en ny <xref href=&quot;System.Management.PropertyData&quot;> </xref> med det angivna värdet. Värdet får inte vara null och måste kunna konverteras till typen Common Information Model (CIM)."
  remarks: "Egenskaper kan endast läggas till klassdefinitioner inte till instanser. Den här metoden är endast giltig när den anropas på en <xref:System.Management.PropertyDataCollection>i <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void Add (string propertyName, object propertyValue);
    parameters:
    - id: propertyName
      type: System.String
      description: "Namnet på den nya egenskapen."
    - id: propertyValue
      type: System.Object
      description: "Värdet på egenskapen (inte får vara null)."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  id: Add(System.String,System.Management.CimType,System.Boolean)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,CimType,Boolean)
  nameWithType: PropertyDataCollection.Add(String,CimType,Boolean)
  fullName: System.Management.PropertyDataCollection.Add(String,CimType,Boolean)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Lägger till en ny <xref href=&quot;System.Management.PropertyData&quot;> </xref> utan tilldelade värde."
  remarks: "Egenskaper kan endast läggas till klassdefinitioner inte till instanser. Den här metoden är endast giltig när den anropas på en <xref:System.Management.PropertyDataCollection>i <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Add (string propertyName, System.Management.CimType propertyType, bool isArray);
    parameters:
    - id: propertyName
      type: System.String
      description: "Namnet på egenskapen."
    - id: propertyType
      type: System.Management.CimType
      description: "Egenskapen Common Information Model (CIM)-typ."
    - id: isArray
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ange att egenskapen är en matristyp; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  id: Add(System.String,System.Object,System.Management.CimType)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,Object,CimType)
  nameWithType: PropertyDataCollection.Add(String,Object,CimType)
  fullName: System.Management.PropertyDataCollection.Add(String,Object,CimType)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Lägger till en ny <xref href=&quot;System.Management.PropertyData&quot;> </xref> med det angivna värdet och Common Information Model (CIM) skriver."
  remarks: "Egenskaper kan endast läggas till klassdefinitioner inte till instanser. Den här metoden är endast giltig när den anropas på en <xref:System.Management.PropertyDataCollection>i <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Add (string propertyName, object propertyValue, System.Management.CimType propertyType);
    parameters:
    - id: propertyName
      type: System.String
      description: "Namnet på egenskapen."
    - id: propertyValue
      type: System.Object
      description: "Värdet på egenskapen (som kan vara null)."
    - id: propertyType
      type: System.Management.CimType
      description: "CIM-typ för egenskapen."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Kopior av <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> i en matris."
  remarks: "##.NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Matrisen som du vill kopiera den <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Index som du vill börja kopiera."
  overload: System.Management.PropertyDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  id: CopyTo(System.Management.PropertyData[],System.Int32)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: CopyTo(PropertyData[],Int32)
  nameWithType: PropertyDataCollection.CopyTo(PropertyData[],Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(PropertyData[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Kopior av <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> till en särskild <xref href=&quot;System.Management.PropertyData&quot;> </xref> objektmatris."
  remarks: "##.NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (System.Management.PropertyData[] propertyArray, int index);
    parameters:
    - id: propertyArray
      type: System.Management.PropertyData[]
      description: "Målmatrisen som innehåller den kopierade <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Index i Målmatrisen som du vill börja kopiera."
  overload: System.Management.PropertyDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Count
  id: Count
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Count
  nameWithType: PropertyDataCollection.Count
  fullName: System.Management.PropertyDataCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Hämtar antalet objekt i den <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
  remarks: "##Egenskapsvärde antalet objekt i samlingen.      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Returnerar ett <xref:System.Int32>värde som representerar antalet objekt i samlingen.</xref:System.Int32>"
  overload: System.Management.PropertyDataCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PropertyDataCollection.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Returnerar uppräknaren för den här <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
  remarks: "Du kan endast iterera (som i en Visual Basic .NET `For Each` instruktion eller en C# `For` instruktionen) via en uppräknare en gång. Det minne som innehåller instanser släpps av WMI så att det går inte att vara spolas tillbaka uppräknaren. Därför kan den <xref:System.Management.PropertyDataCollection.Count%2A>metoden kan inte användas eftersom den kräver spola tillbaka uppräknaren.</xref:System.Management.PropertyDataCollection.Count%2A>       Endast-framåt-uppräknare är normalt snabbare och använder mindre minne än vanliga uppräknare, men de gör inte anrop till <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.</xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>       Om en uppräknare rewindable hållas objekt i samlingen för flera uppräkningar.      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Management.PropertyDataCollection.PropertyDataEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.PropertyDataCollection.PropertyDataEnumerator
      description: "En <xref:System.Collections.IEnumerator>som kan användas för att gå igenom samlingen.</xref:System.Collections.IEnumerator>"
  overload: System.Management.PropertyDataCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
  fullName: System.Management.PropertyDataCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Hämtar ett värde som anger om objektet är synkroniserad."
  remarks: "##Värdet för egenskapen `true` om objektet är synkroniserade, annars `false`.      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Returnerar en <xref:System.Boolean>värde som anger om objektet är synkroniserad.</xref:System.Boolean>"
  overload: System.Management.PropertyDataCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyDataCollection.Item(String)
  fullName: System.Management.PropertyDataCollection.Item(String)
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Hämtar den angivna egenskapen från det <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>, med [] syntax. Den här egenskapen är indexeraren för den <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> klass."
  remarks: "##Egenskapsvärdet A <xref:System.Management.PropertyData>, baserat på det angivna namnet.</xref:System.Management.PropertyData>      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example gets the **Freespace** property from a <xref:System.Management.ManagementClass>.  \n  \n [!code-vb[wminet_PropertyDataCollection_Item#1](~/add/codesnippet/visualbasic/p-system.management.prop_4_1.vb)]\n [!code-cs[wminet_PropertyDataCollection_Item#1](~/add/codesnippet/csharp/p-system.management.prop_4_1.cs)]"
  syntax:
    content: public virtual System.Management.PropertyData this[string propertyName] { get; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Namnet på egenskapen som ska hämtas."
    return:
      type: System.Management.PropertyData
      description: "Returnerar en <xref href=&quot;System.Management.PropertyData&quot;> </xref> som innehåller data för en angiven egenskap i samlingen."
  overload: System.Management.PropertyDataCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: PropertyDataCollection.Remove(String)
  fullName: System.Management.PropertyDataCollection.Remove(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Removes a <xref href=&quot;System.Management.PropertyData&quot;></xref> from the <xref href=&quot;System.Management.PropertyDataCollection&quot;></xref>."
  remarks: "Egenskaper kan endast tas bort från klassdefinitioner inte från instanser. Den här metoden är endast giltig när den anropas på en egenskapsuppsättning i <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass>      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void Remove (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Namnet på egenskapen som ska tas bort."
  overload: System.Management.PropertyDataCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
  fullName: System.Management.PropertyDataCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Hämtar objektet som ska användas för synkronisering."
  remarks: "##Egenskapsvärde objekt som ska användas för synkronisering.      ## .NET framework säkerhet fullständigt förtroende för omedelbar anropare. Den här medlemmen kan inte användas av delvis betrodd kod. Mer information finns i [med bibliotek från delvis betrodd kod](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Returnerar ett <xref:System.Object>värde som innehåller objekt som ska användas för synkronisering.</xref:System.Object>"
  overload: System.Management.PropertyDataCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Returnerar en <xref:System.Collections.IEnumerator>som går igenom den <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic och C#]       Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare.  Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. <xref:System.Collections.IEnumerator.Reset%2A>medför också uppräknaren tillbaka till den här positionen.</xref:System.Collections.IEnumerator.Reset%2A> AT detta position, anropar <xref:System.Collections.IEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.IEnumerator.Current%2A> Därför måste du anropa <xref:System.Collections.IEnumerator.MoveNext%2A>att avancera uppräknaren till det första elementet i mängden innan du läser värdet för <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kallas.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Anger <xref:System.Collections.IEnumerator.Current%2A>till nästa element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Om <xref:System.Collections.IEnumerator.MoveNext%2A>passerar slutet på mängden uppräknaren är placerad efter det sista elementet i mängden och <xref:System.Collections.IEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> När uppräknaren är på denna position efterföljande anrop till <xref:System.Collections.IEnumerator.MoveNext%2A>också returnera `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Collections.IEnumerator.MoveNext%2A>returnerade `false`, anropa <xref:System.Collections.IEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Ange <xref:System.Collections.IEnumerator.Current%2A>att det första elementet i mängden igen, kan du anropa <xref:System.Collections.IEnumerator.Reset%2A>följt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren inaktuella blir och nästa anropa eller <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>genererar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Om samlingen har ändrats mellan <xref:System.Collections.IEnumerator.MoveNext%2A>och <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en säker tråd-procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.       Den här metoden är en O(1)-åtgärd."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.PropertyDataCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,Object)
  nameWithType: PropertyDataCollection.Add(String,Object)
  fullName: System.Management.PropertyDataCollection.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,CimType,Boolean)
  nameWithType: PropertyDataCollection.Add(String,CimType,Boolean)
  fullName: System.Management.PropertyDataCollection.Add(String,CimType,Boolean)
- uid: System.Management.CimType
  parent: System.Management
  isExternal: false
  name: CimType
  nameWithType: CimType
  fullName: System.Management.CimType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,Object,CimType)
  nameWithType: PropertyDataCollection.Add(String,Object,CimType)
  fullName: System.Management.PropertyDataCollection.Add(String,Object,CimType)
- uid: System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo(PropertyData[],Int32)
  nameWithType: PropertyDataCollection.CopyTo(PropertyData[],Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(PropertyData[],Int32)
- uid: System.Management.PropertyData[]
  parent: System.Management
  isExternal: false
  name: PropertyData
  nameWithType: PropertyData
  fullName: System.Management.PropertyData[]
  spec.csharp:
  - uid: System.Management.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: PropertyData[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.PropertyDataCollection.Count
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDataCollection.Count
  fullName: System.Management.PropertyDataCollection.Count
- uid: System.Management.PropertyDataCollection.GetEnumerator
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PropertyDataCollection.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.GetEnumerator()
- uid: System.Management.PropertyDataCollection.PropertyDataEnumerator
  parent: System.Management
  isExternal: false
  name: PropertyDataCollection+PropertyDataEnumerator
  nameWithType: PropertyDataCollection+PropertyDataEnumerator
  fullName: System.Management.PropertyDataCollection+PropertyDataEnumerator
- uid: System.Management.PropertyDataCollection.IsSynchronized
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
  fullName: System.Management.PropertyDataCollection.IsSynchronized
- uid: System.Management.PropertyDataCollection.Item(System.String)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Item(String)
  nameWithType: PropertyDataCollection.Item(String)
  fullName: System.Management.PropertyDataCollection.Item(String)
- uid: System.Management.PropertyData
  parent: System.Management
  isExternal: false
  name: PropertyData
  nameWithType: PropertyData
  fullName: System.Management.PropertyData
- uid: System.Management.PropertyDataCollection.Remove(System.String)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Remove(String)
  nameWithType: PropertyDataCollection.Remove(String)
  fullName: System.Management.PropertyDataCollection.Remove(String)
- uid: System.Management.PropertyDataCollection.SyncRoot
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
  fullName: System.Management.PropertyDataCollection.SyncRoot
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.PropertyDataCollection.Add*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add
  nameWithType: PropertyDataCollection.Add
- uid: System.Management.PropertyDataCollection.CopyTo*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyDataCollection.CopyTo
- uid: System.Management.PropertyDataCollection.Count*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDataCollection.Count
- uid: System.Management.PropertyDataCollection.GetEnumerator*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PropertyDataCollection.GetEnumerator
- uid: System.Management.PropertyDataCollection.IsSynchronized*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
- uid: System.Management.PropertyDataCollection.Item*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Item
  nameWithType: PropertyDataCollection.Item
- uid: System.Management.PropertyDataCollection.Remove*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyDataCollection.Remove
- uid: System.Management.PropertyDataCollection.SyncRoot*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator
