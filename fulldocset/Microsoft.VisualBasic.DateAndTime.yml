### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.DateAndTime
  id: DateAndTime
  children:
  - Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.DateString
  - Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  - Microsoft.VisualBasic.DateAndTime.Now
  - Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.TimeOfDay
  - Microsoft.VisualBasic.DateAndTime.Timer
  - Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.TimeString
  - Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Today
  - Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  langs:
  - csharp
  name: DateAndTime
  nameWithType: DateAndTime
  fullName: Microsoft.VisualBasic.DateAndTime
  type: Class
  summary: "Den <xref uid=&quot;langword_csharp_DateAndTime&quot; name=&quot;DateAndTime&quot; href=&quot;&quot;> </xref> modulen innehåller metoderna och egenskaper som används i åtgärder för datum och tid."
  remarks: "Den här modulen stöder nyckelord i Visual Basic och körningsbibliotek medlemmar som hämta aktuellt datum och tid, datum beräkningar, returnera ett datum eller klockslag, ange datum och tid eller tid varaktigheten för en process."
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n```  \nDim thisDate As Date  \nthisDate = Today   \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class DateAndTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  id: DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller ett värde för datum och tid som ett angivet tidsintervall har lagts till."
  remarks: "Du kan använda den `DateAdd` funktionen för att lägga till eller ta bort ett angivet tidsintervall från ett visst datum. Du kan till exempel beräkna 30 dagar från i dag eller tid 45 minuter innan nu.       Att lägga till dagar till `DateValue`, kan du använda `DateInterval.Day`, `DateInterval.DayOfYear`, eller `DateInterval.Weekday`. De behandlas som likvärdiga eftersom `DayOfYear` och `Weekday` inte är meningsfull tidsintervall.       Den `DateAdd` funktionen aldrig returnerar ett ogiltigt datum. Om det behövs, justeras en dagdel av det resulterande datumet nedåt till den sista dagen i den resulterande månaden i den resulterande år. I följande exempel läggs en månad till 31 januari: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` i det här exemplet `DateAdd` returnerar `#2/28/1995#`, inte `#2/31/1995#`. Om `DateValue` är `#1/31/1996#`, returnerar `#2/29/1996#` eftersom 1996 är ett skottår.      > [!NOTE]  >   `DateAdd` använder den aktuella kalender-inställningen från den <xref:System.Globalization.CultureInfo.CurrentCulture%2A>egenskapen för den <xref:System.Globalization.CultureInfo>klassen i den <xref:System.Globalization>namnområde.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Standard <xref:System.Globalization.CultureInfo.CurrentCulture%2A>värdena bestäms av **Kontrollpanelen** inställningar.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Eftersom varje `Date` värdet stöds av en <xref:System.DateTime>struktur, dess metoder ger ytterligare alternativ för att lägga till tidsintervaller.</xref:System.DateTime> Exempelvis kan du lägga till en anger hur många dagar, avrundat till närmaste millisekunder till en `Date` variabeln på följande sätt: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` den `Interval` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Sträng | Enheten för tidsintervallet för att lägga till |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Dag. förkortat till heltalsvärde |   | `DateInterval.DayOfYear`|y| Dag. förkortat till heltalsvärde |   | `DateInterval.Hour`|h| Timme. avrundat till närmaste millisekunder |   | `DateInterval.Minute`|n| Minut; avrundat till närmaste millisekunders |   | `DateInterval.Month`|m| Månad. förkortat till heltalsvärde |   | `DateInterval.Quarter`|q| Kvartal; förkortat till heltalsvärde |   | `DateInterval.Second`|s| Sekund. avrundat till närmaste millisekunder |   | `DateInterval.Weekday`|w| Dag. förkortat till heltalsvärde |   | `DateInterval.WeekOfYear`|ww| Veckan. förkortat till heltalsvärde |   | `DateInterval.Year`|yyyy| År. förkortat till heltalsvärde |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/1a306149-706d-46fd-9b1a-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Uppräkningsvärdet eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som representerar det tidsintervall som du vill lägga till."
    - id: Number
      type: System.Double
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Flyttal uttryck som representerar antalet intervall som du vill lägga till. `Number`kan vara positivt (för att hämta datum/tid-värden i framtiden) eller negativt (för att hämta datum/tid-värden i tidigare). Den kan innehålla en bråkdelar tillhör när `Interval` anger timmar, minuter och sekunder. För andra `Interval`, alla bråkdelar tillhör `Number` ignoreras."
    - id: DateValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Ett uttryck som representerar datumet och tiden som är intervallet som ska läggas till. `DateValue`själva ändras inte i det anropande programmet."
    return:
      type: System.DateTime
      description: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller ett värde för datum och tid som ett angivet tidsintervall har lagts till."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>är inte tvingande i förhållande till <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>är inte giltig."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Beräknat datum som infaller före 00:00:00 på 1 januari år 1 eller senare än 23:59:59 den 31 December 9999."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  id: DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller ett värde för datum och tid som ett angivet tidsintervall har lagts till."
  remarks: "Du kan använda den `DateAdd` funktionen för att lägga till eller ta bort ett angivet tidsintervall från ett visst datum. Du kan till exempel beräkna 30 dagar från i dag eller tid 45 minuter innan nu.       Att lägga till dagar till `DateValue`, kan du använda `DateInterval.Day`, `DateInterval.DayOfYear`, eller `DateInterval.Weekday`. De behandlas som likvärdiga eftersom `DayOfYear` och `Weekday` inte är meningsfull tidsintervall.       Den `DateAdd` funktionen aldrig returnerar ett ogiltigt datum. Om det behövs, justeras en dagdel av det resulterande datumet nedåt till den sista dagen i den resulterande månaden i den resulterande år. I följande exempel läggs en månad till 31 januari: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` i det här exemplet `DateAdd` returnerar `#2/28/1995#`, inte `#2/31/1995#`. Om `DateValue` är `#1/31/1996#`, returnerar `#2/29/1996#` eftersom 1996 är ett skottår.      > [!NOTE]  >   `DateAdd` använder den aktuella kalender-inställningen från den <xref:System.Globalization.CultureInfo.CurrentCulture%2A>egenskapen för den <xref:System.Globalization.CultureInfo>klassen i den <xref:System.Globalization>namnområde.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Standard <xref:System.Globalization.CultureInfo.CurrentCulture%2A>värdena bestäms av **Kontrollpanelen** inställningar.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Eftersom varje `Date` värdet stöds av en <xref:System.DateTime>struktur, dess metoder ger ytterligare alternativ för att lägga till tidsintervaller.</xref:System.DateTime> Exempelvis kan du lägga till en anger hur många dagar, avrundat till närmaste millisekunder till en `Date` variabeln på följande sätt: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` den `Interval` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Sträng | Enheten för tidsintervallet för att lägga till |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Dag. förkortat till heltalsvärde |   | `DateInterval.DayOfYear`|y| Dag. förkortat till heltalsvärde |   | `DateInterval.Hour`|h| Timme. avrundat till närmaste millisekunder |   | `DateInterval.Minute`|n| Minut; avrundat till närmaste millisekunders |   | `DateInterval.Month`|m| Månad. förkortat till heltalsvärde |   | `DateInterval.Quarter`|q| Kvartal; förkortat till heltalsvärde |   | `DateInterval.Second`|s| Sekund. avrundat till närmaste millisekunder |   | `DateInterval.Weekday`|w| Dag. förkortat till heltalsvärde |   | `DateInterval.WeekOfYear`|ww| Veckan. förkortat till heltalsvärde |   | `DateInterval.Year`|yyyy| År. förkortat till heltalsvärde |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/8ee426fa-d573-45a5-a0f5-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (string Interval, double Number, object DateValue);
    parameters:
    - id: Interval
      type: System.String
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Uppräkningsvärdet eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som representerar det tidsintervall som du vill lägga till."
    - id: Number
      type: System.Double
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Flyttal uttryck som representerar antalet intervall som du vill lägga till. `Number`kan vara positivt (för att hämta datum/tid-värden i framtiden) eller negativt (för att hämta datum/tid-värden i tidigare). Den kan innehålla en bråkdelar tillhör när `Interval` anger timmar, minuter och sekunder. För andra `Interval`, alla bråkdelar tillhör `Number` ignoreras."
    - id: DateValue
      type: System.Object
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Ett uttryck som representerar datumet och tiden som är intervallet som ska läggas till. `DateValue`själva ändras inte i det anropande programmet."
    return:
      type: System.DateTime
      description: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller ett värde för datum och tid som ett angivet tidsintervall har lagts till."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>är inte tvingande i förhållande till <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>är inte giltig."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Beräknat datum som infaller före 00:00:00 på 1 januari år 1 eller senare än 23:59:59 den 31 December 9999."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> värde som anger antalet tidsintervall mellan två <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värden."
  remarks: "Du kan använda den `DateDiff` funktionen för att ta reda på hur många tidsintervall som finns mellan två datum/tid-värden. Du kan till exempel använda `DateDiff` att beräkna antalet dagar mellan två datum eller antalet veckor slutet på året.      ## Beteende - **behandling av parametrar.** `DateDiff`subtraherar värdet för `Date1` från värdet för `Date2` att skapa skillnaden. Varken ändras i det anropande programmet.      - **Returvärden.** Eftersom `Date1` och `Date2` av den `Date` datatyp, de innehåller datum- och tidsvärden korrekt med 100 nanosekunder tick på systemklockan. Dock `DateDiff` returnerar alltid antalet tidsintervall som en `Long` värde.           Om `Date1` representerar ett senare datum och tid än `Date2`, `DateDiff` returnerar ett negativt tal.      - **Dagsintervall.** Om `Interval` är inställd på `DateInterval.DayOfYear`, hanteras den samma som `DateInterval.Day`eftersom `DayOfYear` är inte ett meningsfullt enhet för ett tidsintervall.      - **Veckors intervall.** Om `Interval` är inställd på `DateInterval.WeekOfYear`, det returnera värdet representerar antalet veckor mellan den första dagen i veckan som innehåller `Date1` och den första dagen i veckan som innehåller `Date2`. I följande exempel visas hur detta ger olika resultat från `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_1.vb) ] i föregående exempel `DateDiff` returnerar 0 om du vill `wD` eftersom skillnaden mellan de två datumen är mindre än sju dagar, men den returnerar 1 till `wY` eftersom det är skillnad mellan de första dagarna av respektive kalenderveckor sju dagar.      - **Större intervall.** Om `Interval` är inställd på `DateInterval.Year`, returvärdet beräknas rent från år delar av `Date1` och `Date2`. På liknande sätt returvärdet för `DateInterval.Month` beräknas rent från år och månad delar av argument och för `DateInterval.Quarter` från kvartal som innehåller de två datumen.           Till exempel när 31 December jämförs 1 januari följande år `DateDiff` returnerar 1 för `DateInterval.Year`, `DateInterval.Quarter`, eller `DateInterval.Month`, även om högst bara en dag har förflutit.           För kulturer t.ex japanska som har flera epoker den `DateDiff` metoden returnerar inte skillnader i år om skillnaden sträcker sig över två eller flera epoker. I stället kan du beräkna skillnaden i värden som returneras av den <xref:System.DateTime.Year%2A>egenskap, enligt följande exempel: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Andra intervall.** Eftersom varje `Date` värdet stöds av en <xref:System.DateTime>struktur, dess metoder ger ytterligare alternativ för att hitta tidsintervaller.</xref:System.DateTime> Du kan till exempel använda den `Subtract` metod i någon av dess överbelastad formulär: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>subtraherar ett <xref:System.TimeSpan>från en `Date` variabeln för att returnera en annan `Date` värde, och <xref:System.DateTime.Subtract%2A?displayProperty=fullName>subtraherar en `Date` värde som ska returneras <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> Du kan tid en process för att ta reda på hur många millisekunder det tar, som visas i följande exempel.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_2.vb) ] den `Interval` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Strängvärde | Enhet tidsskillnaden |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| Dag |   | `DateInterval.DayOfYear`|&quot; y &quot;| Dag |   | `DateInterval.Hour`|&quot; h &quot;| Timme |   | `DateInterval.Minute`|&quot; n &quot;| Minut |   | `DateInterval.Month`|&quot; m &quot;| Månad |   | `DateInterval.Quarter`|&quot; q &quot;| Kvartal |   | `DateInterval.Second`|&quot; s &quot;| Andra |   | `DateInterval.Weekday`|&quot; w &quot;| Vecka |   | `DateInterval.WeekOfYear`|&quot; ww &quot;| Kalendervecka |   | `DateInterval.Year`|&quot; åååå &quot;| År |       Den `DayOfWeek` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Första dagen i veckan som anges i systeminställningarna för |   | `FirstDayOfWeek.Sunday`|1| Söndag (standard) |   | `FirstDayOfWeek.Monday`|2| Måndag (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Tisdag |   | `FirstDayOfWeek.Wednesday`|4| Onsdag |   | `FirstDayOfWeek.Thursday`|5| Torsdag |   | `FirstDayOfWeek.Friday`|6| Fredag |   | `FirstDayOfWeek.Saturday`|7| Lördag |       Den `WeekOfYear` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Första veckan på året som anges i systeminställningarna för |   | `FirstWeekOfYear.Jan1`|1| Vecka som den 1 januari (standard) |   | `FirstWeekOfYear.FirstFourDays`|2| Vecka som innehåller minst fyra dagar årets (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Första fullständiga veckan årets |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_3.vb)]"
  syntax:
    content: public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Uppräkningsvärdet eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som representerar det tidsintervall som du vill använda som skillnaden mellan `Date1` och `Date2`."
    - id: Date1
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Det första datum/tid-värdet som du vill använda i beräkningen."
    - id: Date2
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Det andra datum/tid-värdet som du vill använda i beräkningen."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> uppräkning som anger den första dagen i veckan. Om inget anges <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> används."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> uppräkning som anger den första veckan på året. Om inget anges <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> används."
    return:
      type: System.Int64
      description: "Returnerar en <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> värde som anger antalet tidsintervall mellan två <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värden."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, eller <code>DayofWeek</code> ligger utanför intervallet."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>eller <code>Date2</code> är ogiltig."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> värde som anger antalet tidsintervall mellan två <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värden."
  remarks: "Du kan använda den `DateDiff` funktionen för att ta reda på hur många tidsintervall som finns mellan två datum/tid-värden. Du kan till exempel använda `DateDiff` att beräkna antalet dagar mellan två datum eller antalet veckor slutet på året.      ## Beteende - **behandling av parametrar.** `DateDiff`subtraherar värdet för `Date1` från värdet för `Date2` att skapa skillnaden. Varken ändras i det anropande programmet.      - **Returvärden.** Eftersom `Date1` och `Date2` av den `Date` datatyp, de innehåller datum- och tidsvärden korrekt med 100 nanosekunder tick på systemklockan. Dock `DateDiff` returnerar alltid antalet tidsintervall som en `Long` värde.           Om `Date1` representerar ett senare datum och tid än `Date2`, `DateDiff` returnerar ett negativt tal.      - **Dagsintervall.** Om `Interval` är inställd på `DateInterval.DayOfYear`, hanteras den samma som `DateInterval.Day`eftersom `DayOfYear` är inte ett meningsfullt enhet för ett tidsintervall.      - **Veckors intervall.** Om `Interval` är inställd på `DateInterval.WeekOfYear`, det returnera värdet representerar antalet veckor mellan den första dagen i veckan som innehåller `Date1` och den första dagen i veckan som innehåller `Date2`. I följande exempel visas hur detta ger olika resultat från `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_1.vb) ] i föregående exempel `DateDiff` returnerar 0 om du vill `wD` eftersom skillnaden mellan de två datumen är mindre än sju dagar, men den returnerar 1 till `wY` eftersom det är skillnad mellan de första dagarna av respektive kalenderveckor sju dagar.      - **Större intervall.** Om `Interval` är inställd på `DateInterval.Year`, returvärdet beräknas rent från år delar av `Date1` och `Date2`. På liknande sätt returvärdet för `DateInterval.Month` beräknas rent från år och månad delar av argument och för `DateInterval.Quarter` från kvartal som innehåller de två datumen.           Till exempel när 31 December jämförs 1 januari följande år `DateDiff` returnerar 1 för `DateInterval.Year`, `DateInterval.Quarter`, eller `DateInterval.Month`, även om högst bara en dag har förflutit.           För kulturer t.ex japanska som har flera epoker den `DateDiff` metoden returnerar inte skillnader i år om skillnaden sträcker sig över två eller flera epoker. I stället kan du beräkna skillnaden i värden som returneras av den <xref:System.DateTime.Year%2A>egenskap, enligt följande exempel: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Andra intervall.** Eftersom varje `Date` värdet stöds av en <xref:System.DateTime>struktur, dess metoder ger ytterligare alternativ för att hitta tidsintervaller.</xref:System.DateTime> Du kan till exempel använda den `Subtract` metod i någon av dess överbelastad formulär: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>subtraherar ett <xref:System.TimeSpan>från en `Date` variabeln för att returnera en annan `Date` värde, och <xref:System.DateTime.Subtract%2A?displayProperty=fullName>subtraherar en `Date` värde som ska returneras <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> Du kan tid en process för att ta reda på hur många millisekunder det tar, som visas i följande exempel.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_2.vb) ] den `Interval` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Strängvärde | Enhet tidsskillnaden |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| Dag |   | `DateInterval.DayOfYear`|&quot; y &quot;| Dag |   | `DateInterval.Hour`|&quot; h &quot;| Timme |   | `DateInterval.Minute`|&quot; n &quot;| Minut |   | `DateInterval.Month`|&quot; m &quot;| Månad |   | `DateInterval.Quarter`|&quot; q &quot;| Kvartal |   | `DateInterval.Second`|&quot; s &quot;| Andra |   | `DateInterval.Weekday`|&quot; w &quot;| Vecka |   | `DateInterval.WeekOfYear`|&quot; ww &quot;| Kalendervecka |   | `DateInterval.Year`|&quot; åååå &quot;| År |       Den `DayOfWeek` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Första dagen i veckan som anges i systeminställningarna för |   | `FirstDayOfWeek.Sunday`|1| Söndag (standard) |   | `FirstDayOfWeek.Monday`|2| Måndag (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Tisdag |   | `FirstDayOfWeek.Wednesday`|4| Onsdag |   | `FirstDayOfWeek.Thursday`|5| Torsdag |   | `FirstDayOfWeek.Friday`|6| Fredag |   | `FirstDayOfWeek.Saturday`|7| Lördag |       Den `WeekOfYear` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Första veckan på året som anges i systeminställningarna för |   | `FirstWeekOfYear.Jan1`|1| Vecka som den 1 januari (standard) |   | `FirstWeekOfYear.FirstFourDays`|2| Vecka som innehåller minst fyra dagar årets (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Första fullständiga veckan årets |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_3.vb)]"
  syntax:
    content: public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Uppräkningsvärdet eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som representerar det tidsintervall som du vill använda som skillnaden mellan `Date1` och `Date2`."
    - id: Date1
      type: System.Object
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Det första datum/tid-värdet som du vill använda i beräkningen."
    - id: Date2
      type: System.Object
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Det andra datum/tid-värdet som du vill använda i beräkningen."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> uppräkning som anger den första dagen i veckan. Om inget anges <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> används."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> uppräkning som anger den första veckan på året. Om inget anges <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> används."
    return:
      type: System.Int64
      description: "Returnerar en <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> värde som anger antalet tidsintervall mellan två <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värden."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, eller <code>DayofWeek</code> ligger utanför intervallet."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>eller <code>Date2</code> är ogiltig."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde som innehåller den angivna komponenten i en viss <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde."
  remarks: "Du kan använda den `DatePart` funktionen för att utvärdera ett datum/tid-värde och returnera en viss komponent. Du kan till exempel använda `DatePart` att beräkna dagen i veckan eller den aktuella timman.       Om du väljer `DateInterval.Weekday` för den `Interval` argument, det returnerade värdet är konsekventa med värden för den `FirstDayOfWeek` uppräkningen. Om du väljer `DateInterval.WeekOfYear`, `DatePart` använder den <xref:System.Globalization.Calendar>och <xref:System.Globalization.CultureInfo>klasser av den <xref:System.Globalization>namnområdet till dina aktuella inställningar.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       Den `FirstDayOfWeekValue` argumentet påverkar beräkningar som använder den `DateInterval.Weekday` och `DateInterval.WeekOfYear` `Interval` inställningar. Den `FirstWeekOfYearValue` argumentet påverkar beräkningar som anger `DateInterval.WeekOfYear` för `Interval`.       Eftersom varje `Date` värdet stöds av en <xref:System.DateTime>struktur, dess metoder ger ytterligare alternativ vid hämtning av datum/tid delar.</xref:System.DateTime> Du kan till exempel hämta hela date-värde för en `Date` variabel med tidsvärdet angiven till midnatt, enligt följande: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` den `Interval` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Sträng | En del av datum/tid-värde som ska returneras |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| Dagen i månaden (1 till 31) |   | `DateInterval.DayOfYear`|y| Dagen på året (1 till 366) |   | `DateInterval.Hour`|h| Timme |   | `DateInterval.Minute`|n| Minut |   | `DateInterval.Month`|m| Månad |   | `DateInterval.Quarter`|q| Kvartal |   | `DateInterval.Second`|s| Andra |   | `DateInterval.Weekday`|w| Dag i veckan (1 till 7) |   | `DateInterval.WeekOfYear`|ww| Veckan på året (1 till 53) |   | `DateInterval.Year`|yyyy| År |       Den `FirstDayOfWeekValue` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Första dagen i veckan som anges i systeminställningarna för |   | `FirstDayOfWeek.Sunday`|1| Söndag (standard) |   | `FirstDayOfWeek.Monday`|2| Måndag (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Tisdag |   | `FirstDayOfWeek.Wednesday`|4| Onsdag |   | `FirstDayOfWeek.Thursday`|5| Torsdag |   | `FirstDayOfWeek.Friday`|6| Fredag |   | `FirstDayOfWeek.Saturday`|7| Lördag |       Den `FirstWeekOfYearValue` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Första veckan på året som anges i systeminställningarna för |   | `FirstWeekOfYear.Jan1`|1| Vecka som den 1 januari (standard) |   | `FirstWeekOfYear.FirstFourDays`|2| Vecka som innehåller minst fyra dagar årets (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Första fullständiga veckan i nyårsafton |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/982d49dd-7819-40e1-9b19-_1.vb)]"
  syntax:
    content: public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Uppräkningsvärdet eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som representerar del av datum/tid-värde som du vill återställa."
    - id: DateValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värde som du vill utvärdera."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> uppräkning som anger den första dagen i veckan. Om inget anges <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> används."
    - id: FirstWeekOfYearValue
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> uppräkning som anger den första veckan på året. Om inget anges <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> används."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde som innehåller den angivna komponenten i en viss <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>är inte giltig."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>är inte tvingande i förhållande till <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde som innehåller den angivna komponenten i en viss <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde."
  remarks: "Du kan använda den `DatePart` funktionen för att utvärdera ett datum/tid-värde och returnera en viss komponent. Du kan till exempel använda `DatePart` att beräkna dagen i veckan eller den aktuella timman.       Om du väljer `DateInterval.Weekday` för den `Interval` argument, det returnerade värdet är konsekventa med värden för den `FirstDayOfWeek` uppräkningen. Om du väljer `DateInterval.WeekOfYear`, `DatePart` använder den <xref:System.Globalization.Calendar>och <xref:System.Globalization.CultureInfo>klasser av den <xref:System.Globalization>namnområdet till dina aktuella inställningar.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       Den `FirstDayOfWeekValue` argumentet påverkar beräkningar som använder den `DateInterval.Weekday` och `DateInterval.WeekOfYear` `Interval` inställningar. Den `FirstWeekOfYearValue` argumentet påverkar beräkningar som anger `DateInterval.WeekOfYear` för `Interval`.       Eftersom varje `Date` värdet stöds av en <xref:System.DateTime>struktur, dess metoder ger ytterligare alternativ vid hämtning av datum/tid delar.</xref:System.DateTime> Du kan till exempel hämta hela date-värde för en `Date` variabel med tidsvärdet angiven till midnatt, enligt följande: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` den `Interval` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Sträng | En del av datum/tid-värde som ska returneras |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| Dagen i månaden (1 till 31) |   | `DateInterval.DayOfYear`|y| Dagen på året (1 till 366) |   | `DateInterval.Hour`|h| Timme |   | `DateInterval.Minute`|n| Minut |   | `DateInterval.Month`|m| Månad |   | `DateInterval.Quarter`|q| Kvartal |   | `DateInterval.Second`|s| Andra |   | `DateInterval.Weekday`|w| Dag i veckan (1 till 7) |   | `DateInterval.WeekOfYear`|ww| Veckan på året (1 till 53) |   | `DateInterval.Year`|yyyy| År |       Den `FirstDayOfWeekValue` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Första dagen i veckan som anges i systeminställningarna för |   | `FirstDayOfWeek.Sunday`|1| Söndag (standard) |   | `FirstDayOfWeek.Monday`|2| Måndag (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Tisdag |   | `FirstDayOfWeek.Wednesday`|4| Onsdag |   | `FirstDayOfWeek.Thursday`|5| Torsdag |   | `FirstDayOfWeek.Friday`|6| Fredag |   | `FirstDayOfWeek.Saturday`|7| Lördag |       Den `FirstWeekOfYearValue` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Första veckan på året som anges i systeminställningarna för |   | `FirstWeekOfYear.Jan1`|1| Vecka som den 1 januari (standard) |   | `FirstWeekOfYear.FirstFourDays`|2| Vecka som innehåller minst fyra dagar årets (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Första fullständiga veckan i nyårsafton |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/682455c0-1619-4c4c-8238-_1.vb)]"
  syntax:
    content: public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>Uppräkningsvärdet eller <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som representerar del av datum/tid-värde som du vill återställa."
    - id: DateValue
      type: System.Object
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värde som du vill utvärdera."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> uppräkning som anger den första dagen i veckan. Om inget anges <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> används."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> uppräkning som anger den första veckan på året. Om inget anges <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> används."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde som innehåller den angivna komponenten i en viss <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>är ogiltigt."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>är inte tvingande i förhållande till <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  id: DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> -värde som representerar ett år, månad och dag med tidsinformationen angiven till midnatt (00:&00;:00)."
  remarks: "Under Windows 98 eller Windows 2000 tvåsiffrig för den `Year` argumentet tolkas baserat på egna inställningar. Standardinställningarna är att värden mellan 0 och 29 tolkas som år 2000 – 2029 och värden mellan 30 och 99 tolkas som åren 1930 – 1999. För alla andra `Year` argument, Använd en fyrsiffriga år, till exempel 1924.       Tidigare versioner av Windows tolka tvåsiffrig baserat på standardinställningarna som beskrivs ovan. Så att rätt värde returnerar funktionen använder ett fyrsiffrigt `Year`.       Exemplet nedan visar negativt, noll och positiva argumentvärden. Här är den `DateSerial` fungerar returnerar en `Date` som representerar dagen före den första dagen i mars år 10 år innan det aktuella året, med andra ord den sista dagen i februari tio år sedan.      ```vb#   Dim EndFeb As Date = DateSerial(-10, 3, 0)   ```Om antingen `Month` eller `Day` överskrider dess normala intervallet, tillämpas den nästa större enhet efter behov. Till exempel om du anger 32 dagar, utvärderas som en månad och från ett till fyra dagar, beroende på värdet för `Month`. Om `Year` är större än 9999, eller om något argument är utanför intervallet-2,147,483,648 via 2 147 483 647, ett <xref:System.ArgumentException>fel uppstår.</xref:System.ArgumentException> Om datumet som anges av de tre argumenten är tidigare än 00:00:00 på 1 januari år 1 eller senare än 23:59:59 den 31 December 9999, ett <xref:System.ArgumentOutOfRangeException>fel uppstår.</xref:System.ArgumentOutOfRangeException>       Den `Date` datatyp innehåller tid komponenter. `DateSerial`Anger alla dessa 0, så det returnerade värdet representerar i början av den beräknade dagen.       Eftersom varje `Date` värdet stöds av en <xref:System.DateTime>struktur, dess metoder ger ytterligare alternativ sammanställer en `Date` värde.</xref:System.DateTime> Du kan till exempel använda en av de överlagrade <xref:System.DateTime.%23ctor%2A>konstruktorer att fylla i en `Date` variabel med önskad kombination av komponenter.</xref:System.DateTime.%23ctor%2A> Följande exempel anger `NewDateTime` till 6 maj 1978 en tiondels sekund innan 8:30 på morgonen:```vb#   Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "This example uses the `DateSerial` function to return the date for the specified year, month, and day.  \n  \n [!code-vb[VbVbalrFunctions#28](~/add/codesnippet/visualbasic/2c6c2f83-8b90-492d-bf33-_1.vb)]"
  syntax:
    content: public static DateTime DateSerial (int Year, int Month, int Day);
    parameters:
    - id: Year
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttryck mellan 1 och 9999. Dock accepteras värden under det här intervallet. Om `Year` är 0 till 99, tolkas det som mellan 1930 och 2029, enligt beskrivningen i avsnittet &quot;Anmärkningar&quot; nedan. Om `Year` är mindre än 1 subtraheras från det aktuella året."
    - id: Month
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttryck från 1 till 12. Dock accepteras värden utanför intervallet. Värdet för `Month` är förskjutning med 1 och tillämpas på januari beräknade år. Med andra ord (`Month` - 1) har lagts till i januari. Året beräknas om det behövs. Följande resultat illustrera detta: om `Month` är 1, resultatet är januari beräknade år.       Om `Month` är 0, resultatet är December föregående år.       Om `Month` är-1, resultatet är November föregående år.       Om `Month` är 13 är resultatet januari följande år."
    - id: Day
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttryck från 1 till 31. Dock accepteras värden utanför intervallet. Värdet för `Day` är förskjutning med 1 och tillämpas på den första dagen i månaden beräknade. Med andra ord (`Day` - 1) har lagts till i först i månaden. Månad och år räknas om det behövs. Följande resultat illustrera detta: om `Day` är 1, resultatet är beräknade månadens första dag.       Om `Day` är 0, resultatet är den sista dagen i månaden.       Om `Day` är-1, resultatet är den näst sista dagen i månaden.       Om `Day` har förfallit slutet av den aktuella månaden, resultatet lämplig dag i följande månad. Till exempel om `Month` är 4 och `Day` 31, resultatet är 1."
    return:
      type: System.DateTime
      description: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> -värde som representerar ett år, månad och dag med tidsinformationen angiven till midnatt (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateSerial*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  id: DateString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> värdet som motsvarar det aktuella datumet enligt ditt system."
  remarks: "`DateString`Returnerar systemdatumet i formatet MM-dd-åååå som använder förkortade månadsnamnet. Godkända format för datum är M-d-åååå M-d-y, M/d/åååå och y/m. Detta gäller för alla systemspråk utom de som använder en DBCS-teckenuppsättning (DBCS). Om systemspråket använder en DBCS-teckenuppsättning `DateString` returnerar systemdatum i formatet ÅÅÅÅ-MM-dd. Systemspråket anges med hjälp av den **klocka, språk och nationella** objektet i **Kontrollpanelen**.       **Obs** den `DateString` -egenskap returnerar systemdatumet endast i formatet ÅÅÅÅ-MM-dd för den `zh` (Kinesisk (förenklad), `ko` (koreanska) och `ja` (japansk) systemspråk om du kör Visual Basic i Silverlight.       Att hämta eller ange den aktuella systemtiden som en `String`, använda den <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Om du vill hämta systemets aktuella datum och tid i formatet på ditt språk eller i ett anpassat format, ange den <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>egenskapen till den <xref:Microsoft.VisualBasic.Strings.Format%2A>funktion, ange antingen ett fördefinierade eller anpassade datum/tid-format.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> Exemplet nedan visar detta.      ```   MsgBox(&quot;The formatted date is &quot; & Format(Now, &quot;dddd, d MMM yyyy&quot;))   ```Åtkomst till aktuellt systemdatum som en `Date`, använda den <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > Anger systemets datum och tid krävs ohanterad Kodbehörighet, vilket kan påverka körningen i partiellt förtroende situationer. Mer information finns i <xref:System.Security.Permissions.SecurityPermission>och [kod åtkomstbehörigheter](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example uses the `DateString` property to display the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#1](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#1)]"
  syntax:
    content: public static string DateString { get; set; }
    return:
      type: System.String
      description: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> värdet som motsvarar det aktuella datumet enligt ditt system."
  overload: Microsoft.VisualBasic.DateAndTime.DateString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Ogiltigt format som används för att ange värdet för <xref uid=&quot;langword_csharp_DateString&quot; name=&quot;DateString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  id: DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller den datuminformation som representeras av en sträng, med tidsinformationen angiven till midnatt (00:&00;:00)."
  remarks: "Om `StringDate` innehåller endast tal från 1 till 12 avgränsade med giltiga avgränsare `DateValue` identifierar ordningen för månaden, dagen och året enligt det korta datumformat som angetts för systemet. `DateValue`använder den aktuella kalender-inställningen från den <xref:System.Globalization.CultureInfo.CurrentCulture%2A>egenskapen för den <xref:System.Globalization.CultureInfo>klassen i den <xref:System.Globalization>namnområde.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Standard <xref:System.Globalization.CultureInfo.CurrentCulture%2A>värdena bestäms av **Kontrollpanelen** inställningar.</xref:System.Globalization.CultureInfo.CurrentCulture%2A> Du kan åsidosätta det korta datumformatet genom att ange den <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>egenskapen för den <xref:System.Globalization.DateTimeFormatInfo>klassen i den <xref:System.Globalization>namnområde.</xref:System.Globalization> </xref:System.Globalization.DateTimeFormatInfo> </xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>       `DateValue`identifierar månadsnamn i långt, förkortat och numeriska form. Förutom att till exempel identifiera 30/12/1991-12/30/91 `DateValue` 30 December 1991 och 30 Dec 1991 identifieras också.       Om argumentet `StringDate` utelämnas `DateValue` används det aktuella året från datorns datum.       Om den `StringDate` argumentet innehåller tidsinformation om, `DateValue` ingår inte i det returnerade värdet. Men om `StringDate` innehåller ogiltig tidsinformation, till exempel &quot;89:&98;&quot; en <xref:System.InvalidCastException>fel uppstår.</xref:System.InvalidCastException>"
  example:
  - "This example uses the `DateValue` function to convert a string to a date. You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.  \n  \n [!code-vb[VbVbalrFunctions#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._84_1.vb)]"
  syntax:
    content: public static DateTime DateValue (string StringDate);
    parameters:
    - id: StringDate
      type: System.String
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttryck som representerar ett datum/tid-värde från 00:00:00 den 1 januari år 1 via 23:59:59 den 31 December 9999."
    return:
      type: System.DateTime
      description: "<xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värde som innehåller den datuminformation som representeras av en sträng, med tidsinformationen angiven till midnatt (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringDate</code>innehåller ett ogiltigt klockslag."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  id: Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde från 1 till 31 som representerar dagen i månaden."
  remarks: "Om du använder den `Day` funktion så kan du behöva kvalificera den med den `Microsoft.VisualBasic` namnområde, eftersom den <xref:System.Windows.Forms>namnområde definierar <xref:System.Windows.Forms.Day>som en uppräkning.</xref:System.Windows.Forms.Day> </xref:System.Windows.Forms> Följande exempel visar hur kvalificerande `Day` löser den här tvetydigheten: ```vb#   Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)   ``` du kan också hämta dagen i månaden genom att anropa `DatePart` och ange `DateInterval.Day` för den *intervall* argumentet."
  example:
  - "The following example uses the `Day` function to obtain the day of the month from a specified date. In the development environment, the date literal is displayed in standard short format (such as \"02/12/1969\") using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#30](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._126_1.vb)]  \n  \n `Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=fullName> enumeration."
  syntax:
    content: public static int Day (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värdet som du vill extrahera dagen."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde från 1 till 31 som representerar dagen i månaden."
  overload: Microsoft.VisualBasic.DateAndTime.Day*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  id: Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 0 och 23 som representerar timmen på dagen."
  remarks: "Du kan också hämta timme på dagen genom att anropa `DatePart` och ange `DateInterval.Hour` för den `Interval` argumentet."
  example:
  - "This example uses the `Hour` function to obtain the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#32](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._192_1.vb)]"
  syntax:
    content: public static int Hour (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värdet som du vill extrahera en timme."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 0 och 23 som representerar timmen på dagen."
  overload: Microsoft.VisualBasic.DateAndTime.Hour*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  id: Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 0 och 59 som representerar minuten i timmen."
  remarks: "Du kan också hämta minuten i timmen genom att anropa `DatePart` och ange `DateInterval.Minute` för den `Interval` argumentet."
  example:
  - "This example uses the `Minute` function to obtain the minute of the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#42](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._195_1.vb)]"
  syntax:
    content: public static int Minute (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värdet som du vill extrahera minuten."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 0 och 59 som representerar minuten i timmen."
  overload: Microsoft.VisualBasic.DateAndTime.Minute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  id: Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 1 och 12 som representerar årets månad."
  remarks: "Du kan också hämta årets månad genom att anropa `DatePart` och ange `DateInterval.Month` för den `Interval` argumentet."
  example:
  - "This example uses the `Month` function to obtain the month from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#43](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._213_1.vb)]"
  syntax:
    content: public static int Month (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värdet som du vill extrahera månaden."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 1 och 12 som representerar årets månad."
  overload: Microsoft.VisualBasic.DateAndTime.Month*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  id: MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> värde som innehåller namnet på den angivna månaden."
  remarks: "Strängen som returnerades av `MonthName` beror inte bara på inkommande argument, utan även på den **nationella inställningar** inställningar som anges i Windows **Kontrollpanelen**.      > [!NOTE]  >   `MonthName` använder den aktuella kalender-inställningen från den <xref:System.Globalization.CultureInfo.CurrentCulture%2A>egenskapen för den <xref:System.Globalization.CultureInfo>klassen i den <xref:System.Globalization>namnområde.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Standard <xref:System.Globalization.CultureInfo.CurrentCulture%2A>värdena bestäms av **Kontrollpanelen** inställningar.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>"
  example:
  - "This example uses the `MonthName` function to determine the name of the month, by the integer given. The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.  \n  \n [!code-vb[VbVbalrFunctions#44](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._194_1.vb)]"
  syntax:
    content: public static string MonthName (int Month, bool Abbreviate = false);
    parameters:
    - id: Month
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Numerisk representation av månaden, från 1 till 13. Anger 1 januari och 12 visar December. Du kan använda värdet 13 med en 13 månadskalender. Om datorn använder en 12 månaders kalender och `Month` är 13, <xref uid=&quot;langword_csharp_MonthName&quot; name=&quot;MonthName&quot; href=&quot;&quot;> </xref> returneras en tom sträng."
    - id: Abbreviate
      type: System.Boolean
      description: "Valfritt. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>värde som anger om månadens namn ska förkortas. Om det utelämnas används standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, vilket innebär att månadsnamnet inte förkortas."
    return:
      type: System.String
      description: "Returnerar en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> värde som innehåller namnet på den angivna månaden."
  overload: Microsoft.VisualBasic.DateAndTime.MonthName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Month</code>är mindre än 1 eller större än 13."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Now
  id: Now
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller aktuellt datum och tid."
  remarks: "Om du vill ställa in systemdatumet använder den <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A> Om du vill ställa in systemtiden använder den <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>"
  example:
  - "The following example uses the `Now` property to return the current system date and time.  \n  \n [!code-vb[VbVbalrDateProperties#4](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#4)]"
  syntax:
    content: public static DateTime Now { get; }
    return:
      type: System.DateTime
      description: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller aktuellt datum och tid."
  overload: Microsoft.VisualBasic.DateAndTime.Now*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  id: Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 0 och 59 som representerar sekunden i minuten."
  remarks: "Du kan också hämta sekunden i minuten genom att anropa `DatePart` och ange `DateInterval.Second` för den `Interval` argumentet."
  example:
  - "The following example uses the `Second` function to obtain the second of the minute from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#46](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public static int Second (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värdet som du vill extrahera andra."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 0 och 59 som representerar sekunden i minuten."
  overload: Microsoft.VisualBasic.DateAndTime.Second*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  id: TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller datorns aktuella tid på dagen."
  remarks: "Den `Date` datatyp innehåller datum-komponenter. När du returnerar systemklockan, `TimeOfDay` anger dessa alla 1, så det returnerade värdet representerar den första dagen på året 1. När du ställer in systemtiden, `TimeOfDay` ignorerar komponenterna i datumet.       Åtkomst till den aktuella systemtiden som en `String`, använda den <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Om du vill hämta eller ange aktuellt systemdatum, använda den <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > Anger systemets datum och tid krävs ohanterad Kodbehörighet, vilket kan påverka körningen i partiellt förtroende situationer. Mer information finns i <xref:System.Security.Permissions.SecurityPermission>och [kod åtkomstbehörigheter](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeOfDay` property to return the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#3](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#3)]"
  syntax:
    content: public static DateTime TimeOfDay { get; set; }
    return:
      type: System.DateTime
      description: "Returnerar eller anger en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller datorns aktuella tid på dagen."
  overload: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  id: Timer
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> -värde som representerar antalet sekunder som har förflutit sedan midnatt."
  remarks: "Den `Timer` -egenskap returnerar både sekunder och millisekunder sedan den senaste midnatt. Sekunder finns i del av det returnera värdet och millisekunder finns i decimaldelen."
  example:
  - "This example uses the `Timer` property to pause the application. It can perform other processing during the pause.  \n  \n [!code-vb[VbVbalrTimerProperty#1](~/add/codesnippet/visualbasic/VbVbalrTimerProperty/Form1.vb#1)]  \n  \n Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=fullName> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=fullName>, <xref:System.Timers?displayProperty=fullName>, and <xref:System.Windows.Forms?displayProperty=fullName> namespaces."
  syntax:
    content: public static double Timer { get; }
    return:
      type: System.Double
      description: "Returnerar en <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> -värde som representerar antalet sekunder som har förflutit sedan midnatt."
  overload: Microsoft.VisualBasic.DateAndTime.Timer*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  id: TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värdet som motsvarar en angiven timme, minut och sekund, med datuminformationen angiven i förhållande till 1 januari år 1."
  remarks: "Exemplet nedan visar negativt, noll och positiva argumentvärden. Den `TimeSerial` funktionen returnerar en tid som representerar 15 minuter innan tre timmar innan på dagen eller 8:45:00: 00.      ```vb#   Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)   ```Om antingen `Minute` eller `Second` överskrider dess normala intervallet, tillämpas den nästa större enhet efter behov. Till exempel om du anger 75 minuter utvärderas som en timme och 15 minuter.       `TimeSerial`minskar modulo 86,400, totalt antal sekunder som är antalet sekunder under en dag. Därför är den returnerade tid alltid mellan 00:00:00 och 23:59:59.       Den `Date` datatyp innehåller datum-komponenter. `TimeSerial`Anger alla dessa till 1, så det returnerade värdet representerar den första dagen på året 1. Men om du värdena för argumenten gör den beräknade tiden till mer än 24 timmar, ökas dagen efter behov. I följande exempel värdena för `Hour` och `Minute` resultera i en kombinerad tid på mer än 24 timmar.      ```vb#   MsgBox(TimeSerial(23, 75, 0))    &quot; The preceding statement displays &quot;1/2/0001 12:15:00 AM&quot;.   ```Om värden argument resulterar i en negativ beräknad tid, datuminformation har angetts till 1/1/0001 och tidsinformationen justeras mellan 00:00:00 och 23:59:59. Men om den beräknade tiden är mindre än negativt 24 timmar en <xref:System.ArgumentOutOfRangeException>fel uppstår.</xref:System.ArgumentOutOfRangeException>       Eftersom varje `Date` värdet stöds av en <xref:System.DateTime?displayProperty=fullName>struktur, dess metoder ger ytterligare alternativ sammanställer en `Date` värde.</xref:System.DateTime?displayProperty=fullName> Exempelvis kan du använda en av de överlagrade <xref:System.DateTime.%23ctor%2A>konstruktorer att fylla i en `Date` variabel med önskad kombination av komponenter.</xref:System.DateTime.%23ctor%2A> Följande exempel anger `newDateTime` till 6 maj 1978 en tiondels sekund innan 8:30 på morgonen:```vb#   Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.  \n  \n [!code-vb[VbVbalrFunctions#50](~/add/codesnippet/visualbasic/4788d161-48a1-4476-aa26-_1.vb)]"
  syntax:
    content: public static DateTime TimeSerial (int Hour, int Minute, int Second);
    parameters:
    - id: Hour
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttryck mellan 0 och 23. Dock accepteras värden utanför intervallet."
    - id: Minute
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttryck mellan 0 och 59. Dock accepteras värden utanför intervallet. Värdet för `Minute` läggs till den beräknade timmen, så ett negativt värde anger minuter innan den timmen."
    - id: Second
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>uttryck mellan 0 och 59. Dock accepteras värden utanför intervallet. Värdet för `Second` läggs till den beräknade minuten, så ett negativt värde anger sekunder innan den minuten."
    return:
      type: System.DateTime
      description: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värdet som motsvarar en angiven timme, minut och sekund, med datuminformationen angiven i förhållande till 1 januari år 1."
  overload: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ett argument som ligger utanför intervallet-2,147,483,648 via 2 147 483 647"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Beräknad tid är mindre än negativt 24 timmar."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  id: TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> -värde som representerar datorns aktuella tid på dagen."
  remarks: "`TimeString`returnerar alltid systemtiden som &quot;: mm: ss&quot;, vilket är en 24-timmarsformat. Det här formatet är kultur-invariant, vilket innebär att den inte ändras även om du ändrar den **nationella inställningar** i **Kontrollpanelen**.       Att hämta eller ange aktuellt systemdatum som en `String`, använda den <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Om du vill hämta systemets aktuella datum och tid i formatet på ditt språk eller i ett anpassat format, ange den <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>egenskapen till den <xref:Microsoft.VisualBasic.Strings.Format%2A>funktion, ange antingen ett fördefinierade eller anpassade datum/tid-format.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> Exemplet nedan visar detta.      ```   MsgBox(&quot;The formatted time is &quot; & Format(Now, &quot;hh.mm.ss.fff tt&quot;))   ```Åtkomst till den aktuella systemtiden som en `Date`, använda den <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > Anger systemets datum och tid krävs ohanterad Kodbehörighet, vilket kan påverka körningen i partiellt förtroende situationer. Mer information finns i <xref:System.Security.Permissions.SecurityPermission>och [kod åtkomstbehörigheter](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeString` property to display the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#2](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#2)]"
  syntax:
    content: public static string TimeString { get; set; }
    return:
      type: System.String
      description: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> -värde som representerar datorns aktuella tid på dagen."
  overload: Microsoft.VisualBasic.DateAndTime.TimeString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Ogiltigt format som används för att ange värdet för <xref uid=&quot;langword_csharp_TimeString&quot; name=&quot;TimeString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  id: TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller den tidsinformation som representeras av en sträng, med datuminformationen angiven till 1 januari år 1."
  remarks: "Du kan ange argumentet med hjälp av en klockan 12- eller 24 timmar. Till exempel `&quot;2:24 P.M.&quot;` och `&quot;14:24&quot;` gäller både `StringTime` argument.       Om den `StringTime` argumentet innehåller datuminformation om, `TimeValue` ingår inte i det returnerade värdet. Men om `StringTime` innehåller ogiltigt datuminformation, till exempel &quot;januari 32,&quot; en <xref:System.InvalidCastException>fel uppstår.</xref:System.InvalidCastException>"
  example:
  - "The following example uses the `TimeValue` function to convert a string to a time. You can also use date literals to directly assign a time to a `Date` variable.  \n  \n [!code-vb[VbVbalrFunctions#51](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._232_1.vb)]"
  syntax:
    content: public static DateTime TimeValue (string StringTime);
    parameters:
    - id: StringTime
      type: System.String
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttryck som representerar ett datum/tid-värde från 00:00:00 den 1 januari år 1 via 23:59:59 den 31 December 9999."
    return:
      type: System.DateTime
      description: "Returnerar en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller den tidsinformation som representeras av en sträng, med datuminformationen angiven till 1 januari år 1."
  overload: Microsoft.VisualBasic.DateAndTime.TimeValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringTime</code>innehåller information om ogiltigt datum."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Today
  id: Today
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller datorns aktuella datum systemet."
  remarks: "Den `Date` datatyp innehåller tid komponenter. När du returnerar systemdatumet `Today` anger alla dessa 0, så det returnerade värdet representerar midnatt (00: 00:00). När du ställer in systemdatumet `Today` ignorerar tid-komponenter.       Åtkomst till aktuellt systemdatum som en `String`, använda den <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Om du vill hämta eller ange den aktuella systemtiden, använda den <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>egenskapen.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > Anger systemets datum och tid krävs ohanterad Kodbehörighet, vilket kan påverka körningen i partiellt förtroende situationer. Mer information finns i <xref:System.Security.Permissions.SecurityPermission>och [kod åtkomstbehörigheter](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#5](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#5)]"
  syntax:
    content: public static DateTime Today { get; set; }
    return:
      type: System.DateTime
      description: "Returnerar eller anger en <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> värde som innehåller datorns aktuella datum systemet."
  overload: Microsoft.VisualBasic.DateAndTime.Today*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  id: Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde som innehåller ett tal som representerar dag i veckan."
  remarks: "Värdet som returneras av den `Weekday` funktion motsvarar värdena i den `FirstDayOfWeek` uppräkningen; som är 1 anger söndag och 7 anger lördag.      > [!NOTE]  >   `Weekday` använder den aktuella kalender-inställningen från den <xref:System.Globalization.CultureInfo.CurrentCulture%2A>egenskapen för den <xref:System.Globalization.CultureInfo>klassen i den <xref:System.Globalization>namnområde.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Standard <xref:System.Globalization.CultureInfo.CurrentCulture%2A>värdena bestäms av **Kontrollpanelen** inställningar.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Den `DayOfWeek` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Första dagen i veckan som anges i systeminställningarna för |   | `FirstDayOfWeek.Sunday`|1| Söndag (standard) |   | `FirstDayOfWeek.Monday`|2| Måndag (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Tisdag |   | `FirstDayOfWeek.Wednesday`|4| Onsdag |   | `FirstDayOfWeek.Thursday`|5| Torsdag |   | `FirstDayOfWeek.Friday`|6| Fredag |   | `FirstDayOfWeek.Saturday`|7| Lördag |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date.  \n  \n [!code-vb[VbVbalrFunctions#57](~/add/codesnippet/visualbasic/369e7ed8-1790-4eb8-9e17-_1.vb)]"
  syntax:
    content: public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värdet som du vill fastställa dag i veckan."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> uppräkning som anger den första dagen i veckan. Om inget anges <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> används."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde som innehåller ett tal som representerar dag i veckan."
  overload: Microsoft.VisualBasic.DateAndTime.Weekday*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>DayOfWeek</code>är mindre än 0 eller fler än 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  id: WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> värde som innehåller namnet på den angivna veckodagen."
  remarks: "Strängen som returnerades av `WeekdayName` beror inte bara på inkommande argument, utan även på den **nationella inställningar** inställningar som anges i Windows **Kontrollpanelen**.      > [!NOTE]  >   `WeekdayName` använder den aktuella kalender-inställningen från den <xref:System.Globalization.CultureInfo.CurrentCulture%2A>egenskapen för den <xref:System.Globalization.CultureInfo>klassen i den <xref:System.Globalization>namnområde.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Standard <xref:System.Globalization.CultureInfo.CurrentCulture%2A>värdena bestäms av **Kontrollpanelen** inställningar.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Den `FirstDayOfWeekValue` argument kan ha en av följande inställningar.      | Uppräkningsvärdet | Värdet | Beskrivning |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Första dagen i veckan som angetts i systemets inställningar (standard) |   | `FirstDayOfWeek.Sunday`|1| Söndag |   | `FirstDayOfWeek.Monday`|2| Måndag (uppfyller ISO 8601 i standard, avsnittet 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Tisdag |   | `FirstDayOfWeek.Wednesday`|4| Onsdag |   | `FirstDayOfWeek.Thursday`|5| Torsdag |   | `FirstDayOfWeek.Friday`|6| Fredag |   | `FirstDayOfWeek.Saturday`|7| Lördag |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.  \n  \n [!code-vb[VbVbalrFunctions#58](~/add/codesnippet/visualbasic/3ef2fbeb-749b-412a-a8c7-_1.vb)]"
  syntax:
    content: public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);
    parameters:
    - id: Weekday
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Numeriskt värde som anger veckodag mellan 1 och 7. 1 anger den första dagen i veckan och 7 visar den sista dagen i veckan. Identiteten för den första och sista dagen är beroende av inställningarna för `FirstDayOfWeekValue`."
    - id: Abbreviate
      type: System.Boolean
      description: "Valfritt. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>värde som anger om namnet ska förkortas. Om det utelämnas används standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, vilket innebär att namnet inte förkortas."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Valfritt. Ett värde som väljs från den <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> uppräkning som anger den första dagen i veckan. Om inget anges <xref uid=&quot;langword_csharp_FirstDayOfWeek.System&quot; name=&quot;FirstDayOfWeek.System&quot; href=&quot;&quot;> </xref> används."
    return:
      type: System.String
      description: "Returnerar en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> värde som innehåller namnet på den angivna veckodagen."
  overload: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Weekday</code>är mindre än 1 eller större än 7, eller <code>FirstDayOfWeekValue</code> är mindre än 0 eller större än 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  id: Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 1 och 9999 som representerar året."
  remarks: "Du kan också hämta året genom att anropa `DatePart` och ange `DateInterval.Year` för den `Interval` argumentet."
  example:
  - "The following example uses the `Year` function to obtain the year from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#59](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._223_1.vb)]"
  syntax:
    content: public static int Year (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>värdet som du vill extrahera året."
    return:
      type: System.Int32
      description: "Returnerar en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> värde mellan 1 och 9999 som representerar året."
  overload: Microsoft.VisualBasic.DateAndTime.Year*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.DateInterval
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DateInterval
  nameWithType: DateInterval
  fullName: Microsoft.VisualBasic.DateInterval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FirstDayOfWeek
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstDayOfWeek
  nameWithType: FirstDayOfWeek
  fullName: Microsoft.VisualBasic.FirstDayOfWeek
- uid: Microsoft.VisualBasic.FirstWeekOfYear
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstWeekOfYear
  nameWithType: FirstWeekOfYear
  fullName: Microsoft.VisualBasic.FirstWeekOfYear
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.DateAndTime.Now
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Today
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd
  nameWithType: DateAndTime.DateAdd
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff
  nameWithType: DateAndTime.DateDiff
- uid: Microsoft.VisualBasic.DateAndTime.DatePart*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart
  nameWithType: DateAndTime.DatePart
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial
  nameWithType: DateAndTime.DateSerial
- uid: Microsoft.VisualBasic.DateAndTime.DateString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue
  nameWithType: DateAndTime.DateValue
- uid: Microsoft.VisualBasic.DateAndTime.Day*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day
  nameWithType: DateAndTime.Day
- uid: Microsoft.VisualBasic.DateAndTime.Hour*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour
  nameWithType: DateAndTime.Hour
- uid: Microsoft.VisualBasic.DateAndTime.Minute*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute
  nameWithType: DateAndTime.Minute
- uid: Microsoft.VisualBasic.DateAndTime.Month*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month
  nameWithType: DateAndTime.Month
- uid: Microsoft.VisualBasic.DateAndTime.MonthName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName
  nameWithType: DateAndTime.MonthName
- uid: Microsoft.VisualBasic.DateAndTime.Now*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second
  nameWithType: DateAndTime.Second
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial
  nameWithType: DateAndTime.TimeSerial
- uid: Microsoft.VisualBasic.DateAndTime.TimeString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue
  nameWithType: DateAndTime.TimeValue
- uid: Microsoft.VisualBasic.DateAndTime.Today*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday
  nameWithType: DateAndTime.Weekday
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName
  nameWithType: DateAndTime.WeekdayName
- uid: Microsoft.VisualBasic.DateAndTime.Year*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year
  nameWithType: DateAndTime.Year
