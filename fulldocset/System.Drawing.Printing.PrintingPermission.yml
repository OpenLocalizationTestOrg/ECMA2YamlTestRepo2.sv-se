### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.PrintingPermission
  id: PrintingPermission
  children:
  - System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)
  - System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Drawing.Printing.PrintingPermission.Copy
  - System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)
  - System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)
  - System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)
  - System.Drawing.Printing.PrintingPermission.IsUnrestricted
  - System.Drawing.Printing.PrintingPermission.Level
  - System.Drawing.Printing.PrintingPermission.ToXml
  - System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: PrintingPermission
  nameWithType: PrintingPermission
  fullName: System.Drawing.Printing.PrintingPermission
  type: Class
  summary: "Kontrollerar åtkomsten till skrivare. Den här klassen kan inte ärvas."
  syntax:
    content: 'public sealed class PrintingPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)
  id: '#ctor(System.Drawing.Printing.PrintingPermissionLevel)'
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: PrintingPermission(PrintingPermissionLevel)
  nameWithType: PrintingPermission.PrintingPermission(PrintingPermissionLevel)
  fullName: System.Drawing.Printing.PrintingPermission.PrintingPermission(PrintingPermissionLevel)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Initierar en ny instans av den <xref href=&quot;System.Drawing.Printing.PrintingPermission&quot;> </xref> klass med åtkomstnivån utskrift anges."
  syntax:
    content: public PrintingPermission (System.Drawing.Printing.PrintingPermissionLevel printingLevel);
    parameters:
    - id: printingLevel
      type: System.Drawing.Printing.PrintingPermissionLevel
      description: "En av de <xref href=&quot;System.Drawing.Printing.PrintingPermissionLevel&quot;> </xref> värden."
  overload: System.Drawing.Printing.PrintingPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: PrintingPermission(PermissionState)
  nameWithType: PrintingPermission.PrintingPermission(PermissionState)
  fullName: System.Drawing.Printing.PrintingPermission.PrintingPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Initierar en ny instans av den <xref href=&quot;System.Drawing.Printing.PrintingPermission&quot;> </xref> klass med helt begränsad eller obegränsad åtkomst som angetts."
  remarks: "Den här konstruktorn skapar antingen fullständigt begränsade (`None`) eller `Unrestricted` form av behörigheten."
  syntax:
    content: public PrintingPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "En av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> värden."
  overload: System.Drawing.Printing.PrintingPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>är inte ett giltigt <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.Copy
  id: Copy
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: PrintingPermission.Copy()
  fullName: System.Drawing.Printing.PrintingPermission.Copy()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Skapar och returnerar en identisk kopia av det aktuella objektet behörighet."
  remarks: "En kopia av behörighet-objektet representerar samma åtkomst till resurser som den ursprungliga behörighetsobjekt."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopia av det aktuella objektet behörighet."
  overload: System.Drawing.Printing.PrintingPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PrintingPermission.FromXml(SecurityElement)
  fullName: System.Drawing.Printing.PrintingPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Rekonstruerar ett säkerhetsobjekt med ett angivet tillstånd från en XML-kodning."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML-kodning som ska användas för att rekonstruera-objekt."
  overload: System.Drawing.Printing.PrintingPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: PrintingPermission.Intersect(IPermission)
  fullName: System.Drawing.Printing.PrintingPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Skapar och returnerar en behörighet som är skärningspunkten för det aktuella objektet behörighet och ett målobjekt för behörighet."
  remarks: "Skärningspunkten för två behörigheter är en behörighet som beskriver uppsättningen åtgärder som de båda håller gemensamma. Mer specifikt representerar de lägsta behörigheter som krävs för en begäran att skicka både behörigheter."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "En behörighetsobjekt av samma typ som det aktuella objektet behörighet."
    return:
      type: System.Security.IPermission
      description: "En ny behörighetsobjekt som representerar skärningspunkten för det aktuella objektet och det angivna målet. Det här objektet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om skärningspunkten är tom."
  overload: System.Drawing.Printing.PrintingPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>är ett objekt som inte är av samma typ som det aktuella objektet behörighet."
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: PrintingPermission.IsSubsetOf(IPermission)
  fullName: System.Drawing.Printing.PrintingPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Anger om det aktuella objektet behörighet är en delmängd av den angivna behörigheten."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Ett behörighetsobjekt som ska testas för delmängd relationen. Det här objektet måste vara av samma typ som det aktuella objektet behörighet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det aktuella objektet behörighet är en delmängd av <code> target </code>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Printing.PrintingPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>är ett objekt som inte är av samma typ som det aktuella objektet behörighet."
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: PrintingPermission.IsUnrestricted()
  fullName: System.Drawing.Printing.PrintingPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Hämtar ett värde som anger om behörigheten är obegränsad."
  remarks: "En obegränsad behörighet-objektet representerar åtkomst till alla resurser som skyddas av behörigheten."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om behörigheten är obegränsad; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Printing.PrintingPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.Level
  id: Level
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: Level
  nameWithType: PrintingPermission.Level
  fullName: System.Drawing.Printing.PrintingPermission.Level
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Hämtar eller anger den koden utskrift åtkomstnivå."
  syntax:
    content: public System.Drawing.Printing.PrintingPermissionLevel Level { get; set; }
    return:
      type: System.Drawing.Printing.PrintingPermissionLevel
      description: "En av de <xref href=&quot;System.Drawing.Printing.PrintingPermissionLevel&quot;> </xref> värden."
  overload: System.Drawing.Printing.PrintingPermission.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.ToXml
  id: ToXml
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: PrintingPermission.ToXml()
  fullName: System.Drawing.Printing.PrintingPermission.ToXml()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Skapar en XML-kodning av-objekt och det aktuella tillståndet."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "En XML-kodning av säkerhetsobjekt, inklusive statusinformation."
  overload: System.Drawing.Printing.PrintingPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Drawing.Printing.PrintingPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: PrintingPermission.Union(IPermission)
  fullName: System.Drawing.Printing.PrintingPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Skapar en behörighet som kombinerar objektet behörighet och behörighet målobjektet."
  remarks: "Resultatet av ett anrop till <xref:System.Security.Permissions.UIPermission.Union%2A>beror på behörigheter som representerar alla åtgärder som representeras av det aktuella objektet behörighet och alla åtgärder som representeras av den angivna behörighetsobjekt.</xref:System.Security.Permissions.UIPermission.Union%2A>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "En behörighetsobjekt av samma typ som det aktuella objektet behörighet."
    return:
      type: System.Security.IPermission
      description: "En ny behörighetsobjekt som representerar unionen av det aktuella objektet behörighet och angivna behörighetsobjekt."
  overload: System.Drawing.Printing.PrintingPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>är ett objekt som inte är av samma typ som det aktuella objektet behörighet."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: PrintingPermission(PrintingPermissionLevel)
  nameWithType: PrintingPermission.PrintingPermission(PrintingPermissionLevel)
  fullName: System.Drawing.Printing.PrintingPermission.PrintingPermission(PrintingPermissionLevel)
- uid: System.Drawing.Printing.PrintingPermissionLevel
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintingPermissionLevel
  nameWithType: PrintingPermissionLevel
  fullName: System.Drawing.Printing.PrintingPermissionLevel
- uid: System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: PrintingPermission(PermissionState)
  nameWithType: PrintingPermission.PrintingPermission(PermissionState)
  fullName: System.Drawing.Printing.PrintingPermission.PrintingPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Drawing.Printing.PrintingPermission.Copy
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: Copy()
  nameWithType: PrintingPermission.Copy()
  fullName: System.Drawing.Printing.PrintingPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PrintingPermission.FromXml(SecurityElement)
  fullName: System.Drawing.Printing.PrintingPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: PrintingPermission.Intersect(IPermission)
  fullName: System.Drawing.Printing.PrintingPermission.Intersect(IPermission)
- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: PrintingPermission.IsSubsetOf(IPermission)
  fullName: System.Drawing.Printing.PrintingPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: PrintingPermission.IsUnrestricted()
  fullName: System.Drawing.Printing.PrintingPermission.IsUnrestricted()
- uid: System.Drawing.Printing.PrintingPermission.Level
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: Level
  nameWithType: PrintingPermission.Level
  fullName: System.Drawing.Printing.PrintingPermission.Level
- uid: System.Drawing.Printing.PrintingPermission.ToXml
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: ToXml()
  nameWithType: PrintingPermission.ToXml()
  fullName: System.Drawing.Printing.PrintingPermission.ToXml()
- uid: System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: PrintingPermission.Union(IPermission)
  fullName: System.Drawing.Printing.PrintingPermission.Union(IPermission)
- uid: System.Drawing.Printing.PrintingPermission.#ctor*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: PrintingPermission
  nameWithType: PrintingPermission.PrintingPermission
- uid: System.Drawing.Printing.PrintingPermission.Copy*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: Copy
  nameWithType: PrintingPermission.Copy
- uid: System.Drawing.Printing.PrintingPermission.FromXml*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: FromXml
  nameWithType: PrintingPermission.FromXml
- uid: System.Drawing.Printing.PrintingPermission.Intersect*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: Intersect
  nameWithType: PrintingPermission.Intersect
- uid: System.Drawing.Printing.PrintingPermission.IsSubsetOf*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: PrintingPermission.IsSubsetOf
- uid: System.Drawing.Printing.PrintingPermission.IsUnrestricted*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: PrintingPermission.IsUnrestricted
- uid: System.Drawing.Printing.PrintingPermission.Level*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: Level
  nameWithType: PrintingPermission.Level
- uid: System.Drawing.Printing.PrintingPermission.ToXml*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: ToXml
  nameWithType: PrintingPermission.ToXml
- uid: System.Drawing.Printing.PrintingPermission.Union*
  parent: System.Drawing.Printing.PrintingPermission
  isExternal: false
  name: Union
  nameWithType: PrintingPermission.Union
