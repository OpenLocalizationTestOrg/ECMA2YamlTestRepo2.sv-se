### YamlMime:ManagedReference
items:
- uid: System.Activities.RuntimeTransactionHandle
  id: RuntimeTransactionHandle
  children:
  - System.Activities.RuntimeTransactionHandle.#ctor
  - System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  - System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  - System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  - System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  - System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  - System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  - System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  - System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  - System.Activities.RuntimeTransactionHandle.SuppressTransaction
  - System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  - System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  - System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  - System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  langs:
  - csharp
  name: RuntimeTransactionHandle
  nameWithType: RuntimeTransactionHandle
  fullName: System.Activities.RuntimeTransactionHandle
  type: Class
  summary: "Tillhandahåller åtkomst till transaktionen körning i en arbetsflödesinstans."
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public sealed class RuntimeTransactionHandle : System.Activities.Handle, System.Activities.IExecutionProperty, System.Activities.IPropertyRegistrationCallback
  inheritance:
  - System.Object
  - System.Activities.Handle
  implements:
  - System.Activities.IExecutionProperty
  - System.Activities.IPropertyRegistrationCallback
  inheritedMembers:
  - System.Activities.Handle.ExecutionPropertyName
  - System.Activities.Handle.Owner
  - System.Activities.Handle.ThrowIfUninitialized
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.#ctor
  id: '#ctor'
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RuntimeTransactionHandle()
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle()
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Initierar en ny instans av den <xref href=&quot;System.Activities.RuntimeTransactionHandle&quot;> </xref> klass."
  syntax:
    content: public RuntimeTransactionHandle ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  id: '#ctor(System.Transactions.Transaction)'
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RuntimeTransactionHandle(Transaction)
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Initierar en ny instans av den <xref href=&quot;System.Activities.RuntimeTransactionHandle&quot;> </xref> klassen med angiven rot-transaktion."
  syntax:
    content: public RuntimeTransactionHandle (System.Transactions.Transaction rootTransaction);
    parameters:
    - id: rootTransaction
      type: System.Transactions.Transaction
      description: "Transaktionen som roten."
  overload: System.Activities.RuntimeTransactionHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  id: AbortInstanceOnTransactionFailure
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  fullName: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Hämtar eller anger om arbetsflödesinstansen ska avbrytas om transaktionen misslyckas."
  remarks: "Om AbortInstanceOnTransactionFailure är `false`, transaktion fel resulterar i det undantag som gör att det inte gick att spridas som vanligt. Standardvärdet för AbortInstanceOnTransactionFailure är `true`."
  syntax:
    content: public bool AbortInstanceOnTransactionFailure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om arbetsflödesinstansen ska avbrytas om transaktionen misslyckas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  id: CompleteTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: CompleteTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Slutför den aktuella transaktionen för körning."
  syntax:
    content: public void CompleteTransaction (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Den aktuella körningsmiljön."
  overload: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  id: CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: CompleteTransaction(NativeActivityContext,BookmarkCallback)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Slutför den aktuella transaktionen för körning och schemalägger bokmärke återanropet när transaktionen har slutförts."
  syntax:
    content: public void CompleteTransaction (System.Activities.NativeActivityContext context, System.Activities.BookmarkCallback callback);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Den aktuella körningsmiljön."
    - id: callback
      type: System.Activities.BookmarkCallback
      description: "Bokmärket återanropet anropas när transaktionen är klar."
  overload: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  id: GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(AsyncCodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returnerar en referens till den aktuella transaktionen för körning."
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.AsyncCodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "Den aktuella körningsmiljön."
    return:
      type: System.Transactions.Transaction
      description: "Den aktuella transaktionen."
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  id: GetCurrentTransaction(System.Activities.CodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(CodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returnerar en referens till den aktuella transaktionen för körning."
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: "Den aktuella körningsmiljön."
    return:
      type: System.Transactions.Transaction
      description: "Den aktuella transaktionen."
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  id: GetCurrentTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returnerar en referens till den aktuella transaktionen för körning."
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Den aktuella körningsmiljön."
    return:
      type: System.Transactions.Transaction
      description: "Den aktuella transaktionen för körning."
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  id: OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: OnInitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnInitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "Som ska läggas till."
  overload: System.Activities.RuntimeTransactionHandle.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  id: OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnUninitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "Som ska läggas till."
  overload: System.Activities.RuntimeTransactionHandle.OnUninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  id: RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Initierar skapandet av en <xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;> </xref> för användning med en ny transaktion."
  remarks: "Den här metoden används när aktiviteten skapar en ny transaktion för användning av körningen. Arbetsflödet kunde potentiellt spara en eller flera gånger innan återanropet anropas. Den här metoden kan transaktionen scope i flera grenar av en parallell att köa samtidiga förfrågningar utan att blockera varandra från beständighet när transaktionen har slutförts. För att undvika fel om arbetsflödet kvarstår kan du kontrollera att tillståndsobjektet kan serialiseras."
  syntax:
    content: public void RequestTransactionContext (System.Activities.NativeActivityContext context, Action<System.Activities.NativeActivityTransactionContext,object> callback, object state);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Den aktuella körningsmiljön."
    - id: callback
      type: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
      description: "Metoden som ska anropas när den <xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;> </xref> skapas."
    - id: state
      type: System.Object
      description: "Ett valfritt som användaren tillhandahållit tillstånd som innehåller information om begäran."
  overload: System.Activities.RuntimeTransactionHandle.RequestTransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  id: RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Initierar skapandet av en <xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;> </xref> för användning med en befintlig transaktion."
  remarks: "Den här metoden används när aktiviteten har en transaktion som krävs av körningsmiljön som skulle användas. Arbetsflödet kan inte sparas mellan ett anrop av RequireTransactionContext och efterföljande återanropet. Är inte tillåtet att anropa RequireTransactionContext igen innan det första anropet har slutförts och alla anrop efter det första anropet resultera i undantag. Den här metoden kan transaktionsflöden i från värden som ska distribueras till körningsmiljön utan att riskera mellanliggande persistence för en punkt. Tillståndsobjektet som kan serialiseras är inte nödvändigt eftersom instansen inte garanterat kvar när den här metoden används."
  syntax:
    content: public void RequireTransactionContext (System.Activities.NativeActivityContext context, Action<System.Activities.NativeActivityTransactionContext,object> callback, object state);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Den aktuella körningsmiljön."
    - id: callback
      type: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
      description: "Metoden som ska anropas när den <xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;> </xref> skapas."
    - id: state
      type: System.Object
      description: "Ett valfritt som användaren tillhandahållit tillstånd som innehåller information om begäran."
  overload: System.Activities.RuntimeTransactionHandle.RequireTransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  id: SuppressTransaction
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
  fullName: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Hämtar eller anger ett värde som anger om den här transaktionen körning ignoreras."
  syntax:
    content: public bool SuppressTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om transaktionen körning ignoreras; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.RuntimeTransactionHandle.SuppressTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  id: System#Activities#IExecutionProperty#CleanupWorkflowThread
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "En beskrivning av den här medlemmen finns &lt;xref:System.Activities.IExecutionProperty.CleanupWorkflowThread%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IExecutionProperty.CleanupWorkflowThread ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  id: System#Activities#IExecutionProperty#SetupWorkflowThread
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IExecutionProperty.SetupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "En beskrivning av den här medlemmen finns &lt;xref:System.Activities.IExecutionProperty.SetupWorkflowThread%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IExecutionProperty.SetupWorkflowThread ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  id: System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "En beskrivning av den här medlemmen finns <xref:System.Activities.IPropertyRegistrationCallback.Register*>.</xref:System.Activities.IPropertyRegistrationCallback.Register*>"
  syntax:
    content: void IPropertyRegistrationCallback.Register (System.Activities.RegistrationContext context);
    parameters:
    - id: context
      type: System.Activities.RegistrationContext
      description: "En beskrivning av den här parametern finns <xref:System.Activities.IPropertyRegistrationCallback.Register*>.</xref:System.Activities.IPropertyRegistrationCallback.Register*>"
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  id: System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "En beskrivning av den här medlemmen finns <xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>.</xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>"
  syntax:
    content: void IPropertyRegistrationCallback.Unregister (System.Activities.RegistrationContext context);
    parameters:
    - id: context
      type: System.Activities.RegistrationContext
      description: "En beskrivning av den här parametern finns <xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>.</xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>"
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Handle
  isExternal: false
  name: System.Activities.Handle
- uid: System.Activities.RuntimeTransactionHandle.#ctor
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle()
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle()
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle()
- uid: System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle(Transaction)
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  fullName: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction(NativeActivityContext,BookmarkCallback)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
- uid: System.Activities.BookmarkCallback
  parent: System.Activities
  isExternal: false
  name: BookmarkCallback
  nameWithType: BookmarkCallback
  fullName: System.Activities.BookmarkCallback
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(AsyncCodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
- uid: System.Activities.AsyncCodeActivityContext
  parent: System.Activities
  isExternal: false
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(CodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnInitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
- uid: System.Activities.HandleInitializationContext
  parent: System.Activities
  isExternal: false
  name: HandleInitializationContext
  nameWithType: HandleInitializationContext
  fullName: System.Activities.HandleInitializationContext
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
- uid: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
  parent: System
  isExternal: true
  name: Action<NativeActivityTransactionContext,Object>
  nameWithType: Action<NativeActivityTransactionContext,Object>
  fullName: System.Action<System.Activities.NativeActivityTransactionContext,System.Object>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.NativeActivityTransactionContext,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.NativeActivityTransactionContext
    name: NativeActivityTransactionContext
    nameWithType: NativeActivityTransactionContext
    fullName: NativeActivityTransactionContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
  fullName: System.Activities.RuntimeTransactionHandle.SuppressTransaction
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.SetupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
- uid: System.Activities.RegistrationContext
  parent: System.Activities
  isExternal: false
  name: RegistrationContext
  nameWithType: RegistrationContext
  fullName: System.Activities.RegistrationContext
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
- uid: System.Activities.RuntimeTransactionHandle.#ctor*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction
  nameWithType: RuntimeTransactionHandle.CompleteTransaction
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnInitialize
  nameWithType: RuntimeTransactionHandle.OnInitialize
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnUninitialize
  nameWithType: RuntimeTransactionHandle.OnUninitialize
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequestTransactionContext
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequireTransactionContext
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.SetupWorkflowThread
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Register
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Unregister
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister
