### YamlMime:ManagedReference
items:
- uid: System.UriParser
  id: UriParser
  children:
  - System.UriParser.#ctor
  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  - System.UriParser.IsBaseOf(System.Uri,System.Uri)
  - System.UriParser.IsKnownScheme(System.String)
  - System.UriParser.IsWellFormedOriginalString(System.Uri)
  - System.UriParser.OnNewUri
  - System.UriParser.OnRegister(System.String,System.Int32)
  - System.UriParser.Register(System.UriParser,System.String,System.Int32)
  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  langs:
  - csharp
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
  type: Class
  summary: "Parsar en ny URI-schema. Det här är en abstrakt klass."
  remarks: "Klassen UriParser kan du skapa tolkar för nya URI-scheman. Du kan skriva dessa Parser i sin helhet eller tolkar kan härledas från välkända scheman (HTTP, FTP- och andra scheman baserat på nätverksprotokoll). Om du vill skapa en helt ny parser Ärv från <xref:System.GenericUriParser>.</xref:System.GenericUriParser> Om du vill skapa en parser som utökar en välkänd URI-schema som ärver från <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, eller <xref:System.LdapStyleUriParser>.</xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FileStyleUriParser> </xref:System.HttpStyleUriParser> </xref:System.FtpStyleUriParser>       Microsoft rekommenderar att du använder en parser som levereras med .NET Framework. Skapa en egen tolk ökar komplexiteten i ditt program och kommer inte att utföra samt levererade parser."
  syntax:
    content: public abstract class UriParser
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.UriParser.#ctor
  id: '#ctor'
  parent: System.UriParser
  langs:
  - csharp
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: "Skapar en standard-URI-parsern."
  syntax:
    content: protected UriParser ();
    parameters: []
  overload: System.UriParser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  id: GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  langs:
  - csharp
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Hämtar komponenter från en URI."
  remarks: "Använda GetComponents-metoden för att fastställa värdet för olika delar av URI som den <xref:System.UriComponents>, <xref:System.UriComponents>, eller <xref:System.UriComponents>.</xref:System.UriComponents> </xref:System.UriComponents> </xref:System.UriComponents>       Komponenterna som returneras i den ordning som de visas i URI: N. Till exempel om <xref:System.UriComponents>anges den visas först.</xref:System.UriComponents>"
  syntax:
    content: protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);
    parameters:
    - id: uri
      type: System.Uri
      description: "URI: N att parsa."
    - id: components
      type: System.UriComponents
      description: "Den <xref:System.UriComponents>att hämta från `uri`.</xref:System.UriComponents>"
    - id: format
      type: System.UriFormat
      description: "En av de <xref:System.UriFormat>värden som styr hur specialtecken är undantagna.</xref:System.UriFormat>"
    return:
      type: System.String
      description: "En sträng som innehåller komponenterna."
  overload: System.UriParser.GetComponents*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>uriFormat</code> is invalid.  \n  \n \\- or -  \n  \n <code>uriComponents</code> is not a combination of valid <xref:System.UriComponents> values."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>uri</code> requires user-driven parsing  \n  \n \\- or -  \n  \n <code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method."
  platform:
  - net462
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  id: InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Parsern tillstånd och validera URI: N."
  remarks: "InitializeAndValidate-metoden anropas varje gång en <xref:System.Uri>instansieras.</xref:System.Uri>"
  syntax:
    content: protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);
    parameters:
    - id: uri
      type: System.Uri
      description: "T:System.Uri att validera."
    - id: parsingError
      type: System.UriFormatException
      description: "Verifieringsfel uppstod, om sådana finns."
  overload: System.UriParser.InitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  id: IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Anger om <code> baseUri </code> är en bas-URI för <code> relativeUri </code>."
  syntax:
    content: protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Bas-URI."
    - id: relativeUri
      type: System.Uri
      description: "URI som används för att testa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.UriParser.IsBaseOf*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsKnownScheme(System.String)
  id: IsKnownScheme(System.String)
  parent: System.UriParser
  langs:
  - csharp
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Anger om parsern för ett schema är registrerad."
  syntax:
    content: public static bool IsKnownScheme (string schemeName);
    parameters:
    - id: schemeName
      type: System.String
      description: "Schemanamnet att kontrollera."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> schemeName </code> har varit registrerade, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.UriParser.IsKnownScheme*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> schemeName </code> -parametern är null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> schemeName </code> är inte giltig."
  platform:
  - net462
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  id: IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Anger om en URI är giltigt."
  remarks: "Metoden IsWellFormedOriginalString returnerar false om:-strängen är inte korrekt undantaget per RFC 2396.      -Strängen representerar en absolut URI som refererar till en implicit fil URI.      -Strängen representerar en absolut URI som saknar ett snedstreck före del av sökvägen.      -Strängen innehåller unescaped omvända snedstreck, även om de kommer att behandlas som snedstreck."
  syntax:
    content: protected virtual bool IsWellFormedOriginalString (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "URI som används för att kontrollera."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> uri </code> är korrekt, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.UriParser.IsWellFormedOriginalString*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnNewUri
  id: OnNewUri
  parent: System.UriParser
  langs:
  - csharp
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Anropade genom en <xref:System.Uri>konstruktorn för att hämta en <xref href=&quot;System.UriParser&quot;> </xref> instans</xref:System.Uri>"
  remarks: "Standardimplementering returnerar samma <xref:System.UriParser>instans.</xref:System.UriParser> Du kan behöva åsidosätta den här metoden och returnera en annan <xref:System.UriParser>för varje anrop om du arbetar i en flertrådsmiljö.</xref:System.UriParser>"
  syntax:
    content: protected virtual UriParser OnNewUri ();
    parameters: []
    return:
      type: System.UriParser
      description: "En <xref href=&quot;System.UriParser&quot;> </xref> för konstruerade <xref:System.Uri>.</xref:System.Uri>"
  overload: System.UriParser.OnNewUri*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  id: OnRegister(System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Anropas av Framework när en <xref href=&quot;System.UriParser&quot;> </xref> metod har registrerats."
  syntax:
    content: protected virtual void OnRegister (string schemeName, int defaultPort);
    parameters:
    - id: schemeName
      type: System.String
      description: "Det schema som är associerad med den här <xref href=&quot;System.UriParser&quot;> </xref>."
    - id: defaultPort
      type: System.Int32
      description: "Portnumret för schemat."
  overload: System.UriParser.OnRegister*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  id: Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Associerar ett schema och port number med en <xref href=&quot;System.UriParser&quot;> </xref>."
  remarks: "Om den `defaultPort` parametern anges till -1, Register-metoden registrerar inget standardvärde för portnumret."
  syntax:
    content: public static void Register (UriParser uriParser, string schemeName, int defaultPort);
    parameters:
    - id: uriParser
      type: System.UriParser
      description: "Den URI-parsern för att registrera."
    - id: schemeName
      type: System.String
      description: "Namnet på det schema som är associerad med den här parsern."
    - id: defaultPort
      type: System.Int32
      description: "Standardportnumret för det angivna schemat."
  overload: System.UriParser.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriParser</code> parameter is null  \n  \n \\- or -  \n  \n <code>schemeName</code> parameter is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>schemeName</code> parameter is not valid  \n  \n \\- or -  \n  \n <code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534."
  platform:
  - net462
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  id: Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "Anropas av <xref:System.Uri>konstruktorer och &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; att lösa en relativ URI.</xref:System.Uri>"
  remarks: "<xref:System.Uri>konstruktorer och <xref:System.Uri.TryCreate%2A?displayProperty=fullName>använda Lös för att skapa en URI från `baseUri` och `relativeUri`.</xref:System.Uri.TryCreate%2A?displayProperty=fullName></xref:System.Uri>       Om parsning av ett fel inträffar, den returnerade strängen för löst relativt <xref:System.Uri>är null.</xref:System.Uri>"
  syntax:
    content: protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "En bas-URI."
    - id: relativeUri
      type: System.Uri
      description: "En relativ URI."
    - id: parsingError
      type: System.UriFormatException
      description: "Under Lös eventuella fel."
    return:
      type: System.String
      description: "Strängen med löst relativt <xref:System.Uri>.</xref:System.Uri>"
  overload: System.UriParser.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>baseUri</code> parameter is not an absolute <xref:System.Uri>  \n  \n \\- or -  \n  \n <code>baseUri</code> parameter requires user-driven parsing."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UriParser.#ctor
  parent: System.UriParser
  isExternal: false
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  isExternal: false
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.UriComponents
  parent: System
  isExternal: true
  name: UriComponents
  nameWithType: UriComponents
  fullName: System.UriComponents
- uid: System.UriFormat
  parent: System
  isExternal: true
  name: UriFormat
  nameWithType: UriFormat
  fullName: System.UriFormat
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
- uid: System.UriFormatException
  parent: System
  isExternal: true
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UriParser.IsKnownScheme(System.String)
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
- uid: System.UriParser.OnNewUri
  parent: System.UriParser
  isExternal: false
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
- uid: System.UriParser
  parent: System
  isExternal: false
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
- uid: System.UriParser.#ctor*
  parent: System.UriParser
  isExternal: false
  name: UriParser
  nameWithType: UriParser.UriParser
- uid: System.UriParser.GetComponents*
  parent: System.UriParser
  isExternal: false
  name: GetComponents
  nameWithType: UriParser.GetComponents
- uid: System.UriParser.InitializeAndValidate*
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate
  nameWithType: UriParser.InitializeAndValidate
- uid: System.UriParser.IsBaseOf*
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf
  nameWithType: UriParser.IsBaseOf
- uid: System.UriParser.IsKnownScheme*
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme
  nameWithType: UriParser.IsKnownScheme
- uid: System.UriParser.IsWellFormedOriginalString*
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString
  nameWithType: UriParser.IsWellFormedOriginalString
- uid: System.UriParser.OnNewUri*
  parent: System.UriParser
  isExternal: false
  name: OnNewUri
  nameWithType: UriParser.OnNewUri
- uid: System.UriParser.OnRegister*
  parent: System.UriParser
  isExternal: false
  name: OnRegister
  nameWithType: UriParser.OnRegister
- uid: System.UriParser.Register*
  parent: System.UriParser
  isExternal: false
  name: Register
  nameWithType: UriParser.Register
- uid: System.UriParser.Resolve*
  parent: System.UriParser
  isExternal: false
  name: Resolve
  nameWithType: UriParser.Resolve
