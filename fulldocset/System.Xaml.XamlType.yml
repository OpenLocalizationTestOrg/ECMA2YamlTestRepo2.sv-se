### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlType
  id: XamlType
  children:
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  - System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.AllowedContentTypes
  - System.Xaml.XamlType.BaseType
  - System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  - System.Xaml.XamlType.ConstructionRequiresArguments
  - System.Xaml.XamlType.ContentProperty
  - System.Xaml.XamlType.ContentWrappers
  - System.Xaml.XamlType.DeferringLoader
  - System.Xaml.XamlType.Equals(System.Object)
  - System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  - System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.GetAllAttachableMembers
  - System.Xaml.XamlType.GetAllMembers
  - System.Xaml.XamlType.GetAttachableMember(System.String)
  - System.Xaml.XamlType.GetHashCode
  - System.Xaml.XamlType.GetMember(System.String)
  - System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  - System.Xaml.XamlType.GetXamlNamespaces
  - System.Xaml.XamlType.Invoker
  - System.Xaml.XamlType.IsAmbient
  - System.Xaml.XamlType.IsArray
  - System.Xaml.XamlType.IsCollection
  - System.Xaml.XamlType.IsConstructible
  - System.Xaml.XamlType.IsDictionary
  - System.Xaml.XamlType.IsGeneric
  - System.Xaml.XamlType.IsMarkupExtension
  - System.Xaml.XamlType.IsNameScope
  - System.Xaml.XamlType.IsNameValid
  - System.Xaml.XamlType.IsNullable
  - System.Xaml.XamlType.IsPublic
  - System.Xaml.XamlType.IsUnknown
  - System.Xaml.XamlType.IsUsableDuringInitialization
  - System.Xaml.XamlType.IsWhitespaceSignificantCollection
  - System.Xaml.XamlType.IsXData
  - System.Xaml.XamlType.ItemType
  - System.Xaml.XamlType.KeyType
  - System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.LookupAllAttachableMembers
  - System.Xaml.XamlType.LookupAllMembers
  - System.Xaml.XamlType.LookupAllowedContentTypes
  - System.Xaml.XamlType.LookupAttachableMember(System.String)
  - System.Xaml.XamlType.LookupBaseType
  - System.Xaml.XamlType.LookupCollectionKind
  - System.Xaml.XamlType.LookupConstructionRequiresArguments
  - System.Xaml.XamlType.LookupContentProperty
  - System.Xaml.XamlType.LookupContentWrappers
  - System.Xaml.XamlType.LookupCustomAttributeProvider
  - System.Xaml.XamlType.LookupDeferringLoader
  - System.Xaml.XamlType.LookupInvoker
  - System.Xaml.XamlType.LookupIsAmbient
  - System.Xaml.XamlType.LookupIsConstructible
  - System.Xaml.XamlType.LookupIsMarkupExtension
  - System.Xaml.XamlType.LookupIsNameScope
  - System.Xaml.XamlType.LookupIsNullable
  - System.Xaml.XamlType.LookupIsPublic
  - System.Xaml.XamlType.LookupIsUnknown
  - System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  - System.Xaml.XamlType.LookupIsXData
  - System.Xaml.XamlType.LookupItemType
  - System.Xaml.XamlType.LookupKeyType
  - System.Xaml.XamlType.LookupMarkupExtensionReturnType
  - System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  - System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  - System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  - System.Xaml.XamlType.LookupSetTypeConverterHandler
  - System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  - System.Xaml.XamlType.LookupTypeConverter
  - System.Xaml.XamlType.LookupUnderlyingType
  - System.Xaml.XamlType.LookupUsableDuringInitialization
  - System.Xaml.XamlType.LookupValueSerializer
  - System.Xaml.XamlType.MarkupExtensionReturnType
  - System.Xaml.XamlType.Name
  - System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.PreferredXamlNamespace
  - System.Xaml.XamlType.SchemaContext
  - System.Xaml.XamlType.ToString
  - System.Xaml.XamlType.TrimSurroundingWhitespace
  - System.Xaml.XamlType.TypeArguments
  - System.Xaml.XamlType.TypeConverter
  - System.Xaml.XamlType.UnderlyingType
  - System.Xaml.XamlType.ValueSerializer
  langs:
  - csharp
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
  type: Class
  summary: "Rapporten information om XAML-typer som en del av den övergripande XAML system som är implementerad i .NET Framework XAML-tjänster."
  remarks: "Många API: er i klassen XamlType innehåller information om XAML-typer, där konceptet rapporterar på liknar vissa avsnitt i XAML-specifikationen [MS-XAML].       XamlType är vanliga i .NET Framework XAML Services API reporting information om en XAML-typen. XamlType rapporterar information som du behöver känna till om en XAML-typ för att fungera med en instans eller komma åt dess medlemmar från en XAML-nodström eller en liknande XAML-representation. Dess reporting liknar hur <xref:System.Type>CLR Skriv i systemet, tillsammans med reflektion klasser som <xref:System.Reflection.MemberInfo>, innehåller information om en CLR-typen och dess användning.</xref:System.Reflection.MemberInfo> </xref:System.Type>       Om du vill utöka XAML-typsystemet, kan du vara härledd från XamlType. För att göra så effektivt, kan du också behöva implementera <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> Den <xref:System.Xaml.Schema.XamlTypeInvoker>aktiverar generaliserad XAML-typsystemet ska fungera i typsystemet säkerhetskopiering att du anger som en del av anrops-beteende.</xref:System.Xaml.Schema.XamlTypeInvoker> Den specifika anpassat <xref:System.Xaml.Schema.XamlTypeInvoker>är ett sätt att minska beroendet på systemets CLR-typ som används som standard XamlType.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: 'public class XamlType : IEquatable<System.Xaml.XamlType>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlType>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klassen baserat på den underliggande typinformationen för CLR."
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "Den underliggande CLR <xref:System.Type>för XAML-typ för att konstruera.</xref:System.Type>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML-schemat kontext för XAML-läsare eller XAML-skrivare."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klassen baserat på ett strängnamn för typen."
  remarks: "Det här är en skyddad konstruktor. Inga aktuella offentliga härledda klasser finns som använder den här sökväg för konstruktion. Som en konsument av den befintliga <xref:System.Xaml.XamlType>, måste du använda andra konstruktorn signaturer (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, eller <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) att initiera en <xref:System.Xaml.XamlType>objektet.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> </xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29> </xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29> </xref:System.Xaml.XamlType>"
  syntax:
    content: protected XamlType (string typeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: typeName
      type: System.String
      description: "Namnet på den typ som ska skapa."
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Typargument för en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som representerar en generisk typ. Kan vara (och ofta är) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vilket anger att representeras typen inte är en generisk typ."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML-schemat kontext för XAML-läsare och skrivare i XAML."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>typeName</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klassen baserat på underliggande typinformation och en <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementering."
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "Den underliggande typen för XAML-typ för att konstruera."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML-schemat kontext för XAML-läsaren."
    - id: invoker
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementering som hanterar körning reflektion anropar mot den <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> klassen baserat på XAML-namnområdet och ett namn för anslutningssträngen för typen. Den här konstruktorn är endast avsedd för analys och XAML-nod registrering av typen användningsområden som är kända inte säkerhetskopiera i stödjande typsystemet och kontext för XAML-schemat."
  remarks: "Använd den här konstruktorn endast för &quot;Okänt&quot; typer att en XAML-typ som mappas till en underliggande typsystemet är inte tillgänglig. Den här konstruktorn kan inte producera ett resultat där <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName>är `true`.</xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName> I stället rapporterar standard reflector logik den underliggande typen som <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>.</xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName> Det här beteendet kan dock ändra eftersom den <xref:System.Xaml.XamlType.LookupIsUnknown%2A>Åsidosätt.</xref:System.Xaml.XamlType.LookupIsUnknown%2A>"
  syntax:
    content: public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: unknownTypeNamespace
      type: System.String
      description: "XAML-namnområdet för typ som en sträng."
    - id: unknownTypeName
      type: System.String
      description: "Namnet på typen i den angivna `unknownTypeNamespace` XAML-namnområdet."
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Typargument för en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som representerar en generisk typ. Kan vara (och ofta är) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vilket anger att representeras typen inte är en generisk typ."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML-schemat kontext för XAML-läsare eller XAML-skrivare."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>unknownTypeNamespace</code>, <code>unknownTypeName</code>, or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.AllowedContentTypes
  id: AllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en skrivskyddad samling typer som kan användas som den <xref:System.Xaml.XamlType.ContentProperty*>värdet för den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Xaml.XamlType.ContentProperty*>"
  remarks: "Typer som kan tilldelas en specifik innehållstyp (till exempel tilldelas en bastyp som är en tillåten innehållstyp) betraktas inte flera typer för tillämpning av AllowedContentTypes.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> AllowedContentTypes { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En skrivskyddad samling möjliga typer av innehåll."
  overload: System.Xaml.XamlType.AllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.BaseType
  id: BaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> för omedelbar bastypen för den här typen i XAML. Bestämning av det här värdet är baserad på den underliggande typen av denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref> och schema-kontext."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupBaseType%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupBaseType%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupBaseType%2A>på den här typen.</xref:System.Xaml.XamlType.LookupBaseType%2A> Som standard BaseType returnerar ett internt konstant som representerar en <xref:System.Object>om <xref:System.Xaml.XamlType.UnderlyingType%2A>är `null`.</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Object>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupBaseType%2A>är virtuell och därför kan åsidosättas.</xref:System.Xaml.XamlType.LookupBaseType%2A> Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra rapporterade typinformation om en XAML-typ så att den inte längre justeras i ett förväntat sätt med Systeminformation typ av dess underliggande CLR-typen. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av tilldelning åtgärder och åtkomst."
  syntax:
    content: public System.Xaml.XamlType BaseType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> för omedelbar bastypen för den här typen i XAML."
  overload: System.Xaml.XamlType.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  id: CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om en instans av det här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> har det angivna <xref href=&quot;System.Xaml.XamlType&quot;> </xref> sin lista över tilldelas typer."
  remarks: "Även om tilldelas typen inte har alla funktioner av referenstypen, kan du använda den för tilldelning. Du kan till exempel använda tilldelning för att göra matchar för värdena för en egenskap. Begreppet tilldelas typer i XAML liknar begreppet omvandling upp i CLR-typsystemet. Exempelvis under en CLR-typsystemet varje typ har en <xref:System.Object>i listan över tilldelas typen.</xref:System.Object>       Om en av två <xref:System.Xaml.XamlType>instanser som används för jämförelse har <xref:System.Xaml.XamlType.IsUnknown%2A>lika med `true`, den här metoden har en särskild okända läget som returnerar `true` om två <xref:System.Xaml.XamlType>instanser är ekvivalenta.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.IsUnknown%2A> </xref:System.Xaml.XamlType>       Standardimplementering använder CLR <xref:System.Type>från <xref:System.Xaml.XamlType.UnderlyingType%2A>för den här <xref:System.Xaml.XamlType>och <xref:System.Xaml.XamlType>, och anropar <xref:System.Type.IsAssignableFrom%2A>.</xref:System.Type.IsAssignableFrom%2A> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Type> Åsidosätta den här metoden om du vill att en annan bestämning av tilldelas typer.       Skicka en null `xamlType` inget undantag genereras och returnerar alltid `false`.      > [!IMPORTANT] > CanAssignTo är virtuell och därför kan åsidosättas. Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra assignability av en XAML-typ så att den inte längre justeras i ett förväntat sätt med typen omvandling beteendet för dess underliggande CLR-typen. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av tilldelning åtgärder och åtkomst."
  syntax:
    content: public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "Typen för att kontrollera mot aktuellt <xref href=&quot;System.Xaml.XamlType&quot;> </xref> ."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> xamlType </code> i listan kan tilldelas typer; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.CanAssignTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  id: ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> måste ha argument (allmänna begränsningar via <xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;> </xref>, initiering text eller andra tekniker för XAML) att skapa en giltig instans av typen."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>på den här typen.</xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>"
  syntax:
    content: public bool ConstructionRequiresArguments { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om konstruktionen av en instans kräver vissa argumentvärdet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.ConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentProperty
  id: ContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> information för egenskapen innehåll för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "När du använder bindningen eller säkerhetskopiering av CLR-typsystemet, XAML innehållsegenskap kan anges för en typ genom att använda <xref:System.Windows.Markup.ContentPropertyAttribute>med typdefinitionen.</xref:System.Windows.Markup.ContentPropertyAttribute>       Den här egenskapen justeras mot den `[content property]` objekt för attributsinformation i [MS-XAML]-specifikationen.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupContentProperty%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupContentProperty%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupContentProperty%2A>på den här typen.</xref:System.Xaml.XamlType.LookupContentProperty%2A>"
  syntax:
    content: public System.Xaml.XamlMember ContentProperty { get; }
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>information för egenskapen innehåll för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>. Kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns ingen innehåll egenskap."
  overload: System.Xaml.XamlType.ContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentWrappers
  id: ContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar de typer som används för att omsluta innehållet för egenskapen content när det inte är en matchning för strikt typ, t.ex strängar i en starkt typifierad <xref uid=&quot;langword_csharp_Collection&lt;T&gt;&quot; name=&quot;Collection&lt;T&gt;&quot; href=&quot;&quot;> </xref>."
  remarks: "Om det finns ingen omslutningar för typen matchar lossa kan den här egenskapen är `null`.       Typer som utvärderas som <xref:System.Xaml.XamlType.CanAssignTo%2A>för en viss innehållstyp anses inte flera typer för tillämpning av ContentWrappers.</xref:System.Xaml.XamlType.CanAssignTo%2A>       I CLR-bindning för <xref:System.Xaml>och <xref:System.Xaml.XamlType>, i XAML innehåll adapterprogramstypen kan anges för en typ som <xref:System.Windows.Markup.ContentWrapperAttribute>.</xref:System.Windows.Markup.ContentWrapperAttribute> </xref:System.Xaml.XamlType> </xref:System.Xaml>       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupContentWrappers%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupContentWrappers%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupContentWrappers%2A>på den här typen.</xref:System.Xaml.XamlType.LookupContentWrappers%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> ContentWrappers { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En skrivskyddad samling möjliga innehåll wrapper-typer. Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Se anmärkning."
  overload: System.Xaml.XamlType.ContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som representerar den uppskjuten inläsning konvertering beteendet för den här typen."
  remarks: "XAML mallen beteende i WPF är ett exempel på uppskjuten inläsning beteende.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupDeferringLoader%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>på den här typen.</xref:System.Xaml.XamlType.LookupDeferringLoader%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Den &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> begränsning som representerar beteendet för uppskjuten inläsning för den här typen."
  overload: System.Xaml.XamlType.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anger om det aktuella objektet är lika med ett annat objekt."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som ska jämföras med det här objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det aktuella objektet är lika med den <code> obj </code> parameter, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  id: Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anger om det aktuella objektet är lika med ett annat objekt av samma typ."
  syntax:
    content: public bool Equals (System.Xaml.XamlType other);
    parameters:
    - id: other
      type: System.Xaml.XamlType
      description: "Ett objekt som ska jämföras med det här objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det aktuella objektet är lika med den <code> other </code> parameter, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  id: GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar den XAML-medlem som är ett alias till en XAML-direktiv av detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här metoden kan anropa <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAliasedProperty%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>på den här typen.</xref:System.Xaml.XamlType.LookupAliasedProperty%2A>"
  syntax:
    content: public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "Direktivet som du vill hitta alias medlemmen."
    return:
      type: System.Xaml.XamlMember
      description: "Medlemmen alias om hittas. Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.GetAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  id: GetAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en mängd som innehåller de kopplingsbara egenskaper som exponeras av detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Varje <xref:System.Xaml.XamlMember>i den returnerade samlingen får innehålla värden som stöder konceptet som den <xref:System.Xaml.XamlMember>är en bifogbar medlem.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember> Till exempel medlemmar ska returnera `true` för <xref:System.Xaml.XamlMember.IsAttachable%2A>, en typ för <xref:System.Xaml.XamlMember.TargetType%2A>och så vidare.</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.IsAttachable%2A>       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här metoden kan anropa <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>på den här typen.</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "En samling som innehåller noll eller fler <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> värden."
  overload: System.Xaml.XamlType.GetAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllMembers
  id: GetAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en mängd som innehåller alla medlemmar som visas i den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Anrop till den här metoden kan anropa <xref:System.Xaml.XamlType.LookupAllMembers%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllMembers%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "En samling som innehåller noll eller fler <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> värden."
  overload: System.Xaml.XamlType.GetAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  id: GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerar en specifik med namnet bifogbar medlem av denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Anrop till den här metoden kan anropa <xref:System.Xaml.XamlType.LookupAttachableMember%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAttachableMember%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupAttachableMember%2A>är virtuell och därför kan åsidosättas.</xref:System.Xaml.XamlType.LookupAttachableMember%2A> Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra rapporterade medlemmarna i en XAML-typ så att de inte längre placeras i ett förväntat sätt med den <xref:System.ComponentModel.TypeDescriptor> `Get*` information om den underliggande CLR-typen.</xref:System.ComponentModel.TypeDescriptor> Använd den underliggande CLR-typen i stället för alla kritiska kontroller för medlem reporting."
  syntax:
    content: public System.Xaml.XamlMember GetAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den kopplingsbara medlemmen att hämta i `ownerTypeName.MemberName` formuläret."
    return:
      type: System.Xaml.XamlMember
      description: "En <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt för den begärda bifogbar medlemmen, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om det finns inga bifogbar medlem med det namnet."
  overload: System.Xaml.XamlType.GetAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar hash-koden för det här objektet."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Ett heltal hash-kod."
  overload: System.Xaml.XamlType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> för en viss namngiven medlemmen från den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Värdet för `name` förväntas vara okvalificerade. Typ-kvalificerade namn som anger en bifogade medlem ska skickas till <xref:System.Xaml.XamlType.GetAttachableMember%2A>i stället.</xref:System.Xaml.XamlType.GetAttachableMember%2A> Prefixet medlem namn inte ska användas. ett prefix precisa till användning av en och XAML-typsystemet vet inte kontexten för sådan användning och hur prefixet som är mappad.       Anrop till den här metoden kan anropa <xref:System.Xaml.XamlType.LookupMember%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupMember%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupMember%2A>är virtuell och därför kan åsidosättas.</xref:System.Xaml.XamlType.LookupMember%2A> Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra rapporterade medlemmarna i en XAML-typ så att de inte längre placeras i ett förväntat sätt med den <xref:System.ComponentModel.TypeDescriptor> `Get*` information om den underliggande CLR-typen.</xref:System.ComponentModel.TypeDescriptor> Använd den underliggande CLR-typen i stället för alla kritiska kontroller för medlem reporting."
  syntax:
    content: public System.Xaml.XamlMember GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på medlemmen få (som sträng)."
    return:
      type: System.Xaml.XamlMember
      description: "Den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> information för medlem, om sådan medlem har hittats, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  id: GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "För markup Tilläggstyper returnerar typerna av positionsparametrarna som stöds i användning av en specifik markup tillägget för den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Detta API är bara relevant om den här <xref:System.Xaml.XamlType>representerar markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> är `true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       Indata `parameterCount` är inte för att begära en specifik namngivna parametertyp. Det är för att ange ariteten för användning av tillägget en markering. Markup tillägget användning ofta har flera &quot;signaturer&quot; och annan aritet (antal) av positionsparametrarna att skilja mellan. Du kan dock konfigurera en schema-kontext för att tillåta dubbla arities och använda typer av positionsparametrarna för skillnad. Mer information finns i <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> Parameterpositioner och typer kan variera specifika aritet (antal). För att få den namngivna typ av specifika aritet markup tillägget användning måste anropa du först GetPositionalParameters som anger antalet aritet. Sedan hämta objektet på den positionen från en samling som returnerade.       Anrop till den här metoden kan anropa <xref:System.Xaml.XamlType.LookupPositionalParameters%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupPositionalParameters%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> GetPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Antalet (aritet) viss syntax eller konstruktorn läge som du vill ha information om."
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En lista över <xref href=&quot;System.Xaml.XamlType&quot;> </xref> värden, där varje <xref href=&quot;System.Xaml.XamlType&quot;> </xref> är av typ för detta läge i syntax. Du måste ange typerna i samma ordning när du anger markup indata för markeringstillägget."
  overload: System.Xaml.XamlType.GetPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en lista över strängidentifierare för XAML-namnområden som ingår i typen."
  remarks: "Vanliga identifierare för XAML-namnområdet är strängar i URI-format.       Standardimplementering kontrollerar du följande i ordning: XAML-namnområdet som har angetts i konstruktion (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signatur endast), och de namnområden som finns i kontexten för schemat.</xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> Om dessa är varje `null`, skapas en ny lista som innehåller en tom sträng. Du kan åsidosätta den här metoden om du vill ändra metod för sökning."
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "En lista med strängvärden, där varje sträng är URI-identifieraren för en XAML-namnområdet."
  overload: System.Xaml.XamlType.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Invoker
  id: Invoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementering som är associerad med den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anropar anrop kan anropa antingen <xref:System.Xaml.XamlType.LookupInvoker%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlType.LookupInvoker%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupInvoker%2A>på den här typen.</xref:System.Xaml.XamlType.LookupInvoker%2A>       Om en <xref:System.Xaml.XamlType.LookupInvoker%2A>åsidosätta returnerar `null`, eller om standardimplementering returnerar `null` på grund av bristande <xref:System.Xaml.XamlType.UnderlyingType%2A>för den här <xref:System.Xaml.XamlType>som anropar returnerar <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Xaml.XamlType.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementering som är associerad med den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en ambient typ. enligt XAML-definitionen."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsAmbient%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsAmbient%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupIsAmbient%2A>på den här typen.</xref:System.Xaml.XamlType.LookupIsAmbient%2A>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en ambient typ., annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsArray
  id: IsArray
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en matris."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupCollectionKind%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupCollectionKind%2A>på den här typen.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en matris, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsCollection
  id: IsCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en samling."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupCollectionKind%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupCollectionKind%2A>på den här typen.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en samling, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsConstructible
  id: IsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en constructible typ, enligt XAML-definitionen."
  remarks: "Den här egenskapen justeras mot den `[is default constructible]` objekt för attributsinformation i [MS-XAML]-specifikationen.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsConstructible%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsConstructible%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupIsConstructible%2A>på den här typen.</xref:System.Xaml.XamlType.LookupIsConstructible%2A>"
  syntax:
    content: public bool IsConstructible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en constructible, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsDictionary
  id: IsDictionary
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en uppslagslista i XAML-definitionen."
  remarks: "Den här egenskapen justeras mot den `[is dictionary]` objekt för attributsinformation i [MS-XAML]-specifikationen.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupCollectionKind%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupCollectionKind%2A>på den här typen.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsDictionary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en ordlista, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsGeneric
  id: IsGeneric
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en generisk typ."
  remarks: "Den här egenskapen är en helper-egenskap som söker efter ett null-värde för <xref:System.Xaml.XamlType.TypeArguments%2A>.</xref:System.Xaml.XamlType.TypeArguments%2A> Det finns inga specifika `Lookup` metoden rör IsGeneric."
  syntax:
    content: public bool IsGeneric { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en generisk typ, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsGeneric*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsMarkupExtension
  id: IsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar ett markeringstillägg."
  remarks: "Den här typen i XAML-specifikationen villkor måste kunna tilldelas till `x:MarkupExtension` för att returnera `true` för IsMarkupExtension.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>på den här typen.</xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>"
  syntax:
    content: public bool IsMarkupExtension { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar ett markeringstillägg, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameScope
  id: IsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en XAML-namescope enligt XAML-definitionen."
  remarks: "En XAML-namescope tillämpar namn är unikt för den eller de egenskaper som används för `x:Name`  /  `[name property]`. Om IsNameScope är `true`, någon mekanism för att genomdriva unikhet ska finnas och bör utvärdera ur den här typen som äger en XAML-namescope. XAML-namescope utökar sedan till innehåll av typen tills en annan XAML namescope äger typ har påträffats.       Den här egenskapen justeras mot den `[is name scope]` objekt för attributsinformation i [MS-XAML]-specifikationen.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsNameScope%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsNameScope%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsNameScope { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en XAML-namescope, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> har initierats med ett giltigt <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> sträng som dess <xref:System.Xaml.XamlType.Name*>.</xref:System.Xaml.XamlType.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> har initierats med ett giltigt <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> sträng; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNullable
  id: IsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en nullbar typ i XAML-definitionen."
  remarks: "Den här egenskapen justeras mot den `[is nullable]` objekt för attributsinformation i [MS-XAML]-specifikationen.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsNullable%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsNullable%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsNullable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en nullbar typ, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsPublic
  id: IsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en offentlig typ i det relevanta typsystemet."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsPublic%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsPublic%2A> </xref:System.Xaml.XamlType>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupIsPublic%2A>är virtuell och därför kan åsidosättas.</xref:System.Xaml.XamlType.LookupIsPublic%2A> Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra rapporterade access information om en XAML-typ så att den inte längre justeras i ett förväntat sätt med systemet och komma åt informationen av dess underliggande CLR-typen. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av tilldelning åtgärder och åtkomst."
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en offentlig typ, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en typ som inte kan matchas i underliggande typsystemet."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsUnknown%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsUnknown%2A> </xref:System.Xaml.XamlType>       För en load-sökväg som inbegriper <xref:System.Xaml.XamlObjectWriter>, en <xref:System.Xaml.XamlType>som har `true` för IsUnknown inte kan skrivas i ett objektdiagram.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlObjectWriter> Under standardimplementeringar i <xref:System.Xaml>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName>anropa kastar ett <xref:System.Xaml.XamlObjectWriterException>när de relevanta <xref:System.Xaml.XamlType>rapporter `true` för IsUnknown.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName> </xref:System.Xaml> Överför du inte en <xref:System.Xaml.XamlType>som har IsUnknown som `true` om du är beredd att hantera undantag från <xref:System.Xaml.XamlObjectWriter>, eller om du har andra sätt att justera det <xref:System.Xaml.XamlObjectWriter>beteendet eller XAML-nodström innan skrivning objektdiagrammet.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en typ som inte kunde matchas, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  id: IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> bygger uppifrån och ned under XAML-initieringen."
  remarks: "Uppifrån och ned är en metafor som uppskattar XAML processor beteende när du skapar objektdiagrammet. När inbyggt uppifrån och ned, en typ som instansieras, kopplade till överordnat och välj sedan har dess egenskaper. Uppifrån och ned konstruktionen undviker att ändra egenskapen hanterare anropas flera gånger. Denna hantering ripples in objektdiagrammet och därför eliminerar flera anrop till händelsehanteraren och ger en prestandaoptimering för start av objektdiagrammet.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>på den här typen.</xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>"
  syntax:
    content: public bool IsUsableDuringInitialization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> bygger uppifrån och ned under initieringen i XAML, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  id: IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en stor samling i blanksteg, enligt XML-definitionen."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>på den här typen.</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>"
  syntax:
    content: public bool IsWhitespaceSignificantCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en stor samling blanksteg, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsXData
  id: IsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar XML <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>, som per XAML-definitionen."
  remarks: "Den här egenskapen justeras mot den `[is xdata]` objekt för attributsinformation i [MS-XAML]-specifikationen.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsXData%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsXData%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupIsXData%2A>på den här typen.</xref:System.Xaml.XamlType.LookupIsXData%2A>"
  syntax:
    content: public bool IsXData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.IsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ItemType
  id: ItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som innehåller informationen för den <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> -egenskapen för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här egenskapen gäller endast om den här <xref:System.Xaml.XamlType>representerar en samling (<xref:System.Xaml.XamlType.IsCollection%2A> är `true`).</xref:System.Xaml.XamlType.IsCollection%2A> </xref:System.Xaml.XamlType> Den `Items` egenskapen är valfri egenskap innehåller objekt i en samling eller matrisen.       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupItemType%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupItemType%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupItemType%2A>på den här typen.</xref:System.Xaml.XamlType.LookupItemType%2A>"
  syntax:
    content: public System.Xaml.XamlType ItemType { get; }
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt för typ av objekt i samlingen, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar inte en samling."
  overload: System.Xaml.XamlType.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.KeyType
  id: KeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som innehåller typinformation för nyckelegenskapen för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, om den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en ordlista."
  remarks: "Den här egenskapen gäller endast om den här <xref:System.Xaml.XamlType>representerar en ordlista (<xref:System.Xaml.XamlType.IsDictionary%2A> är `true`).</xref:System.Xaml.XamlType.IsDictionary%2A> </xref:System.Xaml.XamlType>       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupKeyType%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupKeyType%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupKeyType%2A>på den här typen.</xref:System.Xaml.XamlType.LookupKeyType%2A>"
  syntax:
    content: public System.Xaml.XamlType KeyType { get; }
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt för typ av nyckel för ordlistan användning, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar inte en ordlista."
  overload: System.Xaml.XamlType.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  id: LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar den XAML-medlem som är ett alias till en XAML-direktiv av detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</xref:System.Xaml.XamlType.GetAliasedProperty%2A>       Standardimplementering kan returnera resultat för följande XAML-direktiv: `Key`; `Name`; `Uid`; and `xml:lang`. Värdena för dessa är beroende av underliggande reflektion och fortfarande kan returnera `null` om ingen egenskap med ett alias.       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering Systeminformation för XAML-typ eller schemainformation för typen."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "Direktivet som du vill hitta alias medlemmen."
    return:
      type: System.Xaml.XamlMember
      description: "Medlemmen alias om hittas. Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  id: LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en enumerable mängd som innehåller alla kopplingsbar egenskaper som exponeras av detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>       Även om <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>returnerar allmänna samlingen detta `Lookup` metoden returnerar en generisk enumerable.</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>       Standardimplementering använder interna CLR reflektion. När <xref:System.Xaml.XamlType.UnderlyingType%2A>är `null`, standardimplementering kan använda <xref:System.Xaml.XamlType.BaseType%2A>, om den är tillgänglig.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Detta anropar LookupAllAttachableMembers rekursivt att försöka hitta en giltig bastyp och returnerar `null` om det finns ingen giltig bastyp.       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering XAML typinformation system eller schemainformation av en typ. En null RETUR ska reserveras för fall där information inte kan fastställas på grund av bristande typen system eller reflektion support. Om en är giltig och reflektion eller andra tekniker som är tillgängliga, men en typ som inte har kopplingsbar medlemmar, ska du i stället returnera en tom <xref:System.Collections.Generic.IEnumerable%601>Ange.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "En enumerable uppsättning som innehåller noll eller fler <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> värden; annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllMembers
  id: LookupAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en enumerable mängd som innehåller alla medlemmar som visas i den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.GetAllMembers%2A>.</xref:System.Xaml.XamlType.GetAllMembers%2A>       Även om <xref:System.Xaml.XamlType.GetAllMembers%2A>returnerar allmänna samlingen detta `Lookup` metoden returnerar en generisk enumerable.</xref:System.Xaml.XamlType.GetAllMembers%2A>       Standardimplementering använder interna CLR reflektion. I de fall där <xref:System.Xaml.XamlType.UnderlyingType%2A>är `null`, standardimplementering kan använda <xref:System.Xaml.XamlType.BaseType%2A>, om den är tillgänglig.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Det här beteendet anropar LookupAllMembers rekursivt att försöka hitta en giltig bastyp och returnerar `null` om det finns ingen giltig bastyp.       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering XAML typinformation system eller schemainformation av en typ. En null RETUR ska reserveras för fall där information inte kan fastställas på grund av bristande typen system eller reflektion support. Om typen är giltigt, är reflektion eller andra tekniker som tillgängliga. Om en typ som inte har medlemmar, ska du i stället returnera en tom <xref:System.Collections.Generic.IEnumerable%601>Ange.</xref:System.Collections.Generic.IEnumerable%601>       Returnera värden för LookupAllMembers och <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>ska inte anges samtidigt.</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> Om du har en situation där en egenskap för säkerhetskopiering system stöder användning av en standard-instans som en kopplingsbar användning medlemmen ska rapporteras som två olika <xref:System.Xaml.XamlMember>värden, med ett värde som visas i listan över kopplingsbar och en annan i listan standard medlemmar.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "En enumerable uppsättning som innehåller noll eller fler <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> värden."
  overload: System.Xaml.XamlType.LookupAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  id: LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en lista över de typer som kan användas som den <xref:System.Xaml.XamlType.ContentProperty*>värdet för den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Xaml.XamlType.ContentProperty*>"
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</xref:System.Xaml.XamlType.AllowedContentTypes%2A>       Typer som utvärderas som <xref:System.Xaml.XamlType.CanAssignTo%2A>för en viss innehållstyp anses inte flera typer för <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</xref:System.Xaml.XamlType.AllowedContentTypes%2A> </xref:System.Xaml.XamlType.CanAssignTo%2A>       Standardimplementering kan använda andra egenskaper för <xref:System.Xaml.XamlType>(<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, eller <xref:System.Xaml.XamlType.ItemType%2A>) att hämta ett resultat.</xref:System.Xaml.XamlType.ItemType%2A> </xref:System.Xaml.XamlType.ContentProperty%2A> </xref:System.Xaml.XamlType.ContentWrappers%2A> </xref:System.Xaml.XamlType> Den `Lookup` åsidosättningar för föregående egenskapslistan kan även aktiveras i den bedömningen.       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering XAML typinformation system eller schemainformation av en typ."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupAllowedContentTypes ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En lista över möjliga typer av innehåll."
  overload: System.Xaml.XamlType.LookupAllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  id: LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> för en specifik namnet kopplingsbar från den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</xref:System.Xaml.XamlType.GetAttachableMember%2A>       Standardimplementering använder interna CLR reflektion. När <xref:System.Xaml.XamlType.UnderlyingType%2A>är `null`, standardimplementering kan använda <xref:System.Xaml.XamlType.BaseType%2A>, om den är tillgänglig.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Detta anropar LookupAttachableMember rekursivt att försöka hitta en giltig bastyp och returnerar `null` om det finns ingen giltig bastyp.       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering XAML typinformation system eller schemainformation av en typ.      > [!IMPORTANT] > LookupAttachableMember är virtuell och därför kan åsidosättas. Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra rapporterade medlemmarna i en XAML-typ så att de inte längre placeras i ett förväntat sätt med den <xref:System.ComponentModel.TypeDescriptor> `Get*` information om den underliggande CLR-typen.</xref:System.ComponentModel.TypeDescriptor> Använd den underliggande CLR-typen i stället för alla kritiska kontroller för medlem reporting."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den kopplingsbara medlemmen att hämta i `ownerTypeName.MemberName` formuläret."
    return:
      type: System.Xaml.XamlMember
      description: "En <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt för den begärda bifogbar medlemmen, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om det finns inga bifogbar medlem med det namnet."
  overload: System.Xaml.XamlType.LookupAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupBaseType
  id: LookupBaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> för omedelbar bastypen för den här typen i XAML. Bestämning av det här värdet är baserad på den underliggande typen av denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref> och schema-kontext."
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.BaseType%2A>.</xref:System.Xaml.XamlType.BaseType%2A>       Standardimplementering kan returnera ett internt konstant som representerar den <xref:System.Object>om <xref:System.Xaml.XamlType.UnderlyingType%2A>är `null`.</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Object>       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering XAML typinformation system eller schemainformation av en typ.      > [!IMPORTANT] > LookupBaseType är virtuell och därför kan åsidosättas. Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra rapporterade typinformation om en XAML-typ så att den inte längre justeras i ett förväntat sätt med Systeminformation typ av dess underliggande CLR-typen. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av tilldelning åtgärder och åtkomst."
  syntax:
    content: protected virtual System.Xaml.XamlType LookupBaseType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> för omedelbar bastypen för den här typen i XAML."
  overload: System.Xaml.XamlType.LookupBaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCollectionKind
  id: LookupCollectionKind
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde för den <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref> uppräkning som förklarar vilken specifik samling skriver du detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> använder."
  remarks: "Den här metoden anropas av ett internt privat metod (ingen offentlig `CollectionKind` eller `GetCollectionKind` API finns på <xref:System.Xaml.XamlType>).</xref:System.Xaml.XamlType>       Standardimplementering använder interna CLR reflektion. I de fall där <xref:System.Xaml.XamlType.UnderlyingType%2A>är `null`, standardimplementering kan använda <xref:System.Xaml.XamlType.BaseType%2A>, om den är tillgänglig.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Det här beteendet anropar indirekt LookupCollectionKind rekursivt att försöka hitta en giltig bastyp; den returnerar <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>om det finns ingen giltig bastyp.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> I allmänhet standardimplementering försök att hitta den `Add` metod för den underliggande typen av reflektion. Om att hitta den <xref:System.Reflection.MethodInfo>av den `Add` metoden är tillräckligt med information för att avgöra vilka <xref:System.Xaml.Schema.XamlCollectionKind>värdet ska returneras.</xref:System.Xaml.Schema.XamlCollectionKind> </xref:System.Reflection.MethodInfo> Annars returneras <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering XAML typinformation system eller schemainformation av en typ."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlCollectionKind
      description: "Ett värde för den <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref> uppräkning."
  overload: System.Xaml.XamlType.LookupCollectionKind*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  id: LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> måste ha argument (allmänna begränsningar via <xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;> </xref>, initiering text eller andra tekniker för XAML) att skapa en giltig instans av typen."
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>       Standardimplementering returnerar `false` Skriv system för anses vara värdetyper i CLR-typer. För andra än värdetyper, CLR reflektion <xref:System.Reflection.ConstructorInfo>används för att avgöra om det finns en standardkonstruktor.</xref:System.Reflection.ConstructorInfo>       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering XAML typinformation system eller schemainformation av en typ."
  syntax:
    content: protected virtual bool LookupConstructionRequiresArguments ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om konstruktionen av en instans kräver vissa argumentvärdet; Annars, FALSKT."
  overload: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentProperty
  id: LookupContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> information för egenskapen innehåll för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.ContentProperty%2A>.</xref:System.Xaml.XamlType.ContentProperty%2A>       Standardimplementering söker efter <xref:System.Windows.Markup.ContentPropertyAttribute>på typdefinitionen.</xref:System.Windows.Markup.ContentPropertyAttribute> Det kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Om de här kontrollerna inte identifiera en innehållstyp, standardimplementering returnerar `null`.       Åsidosätta den här metoden om du inte förlita dig på standard internt CLR reflektion och använder metadata eller andra tekniker för rapportering XAML typinformation system eller schemainformation av en typ."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupContentProperty ();
    parameters: []
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>information för egenskapen innehåll för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>. May be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentWrappers
  id: LookupContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en lista över <xref href=&quot;System.Xaml.XamlType&quot;> </xref> värden som representerar innehåll omslutningar för den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "En innehåll omslutning är en klass som representerar innehåll Samlingstypen när de typer som används i samlingen inte sammanhängande till typsystemet. Typer av samlingsobjekt för innehåll wrapper förväntas vara begränsad på vissa sätt utöver <xref:System.Object>eller ett neutralt motsvarande objekt.</xref:System.Object> Den här begränsningen används endast av design eller syftet med de egenskaper som använder den typen och inte av typen system. Flera innehåll wrapper kan finnas i en typ.       En exempelklass och scenario från WPF XAML-implementering finns <xref:System.Windows.Documents.InlineCollection>.</xref:System.Windows.Documents.InlineCollection>"
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupContentWrappers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En lista över <xref href=&quot;System.Xaml.XamlType&quot;> </xref> värden som representerar innehåll omslutningar för den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Implementeras i en härledd klass returnerar ett <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementering."
  remarks: "Åsidosätta den här metoden för att tillhandahålla interna reflektion med ett annat sätt att hämta CLR-attributvärden. Saknas en åsidosättning använder den interna reflector vanliga CLR reflektion logik.       Standardimplementering returnerar `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "En <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementering."
  overload: System.Xaml.XamlType.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objekt som används för uppskjuten inläsning av XAML-deklarerats objekt."
  remarks: "Den här metoden kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlType.DeferringLoader%2A>.</xref:System.Xaml.XamlType.DeferringLoader%2A> Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.DeferringLoader%2A>att returnera ett annat värde än vad som är aktiverad som standard interna reflektion och tillhandahåller även anpassade <xref:System.Xaml.Schema.XamlTypeInvoker>information.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType.DeferringLoader%2A>       Standardimplementering returnerar ett objekt på grundval av läsning <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</xref:System.Windows.Markup.XamlDeferLoadAttribute> Det kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Om ett värde är inte tillgänglig, den här metoden returnerar `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som har en <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> allmänna villkor."
  overload: System.Xaml.XamlType.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> som är associerad med den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.Invoker%2A>.</xref:System.Xaml.XamlType.Invoker%2A>       Standardimplementering inte kräver att en <xref:System.Xaml.XamlType>konstrueras med hjälp av någon av konstruktorer som skickar ett inledande <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> Men en <xref:System.Xaml.XamlType.UnderlyingType%2A>värde måste finnas för den <xref:System.Xaml.XamlType>, annars returnerar standardimplementering `null`.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A>       Åsidosätta den här metoden om du också skapa en härledd klass från <xref:System.Xaml.Schema.XamlTypeInvoker>och planerar att returnera härledd klass.</xref:System.Xaml.Schema.XamlTypeInvoker> Om du återgår `null`, <xref:System.Xaml.XamlType.Invoker%2A>returnerar <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>till anropare.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlType.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> information för den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en ambient typ. enligt XAML-definitionen."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsAmbient%2A>.</xref:System.Xaml.XamlType.IsAmbient%2A>       Standardimplementering använder CLR reflektion på den <xref:System.Xaml.XamlType.UnderlyingType%2A>och kan kontrollera bastyperna.</xref:System.Xaml.XamlType.UnderlyingType%2A> Den här implementeringen söker efter den <xref:System.Windows.Markup.AmbientAttribute>som tillämpas på relevanta typen definition på klassnivå och returnerar `true` i det här fallet.</xref:System.Windows.Markup.AmbientAttribute> Alla andra fall returnera `false`.       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsAmbient%2A>att returnera ett annat värde än vad som är aktiverad som standard interna reflektion.</xref:System.Xaml.XamlType.IsAmbient%2A>"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en ambient typ., annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsConstructible
  id: LookupIsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en constructible typ, enligt XAML-definitionen."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsConstructible%2A>.</xref:System.Xaml.XamlType.IsConstructible%2A>       Standardimplementering använder CLR reflektion <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> Typen måste vara konkreta, icke-kapslad och stängd. Standardimplementering kontrollerar om typen är en värdetyp och avkastning av <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A> För en null- <xref:System.Xaml.XamlType.UnderlyingType%2A>, den här metoden returnerar `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsConstructible%2A>att returnera ett annat värde än vad som är aktiverad som standard interna reflektion.</xref:System.Xaml.XamlType.IsConstructible%2A>"
  syntax:
    content: protected virtual bool LookupIsConstructible ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en constructible, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  id: LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar ett markeringstillägg."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>       Standardimplementering består bara av det här anropet: `return CanAssignTo(XamlLanguage.MarkupExtension);` åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsMarkupExtension%2A>att använda olika logik.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>       Den här typen i XAML-specifikationen villkor måste kunna tilldelas till `x:MarkupExtension` för att returnera `true` för <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>"
  syntax:
    content: protected virtual bool LookupIsMarkupExtension ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar ett markeringstillägg, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNameScope
  id: LookupIsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en XAML-namescope enligt XAML-definitionen."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsNameScope%2A>.</xref:System.Xaml.XamlType.IsNameScope%2A>       Standardimplementering gör en <xref:System.Xaml.XamlType.CanAssignTo%2A>indirekt mot typen <xref:System.Windows.Markup.INameScope>.</xref:System.Windows.Markup.INameScope> anropa</xref:System.Xaml.XamlType.CanAssignTo%2A> <xref:System.Windows.Markup.INameScope>är ett gränssnitt som har definierats i sammansättningen WindowsBase.</xref:System.Windows.Markup.INameScope> Den här tekniken för identifiering av XAML namescope används både av WPF och [!INCLUDE[TLA#tla_workflow](~/add/includes/tlasharptla-workflow-md.md)] implementeringar av XAML.       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsNameScope%2A>att använda olika logik.</xref:System.Xaml.XamlType.IsNameScope%2A>       En XAML-namescope tillämpar namn är unikt för den eller de egenskaper som används för `x:Name`  /  `[name property]`. Om <xref:System.Xaml.XamlType.IsNameScope%2A>är `true`, och sedan någon mekanism för att genomdriva unikhet ska finnas och bör utvärdera ur den här typen som äger en XAML-namescope.</xref:System.Xaml.XamlType.IsNameScope%2A> XAML-namescope utökar sedan till innehåll av typen tills en annan XAML namescope ägande typ har påträffats."
  syntax:
    content: protected virtual bool LookupIsNameScope ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en XAML-namescope, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNullable
  id: LookupIsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en nullbar typ i XAML-definitionen."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsNullable%2A>.</xref:System.Xaml.XamlType.IsNullable%2A>       Standardimplementering gör en bestämning baserat på CLR-biblioteket kan ha värdet null huvudsyftena, kontrolleras mot <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> För en null- <xref:System.Xaml.XamlType.UnderlyingType%2A>, returneras `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsNullable%2A>att använda olika logik.</xref:System.Xaml.XamlType.IsNullable%2A>"
  syntax:
    content: protected virtual bool LookupIsNullable ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en nullbar typ, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsPublic
  id: LookupIsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en offentlig typ i det relevanta typsystemet."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsPublic%2A>.</xref:System.Xaml.XamlType.IsPublic%2A>       Standardimplementering använder CLR reflektion mot en icke-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> För en null- <xref:System.Xaml.XamlType.UnderlyingType%2A>, returneras `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsPublic%2A>att använda olika logik.</xref:System.Xaml.XamlType.IsPublic%2A>      > [!IMPORTANT] > LookupIsPublic är virtuell och därför kan åsidosättas. Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra rapporterade access information om en XAML-typ så att den inte längre justeras i ett förväntat sätt med typinformation för system- eller åtkomst av dess underliggande CLR-typen. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av tilldelning åtgärder och åtkomst."
  syntax:
    content: protected virtual bool LookupIsPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en offentlig typ, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en typ som inte kan matchas i underliggande typsystemet."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsUnknown%2A>.</xref:System.Xaml.XamlType.IsUnknown%2A>       Standardimplementering kan använda CLR reflektion. För en null- <xref:System.Xaml.XamlType.UnderlyingType%2A>, returneras `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsUnknown%2A>att använda olika logik.</xref:System.Xaml.XamlType.IsUnknown%2A>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en nonresolvable, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  id: LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en stor samling i blanksteg, enligt XML-definitionen."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>       Standardimplementering returnerar ett värde baserat på läsning <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute> Det kan också kontrollera den <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Om ett värde inte är tillgänglig, den returnerar `false`.       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>att använda olika logik.</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>"
  syntax:
    content: protected virtual bool LookupIsWhitespaceSignificantCollection ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en betydande tomt utrymme samling, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsXData
  id: LookupIsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar XML <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>, som per XAML-definitionen."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsXData%2A>.</xref:System.Xaml.XamlType.IsXData%2A>       Standardimplementering gör en <xref:System.Xaml.XamlType.CanAssignTo%2A>indirekt mot typen <xref:System.Xml.Serialization.IXmlSerializable>.</xref:System.Xml.Serialization.IXmlSerializable> anropa</xref:System.Xaml.XamlType.CanAssignTo%2A>       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsXData%2A>att använda olika logik.</xref:System.Xaml.XamlType.IsXData%2A>"
  syntax:
    content: protected virtual bool LookupIsXData ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupIsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupItemType
  id: LookupItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som innehåller informationen för den <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> -egenskapen för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.ItemType%2A>.</xref:System.Xaml.XamlType.ItemType%2A>       Standardimplementering kan använda CLR reflektion begrepp, till exempel söker efter en `Add` metod <xref:System.Reflection.MethodInfo>och använder den <xref:System.Reflection.ParameterInfo>; kontrollerar <xref:System.Xaml.XamlType.IsArray%2A>; och kontrollera <xref:System.Xaml.XamlType.BaseType%2A>och försök den samma logiken.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.IsArray%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MethodInfo>       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.ItemType%2A>att använda olika logik.</xref:System.Xaml.XamlType.ItemType%2A> Fall då <xref:System.Xaml.XamlType.LookupCollectionKind%2A>returnerar <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>ska returnera `null`.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> </xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupItemType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt för typ av objekt i samlingen, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar inte en samling."
  overload: System.Xaml.XamlType.LookupItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupKeyType
  id: LookupKeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som innehåller typinformation för nyckelegenskapen för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, om den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en ordlista."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.KeyType%2A>.</xref:System.Xaml.XamlType.KeyType%2A>       Standardimplementering kan använda CLR reflektion begrepp, till exempel söker efter en `Add` metod <xref:System.Reflection.MethodInfo>och använder den <xref:System.Reflection.ParameterInfo>; och kontrollera <xref:System.Xaml.XamlType.BaseType%2A>och försök den samma logiken.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MethodInfo>       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.KeyType%2A>att använda olika logik.</xref:System.Xaml.XamlType.KeyType%2A> Fall då <xref:System.Xaml.XamlType.LookupCollectionKind%2A>inte returnerar <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>ska returnera `null`.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> </xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupKeyType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt för typ av nyckel för användning av ordlistan eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar inte en ordlista"
  overload: System.Xaml.XamlType.LookupKeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  id: LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som innehåller informationen för den returnerade <xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;> </xref> av denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, om den utgör ett markeringstillägg."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>       Standardimplementering returnerar en <xref:System.Xaml.XamlType>på grundval av läsning <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> </xref:System.Xaml.XamlType> Det kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Om ett värde inte är tillgänglig, den returnerar `null`.       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>att använda olika logik.</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt för returtypen för användning i tillägg markup; annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar inte ett markeringstillägg."
  overload: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  id: LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> för en viss namngiven medlemmen från den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.GetMember%2A>.</xref:System.Xaml.XamlType.GetMember%2A>       Standardimplementering returnerar en <xref:System.Xaml.XamlType>baserat på den interna CLR reflektion och utvärdering mot schema-kontexten.</xref:System.Xaml.XamlType>       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.GetMember%2A>att använda olika logik.</xref:System.Xaml.XamlType.GetMember%2A>      > [!IMPORTANT] > LookupMember är virtuell och därför kan åsidosättas. Åsidosättningen som har potential (om för skadliga syften eller på annat sätt) Ändra rapporterade medlemmarna i en XAML-typ så att de inte längre placeras i ett förväntat sätt med den <xref:System.ComponentModel.TypeDescriptor> `Get*` information om den underliggande CLR-typen.</xref:System.ComponentModel.TypeDescriptor> Använd den underliggande CLR-typen i stället för alla kritiska kontroller för medlem reporting."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på medlemmen få (som sträng)."
    - id: skipReadOnlyCheck
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>returnera en medlem, även om medlemmen har en <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> värde för &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt;; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> inte returnera en &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt; medlem. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xaml.XamlMember
      description: "Den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> information för medlem, om en medlem har hittats, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  id: LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "För markup Tilläggstyper returnerar typerna av positionsparametrarna som stöds i användning av en specifik markup tillägget för den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>       Standardimplementering använder interna reflektion information baserat på hitta konstruktorer och kontrollerar aritet. Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.GetPositionalParameters%2A>att använda olika logik.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>       Detta API är bara relevant om den här <xref:System.Xaml.XamlType>representerar markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> är `true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       Indata `parameterCount` är inte för att begära en specifik namngivna parametertyp. Det är för att ange ariteten för användning av tillägget en markering. Markup tillägget användning ofta har flera signaturer och annan aritet (antal) av positionsparametrarna att skilja mellan. Du kan dock konfigurera en schema-kontext för att tillåta dubbla arities och använda typer av positionsparametrarna för skillnad. Mer information finns i <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> För ett antal specifika aritet, kan parameterpositioner och typer variera. För att få den namngivna typ av specifika aritet markup tillägget användning måste du först anropa <xref:System.Xaml.XamlType.GetPositionalParameters%2A>med antalet aritet.</xref:System.Xaml.XamlType.GetPositionalParameters%2A> Sedan hämta objektet på den positionen från en samling som returnerade."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Antalet (aritet) viss syntax eller konstruktorn läge som du vill ha information om."
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En lista över <xref href=&quot;System.Xaml.XamlType&quot;> </xref> värden där varje sådan <xref href=&quot;System.Xaml.XamlType&quot;> </xref> är av typ för detta läge i syntax. Du måste ange dessa typer i samma ordning när du anger markup indata för markeringstillägget."
  overload: System.Xaml.XamlType.LookupPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  id: LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en hanterare motringning ska användas för set-driften av markeringstillägg."
  remarks: "Standardimplementering returnerar ett värde baserat på läsning <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> Det kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Om ett värde är inte tillgänglig, den returnerar `null`."
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> LookupSetMarkupExtensionHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: "En hanterare motringning ska användas för set-driften av markeringstillägg."
  overload: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  id: LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en hanterare för typkonverterare inställningen fall."
  remarks: "Standardimplementering returnerar ett värde baserat på läsning <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</xref:System.Windows.Markup.XamlSetTypeConverterAttribute> Det kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Om ett värde är inte tillgänglig, den returnerar `null`."
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> LookupSetTypeConverterHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: "En hanterare för typkonverterare inställningen fall."
  overload: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  id: LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> ska serialiseras i ett läge som klipper omgivande blanksteg."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>       Standardimplementering returnerar ett värde baserat på läsning <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute> Det kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Om ett värde är inte tillgänglig, den returnerar `false`."
  syntax:
    content: protected virtual bool LookupTrimSurroundingWhitespace ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> ska vara serialiserade i ett läge som klipper omgivande blanksteg, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som har en <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begränsning, som representerar typkonvertering beteendet för värden i denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.TypeConverter%2A>.</xref:System.Xaml.XamlType.TypeConverter%2A>       Standardimplementering returnerar ett värde baserat på läsning <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Standardimplementering kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Den omfattar också speciell logik för standardkonvertering av uppräkningar, vanliga värdetyper och generiska typer. Om ett värde är inte tillgänglig, den returnerar `null`.       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.TypeConverter%2A>att använda olika logik.</xref:System.Xaml.XamlType.TypeConverter%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begränsning som representerar typkonvertering beteendet för värden i denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUnderlyingType
  id: LookupUnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar CLR <xref:System.Type>som ligger till grund för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Standardimplementering returnerar ett internt fält. Fältet initieras vanligtvis under konstruktionen och dess värde baserat på vilka konstruktorn anropades och den information som du angav.       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.UnderlyingType%2A>att använda olika logik.</xref:System.Xaml.XamlType.UnderlyingType%2A>"
  syntax:
    content: protected virtual Type LookupUnderlyingType ();
    parameters: []
    return:
      type: System.Type
      description: "CLR <xref:System.Type>som ligger till grund för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Xaml.XamlType.LookupUnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  id: LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> bygger uppifrån och ned under XAML-initieringen."
  remarks: "Uppifrån och ned är en metafor som uppskattar XAML processor beteende när den skapar objektdiagrammet. När inbyggt uppifrån och ned, har en typ instansierad, kopplade till överordnat och dess egenskaper. Uppifrån och ned konstruktionen undviker att ändra egenskapen hanterare anropas flera gånger. Denna hantering ripples in objektdiagrammet och därför eliminerar flera anrop till händelsehanteraren och ger en prestandaoptimering för start av objektdiagrammet.       Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>       Standardimplementering returnerar ett värde baserat på läsning <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</xref:System.Windows.Markup.UsableDuringInitializationAttribute> Det kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Om ett värde är inte tillgänglig, den returnerar `false`.       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>att använda olika logik.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>"
  syntax:
    content: protected virtual bool LookupUsableDuringInitialization ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> bygger uppifrån och ned under initieringen i XAML, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som har en <xref:System.Windows.Markup.ValueSerializer>begränsning, som representerar värdet serialisering beteende för värden i denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  remarks: "Den här metoden kan anropas av anrop till <xref:System.Xaml.XamlType.ValueSerializer%2A>.</xref:System.Xaml.XamlType.ValueSerializer%2A>       Standardimplementering returnerar ett värde baserat på läsning <xref:System.Windows.Markup.ValueSerializerAttribute>.</xref:System.Windows.Markup.ValueSerializerAttribute> Det kan också kontrollera <xref:System.Xaml.XamlType.BaseType%2A>för attributet om inget attribut hittas på den underliggande typen omedelbar.</xref:System.Xaml.XamlType.BaseType%2A> Den omfattar också speciell logik för standard-serialisering av uppräkningar, vanliga värdetyper eller generisk. Om ett värde är inte tillgänglig, den returnerar `null`.       Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlType.ValueSerializer%2A>att använda olika logik.</xref:System.Xaml.XamlType.ValueSerializer%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref:System.Windows.Markup.ValueSerializer>begränsning som representerar värdet serialisering beteende för värden i denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlType.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  id: MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som innehåller informationen för den returnerade <xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;> </xref> av denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, om den utgör ett markeringstillägg."
  remarks: "Den här egenskapen gäller endast om den här <xref:System.Xaml.XamlType>representerar markup extension (`x:MarkupExtension` i listan kan tilldelas typer).</xref:System.Xaml.XamlType>       Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>på den här typen.</xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>"
  syntax:
    content: public System.Xaml.XamlType MarkupExtensionReturnType { get; }
    return:
      type: System.Xaml.XamlType
      description: "En <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt för returtypen för användning i tillägg markup; annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar inte ett markeringstillägg."
  overload: System.Xaml.XamlType.MarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Name
  id: Name
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar namnet av typen sträng som detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar."
  remarks: "Den här egenskapen får vanligtvis konstrueras schema-namn (per den <xref:System.Xaml.XamlType.%23ctor%2A>signatur), eller namnet på den <xref:System.Type>, om den har skapats med hjälp av relevanta konstruktorn av CLR-typsystemet.</xref:System.Type> </xref:System.Xaml.XamlType.%23ctor%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Namnet på den här typen av XAML sträng."
  overload: System.Xaml.XamlType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anger om två angivna <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt har samma värde."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om värdet för <code> xamlType1 </code> är detsamma som värdet för <code> xamlType2 </code>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anger om två angivna <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt har olika värden."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om värdet för <code> xamlType1 </code> skiljer sig från värdet för <code> xamlType2 </code>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar det enda XAML-namnområdet som är det primära XAML-namnområdet för denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Den här implementeringen innehåller samma värde som anropar <xref:System.Xaml.XamlType.GetXamlNamespaces%2A>och hämtar sedan den första Värdesträngen uppsättningen returnerade enumerable.</xref:System.Xaml.XamlType.GetXamlNamespaces%2A>"
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "ID som en sträng med primära XAML-namnområdet för den här typen i XAML."
  overload: System.Xaml.XamlType.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar aktivt <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> för bearbetning av detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlSchemaContext>är en obligatorisk parameter-post när man skapar en <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType></xref:System.Xaml.XamlSchemaContext>"
  syntax:
    content: public System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "Aktivt <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> för bearbetning av detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ToString
  id: ToString
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en strängrepresentation av det här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlType>Implementering av <xref:System.Object.ToString%2A>returnerar <xref:System.Xaml.XamlType.Name%2A>egenskapen i <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.Name%2A> </xref:System.Object.ToString%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En strängrepresentation av det här <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  id: TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref> har blanksteg hantera beteendet för serialisering som klipper omgivande blanksteg i dess innehåll."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>på den här typen.</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>"
  syntax:
    content: public bool TrimSurroundingWhitespace { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en typ som använder blanksteg trimma, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.TrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeArguments
  id: TypeArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en lista över typargument i de fall där det <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar en generisk."
  remarks: "Det finns vissa scenarier för en <xref:System.Xaml.XamlType>där anropar parametern TypeArguments returnerar en lista där de är fortfarande öppen.</xref:System.Xaml.XamlType> I det här fallet, en eller flera av de returnerade <xref:System.Xaml.XamlType>värden har platshållarvärdena för <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>, som `T`, för att representera att allmänna fortfarande är öppen.</xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName> </xref:System.Xaml.XamlType> Den här situationen kan uppstå om du får en <xref:System.Xaml.XamlType>vid ett anrop till <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, i stället för från en implementering för XAML-läsaren.</xref:System.Xaml.XamlSchemaContext.GetXamlType%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> TypeArguments { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "En lista över typen Argumenttyperna; Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den här <xref href=&quot;System.Xaml.XamlType&quot;> </xref> representerar inte generisk."
  overload: System.Xaml.XamlType.TypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begränsningen representerar skriver konvertering beteende för värden i denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupTypeConverter%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupTypeConverter%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupTypeConverter%2A>på den här typen.</xref:System.Xaml.XamlType.LookupTypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begränsningen representerar skriver konvertering beteende för värden i denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.UnderlyingType
  id: UnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar CLR <xref:System.Type>som ligger till grund för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  syntax:
    content: public Type UnderlyingType { get; }
    return:
      type: System.Type
      description: "CLR <xref:System.Type>som ligger till grund för detta <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  overload: System.Xaml.XamlType.UnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref:System.Windows.Markup.ValueSerializer>begränsning som representerar värdet serialisering beteende för värden i denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  remarks: "Om du inte använder standard internt CLR reflektion tekniken för en <xref:System.Xaml.XamlType>, anrop till den här egenskapen kan anropa <xref:System.Xaml.XamlType.LookupValueSerializer%2A>åsidosätter på <xref:System.Xaml.XamlType>härledda klasser.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupValueSerializer%2A> </xref:System.Xaml.XamlType> Mer information om returvärden och andra problem finns i dokumentationen för <xref:System.Xaml.XamlType.LookupValueSerializer%2A>på den här typen.</xref:System.Xaml.XamlType.LookupValueSerializer%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref:System.Windows.Markup.ValueSerializer>begränsning som representerar värdet serialisering beteende för värden i denna <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlType.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.Xaml.XamlType}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlType>
  nameWithType: IList<XamlType>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
- uid: System.Xaml.XamlType.AllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlType.ContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Equals(System.Object)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XamlMember>
  nameWithType: ICollection<XamlMember>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.GetAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
- uid: System.Xaml.XamlType.GetHashCode
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlType.GetMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
- uid: System.Xaml.XamlType.GetXamlNamespaces
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Invoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
- uid: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlMember>
  nameWithType: IEnumerable<XamlMember>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
- uid: System.Xaml.XamlType.LookupBaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
- uid: System.Xaml.XamlType.LookupCollectionKind
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
- uid: System.Xaml.Schema.XamlCollectionKind
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlCollectionKind
  nameWithType: XamlCollectionKind
  fullName: System.Xaml.Schema.XamlCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
- uid: System.Xaml.XamlType.LookupContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
- uid: System.Xaml.XamlType.LookupContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
- uid: System.Xaml.XamlType.LookupInvoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
- uid: System.Xaml.XamlType.LookupIsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
- uid: System.Xaml.XamlType.LookupIsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
- uid: System.Xaml.XamlType.LookupIsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
- uid: System.Xaml.XamlType.LookupIsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
- uid: System.Xaml.XamlType.LookupIsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
- uid: System.Xaml.XamlType.LookupIsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
- uid: System.Xaml.XamlType.LookupIsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
- uid: System.Xaml.XamlType.LookupItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
- uid: System.Xaml.XamlType.LookupKeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
- uid: System.Xaml.XamlType.LookupTypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupUnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
- uid: System.Xaml.XamlType.LookupValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
- uid: System.Xaml.XamlType.#ctor*
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType
  nameWithType: XamlType.XamlType
- uid: System.Xaml.XamlType.AllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
- uid: System.Xaml.XamlType.CanAssignTo*
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo
  nameWithType: XamlType.CanAssignTo
- uid: System.Xaml.XamlType.ConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
- uid: System.Xaml.XamlType.ContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
- uid: System.Xaml.XamlType.Equals*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals
  nameWithType: XamlType.Equals
- uid: System.Xaml.XamlType.GetAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty
  nameWithType: XamlType.GetAliasedProperty
- uid: System.Xaml.XamlType.GetAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers
  nameWithType: XamlType.GetAllAttachableMembers
- uid: System.Xaml.XamlType.GetAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers
  nameWithType: XamlType.GetAllMembers
- uid: System.Xaml.XamlType.GetAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember
  nameWithType: XamlType.GetAttachableMember
- uid: System.Xaml.XamlType.GetHashCode*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode
  nameWithType: XamlType.GetHashCode
- uid: System.Xaml.XamlType.GetMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember
  nameWithType: XamlType.GetMember
- uid: System.Xaml.XamlType.GetPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters
  nameWithType: XamlType.GetPositionalParameters
- uid: System.Xaml.XamlType.GetXamlNamespaces*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlType.GetXamlNamespaces
- uid: System.Xaml.XamlType.Invoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty
  nameWithType: XamlType.LookupAliasedProperty
- uid: System.Xaml.XamlType.LookupAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers
  nameWithType: XamlType.LookupAllAttachableMembers
- uid: System.Xaml.XamlType.LookupAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers
  nameWithType: XamlType.LookupAllMembers
- uid: System.Xaml.XamlType.LookupAllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes
  nameWithType: XamlType.LookupAllowedContentTypes
- uid: System.Xaml.XamlType.LookupAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember
  nameWithType: XamlType.LookupAttachableMember
- uid: System.Xaml.XamlType.LookupBaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType
  nameWithType: XamlType.LookupBaseType
- uid: System.Xaml.XamlType.LookupCollectionKind*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind
  nameWithType: XamlType.LookupCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments
  nameWithType: XamlType.LookupConstructionRequiresArguments
- uid: System.Xaml.XamlType.LookupContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty
  nameWithType: XamlType.LookupContentProperty
- uid: System.Xaml.XamlType.LookupContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers
  nameWithType: XamlType.LookupContentWrappers
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlType.LookupCustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlType.LookupDeferringLoader
- uid: System.Xaml.XamlType.LookupInvoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlType.LookupInvoker
- uid: System.Xaml.XamlType.LookupIsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlType.LookupIsAmbient
- uid: System.Xaml.XamlType.LookupIsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible
  nameWithType: XamlType.LookupIsConstructible
- uid: System.Xaml.XamlType.LookupIsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension
  nameWithType: XamlType.LookupIsMarkupExtension
- uid: System.Xaml.XamlType.LookupIsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope
  nameWithType: XamlType.LookupIsNameScope
- uid: System.Xaml.XamlType.LookupIsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable
  nameWithType: XamlType.LookupIsNullable
- uid: System.Xaml.XamlType.LookupIsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic
  nameWithType: XamlType.LookupIsPublic
- uid: System.Xaml.XamlType.LookupIsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlType.LookupIsUnknown
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.LookupIsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData
  nameWithType: XamlType.LookupIsXData
- uid: System.Xaml.XamlType.LookupItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType
  nameWithType: XamlType.LookupItemType
- uid: System.Xaml.XamlType.LookupKeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType
  nameWithType: XamlType.LookupKeyType
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType
  nameWithType: XamlType.LookupMarkupExtensionReturnType
- uid: System.Xaml.XamlType.LookupMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember
  nameWithType: XamlType.LookupMember
- uid: System.Xaml.XamlType.LookupPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters
  nameWithType: XamlType.LookupPositionalParameters
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler
  nameWithType: XamlType.LookupSetMarkupExtensionHandler
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler
  nameWithType: XamlType.LookupSetTypeConverterHandler
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace
  nameWithType: XamlType.LookupTrimSurroundingWhitespace
- uid: System.Xaml.XamlType.LookupTypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlType.LookupTypeConverter
- uid: System.Xaml.XamlType.LookupUnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType
  nameWithType: XamlType.LookupUnderlyingType
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization
  nameWithType: XamlType.LookupUsableDuringInitialization
- uid: System.Xaml.XamlType.LookupValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlType.LookupValueSerializer
- uid: System.Xaml.XamlType.MarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
- uid: System.Xaml.XamlType.op_Equality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality
  nameWithType: XamlType.op_Equality
- uid: System.Xaml.XamlType.op_Inequality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality
  nameWithType: XamlType.op_Inequality
- uid: System.Xaml.XamlType.PreferredXamlNamespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext*
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString
  nameWithType: XamlType.ToString
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
