### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Discovery.FindCriteria
  id: FindCriteria
  children:
  - System.ServiceModel.Discovery.FindCriteria.#ctor
  - System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)
  - System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria
  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})
  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)
  - System.ServiceModel.Discovery.FindCriteria.Duration
  - System.ServiceModel.Discovery.FindCriteria.Extensions
  - System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)
  - System.ServiceModel.Discovery.FindCriteria.MaxResults
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
  - System.ServiceModel.Discovery.FindCriteria.Scopes
  langs:
  - csharp
  name: FindCriteria
  nameWithType: FindCriteria
  fullName: System.ServiceModel.Discovery.FindCriteria
  type: Class
  summary: "Representerar kriterierna som används vid sökning efter tjänster."
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]med hjälp av FindCriteria och Find-åtgärden finns [identifieringen hitta och FindCriteria](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public class FindCriteria
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: FindCriteria()
  nameWithType: FindCriteria.FindCriteria()
  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria()
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Skapar en ny instans av den <xref href=&quot;System.ServiceModel.Discovery.FindCriteria&quot;> </xref>."
  syntax:
    content: public FindCriteria ();
    parameters: []
  overload: System.ServiceModel.Discovery.FindCriteria.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: FindCriteria(Type)
  nameWithType: FindCriteria.FindCriteria(Type)
  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria(Type)
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Skapar en ny instans av den <xref href=&quot;System.ServiceModel.Discovery.FindCriteria&quot;> </xref> klassen med det angivna namnet för en kontrakttyp."
  syntax:
    content: public FindCriteria (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Namnet på Kontrakttyp för att söka efter."
  overload: System.ServiceModel.Discovery.FindCriteria.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
  id: ContractTypeNames
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ContractTypeNames
  nameWithType: FindCriteria.ContractTypeNames
  fullName: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Hämtar insamling av kontrakt typnamn för att söka efter."
  remarks: "Om mer än ett kontraktnamn anges svarar endast slutpunkter matchar alla kontrakt."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlQualifiedName> ContractTypeNames { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Xml.XmlQualifiedName}
      description: "Typnamnen kontrakt att söka efter."
  overload: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria
  id: CreateMetadataExchangeEndpointCriteria
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: CreateMetadataExchangeEndpointCriteria()
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria()
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Skapar metadata exchange endpoint villkor som ska användas när du söker efter tjänster."
  syntax:
    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria ();
    parameters: []
    return:
      type: System.ServiceModel.Discovery.FindCriteria
      description: "Slutpunkten kriterier för att hitta tjänster."
  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})
  id: CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Skapar ett objekt som innehåller metadata exchange endpoint villkor som har härletts från den angivna samlingen med XML-kvalificerat namn."
  remarks: "En <xref:System.Xml.XmlQualifiedName>är ett namnområde kvalificerade lokalt namn i formatet `namespace:localname`.</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria (System.Collections.Generic.IEnumerable<System.Xml.XmlQualifiedName> contractTypeNames);
    parameters:
    - id: contractTypeNames
      type: System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName}
      description: "En samling uppräkningar som representerar kontraktet typnamn."
    return:
      type: System.ServiceModel.Discovery.FindCriteria
      description: "Slutpunkten kriterier för att hitta tjänster."
  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)
  id: CreateMetadataExchangeEndpointCriteria(System.Type)
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: CreateMetadataExchangeEndpointCriteria(Type)
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Skapar ett objekt som innehåller metadata exchange endpoint villkor härledd från typen angivna kontraktet."
  remarks: "Den <xref:System.ServiceModel.Discovery.FindCriteria>information används för att skapa en slutpunkt som kan söka efter tjänster.</xref:System.ServiceModel.Discovery.FindCriteria>"
  syntax:
    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "En typ av tjänstekontraktet."
    return:
      type: System.ServiceModel.Discovery.FindCriteria
      description: "Slutpunkten kriterier för att hitta tjänster."
  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.Duration
  id: Duration
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: Duration
  nameWithType: FindCriteria.Duration
  fullName: System.ServiceModel.Discovery.FindCriteria.Duration
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Hämtar eller anger en <xref:System.TimeSpan>som anger timeout för åtgärden Sök.</xref:System.TimeSpan>"
  syntax:
    content: public TimeSpan Duration { get; set; }
    return:
      type: System.TimeSpan
      description: "Tidsgränsen för find-åtgärden."
  overload: System.ServiceModel.Discovery.FindCriteria.Duration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.Extensions
  id: Extensions
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: Extensions
  nameWithType: FindCriteria.Extensions
  fullName: System.ServiceModel.Discovery.FindCriteria.Extensions
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Hämtar en uppsättning tillägg i den <xref href=&quot;System.ServiceModel.Discovery.FindCriteria&quot;> </xref> instans."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement> Extensions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Xml.Linq.XElement}
      description: "XML-tillägg."
  overload: System.ServiceModel.Discovery.FindCriteria.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)
  id: IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: IsMatch(EndpointDiscoveryMetadata)
  nameWithType: FindCriteria.IsMatch(EndpointDiscoveryMetadata)
  fullName: System.ServiceModel.Discovery.FindCriteria.IsMatch(EndpointDiscoveryMetadata)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Avgör om en uppsättning villkor matchar den tjänst som beskrivs i den angivna <xref href=&quot;System.ServiceModel.Discovery.EndpointDiscoveryMetadata&quot;> </xref> instans."
  syntax:
    content: public bool IsMatch (System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata);
    parameters:
    - id: endpointDiscoveryMetadata
      type: System.ServiceModel.Discovery.EndpointDiscoveryMetadata
      description: "Metadata för slutpunkt-identifiering som beskriver tjänsten i fråga."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tjänsten matchar villkoret, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Discovery.FindCriteria.IsMatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults
  id: MaxResults
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: MaxResults
  nameWithType: FindCriteria.MaxResults
  fullName: System.ServiceModel.Discovery.FindCriteria.MaxResults
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Hämtar eller anger det maximala antalet svar från find-åtgärden."
  syntax:
    content: public int MaxResults { get; set; }
    return:
      type: System.Int32
      description: "Det maximala antalet svar krävs från find-åtgärden."
  overload: System.ServiceModel.Discovery.FindCriteria.MaxResults*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
  id: ScopeMatchBy
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchBy
  nameWithType: FindCriteria.ScopeMatchBy
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Hämtar eller anger en URI som anger hur scope matchas."
  syntax:
    content: public Uri ScopeMatchBy { get; set; }
    return:
      type: System.Uri
      description: "Den URI som anger hur scope matchas."
  overload: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
  id: ScopeMatchByExact
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByExact
  nameWithType: FindCriteria.ScopeMatchByExact
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Anger att scope matchas med hjälp av gemener (http://schemas.xmlsoap.org/ws/2004/10/discovery/strcmp0) som definieras av den [WS-Discovery-specifikationen](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByExact;
    return:
      type: System.Uri
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
  id: ScopeMatchByLdap
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByLdap
  nameWithType: FindCriteria.ScopeMatchByLdap
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Anger att scope matchas med hjälp av LDAP-metoden (http://schemas.xmlsoap.org/ws/2004/10/discovery/ldap) som definieras av den [WS-Discovery-specifikationen](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByLdap;
    return:
      type: System.Uri
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
  id: ScopeMatchByNone
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByNone
  nameWithType: FindCriteria.ScopeMatchByNone
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Anger att scope ignoreras som definieras av den [WS-Discovery-specifikationen](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByNone;
    return:
      type: System.Uri
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
  id: ScopeMatchByPrefix
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByPrefix
  nameWithType: FindCriteria.ScopeMatchByPrefix
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Anger scope matchas med metoden prefix (http://schemas.xmlsoap.org/ws/2004/10/discovery/rfc2396) som definieras i den [WS-Discovery-specifikationen](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByPrefix;
    return:
      type: System.Uri
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
  id: ScopeMatchByUuid
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByUuid
  nameWithType: FindCriteria.ScopeMatchByUuid
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Anger att scope matchas med hjälp av UUID-metoden (http://schemas.xmlsoap.org/ws/2004/10/discovery/uuid) som definieras av den [WS-Discovery-specifikationen](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByUuid;
    return:
      type: System.Uri
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.Scopes
  id: Scopes
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: Scopes
  nameWithType: FindCriteria.Scopes
  fullName: System.ServiceModel.Discovery.FindCriteria.Scopes
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Hämtar en samling absolut URI: er som representerar omfattningar som används för att söka efter en tjänst."
  remarks: "Om flera scope anges svarar endast slutpunkter matchar alla scope."
  syntax:
    content: public System.Collections.ObjectModel.Collection<Uri> Scopes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Uri}
      description: "En samling absolut URI: er som används för att söka efter en tjänst."
  overload: System.ServiceModel.Discovery.FindCriteria.Scopes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: FindCriteria()
  nameWithType: FindCriteria.FindCriteria()
  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria()
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: FindCriteria(Type)
  nameWithType: FindCriteria.FindCriteria(Type)
  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ContractTypeNames
  nameWithType: FindCriteria.ContractTypeNames
  fullName: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
- uid: System.Collections.ObjectModel.Collection{System.Xml.XmlQualifiedName}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<XmlQualifiedName>
  nameWithType: Collection<XmlQualifiedName>
  fullName: System.Collections.ObjectModel.Collection<System.Xml.XmlQualifiedName>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Xml.XmlQualifiedName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: CreateMetadataExchangeEndpointCriteria()
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria()
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria()
- uid: System.ServiceModel.Discovery.FindCriteria
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: FindCriteria
  nameWithType: FindCriteria
  fullName: System.ServiceModel.Discovery.FindCriteria
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
- uid: System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XmlQualifiedName>
  nameWithType: IEnumerable<XmlQualifiedName>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.XmlQualifiedName>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xml.XmlQualifiedName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: CreateMetadataExchangeEndpointCriteria(Type)
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)
- uid: System.ServiceModel.Discovery.FindCriteria.Duration
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Duration
  nameWithType: FindCriteria.Duration
  fullName: System.ServiceModel.Discovery.FindCriteria.Duration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Discovery.FindCriteria.Extensions
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Extensions
  nameWithType: FindCriteria.Extensions
  fullName: System.ServiceModel.Discovery.FindCriteria.Extensions
- uid: System.Collections.ObjectModel.Collection{System.Xml.Linq.XElement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<XElement>
  nameWithType: Collection<XElement>
  fullName: System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Xml.Linq.XElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: XElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: IsMatch(EndpointDiscoveryMetadata)
  nameWithType: FindCriteria.IsMatch(EndpointDiscoveryMetadata)
  fullName: System.ServiceModel.Discovery.FindCriteria.IsMatch(EndpointDiscoveryMetadata)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Discovery.EndpointDiscoveryMetadata
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: EndpointDiscoveryMetadata
  nameWithType: EndpointDiscoveryMetadata
  fullName: System.ServiceModel.Discovery.EndpointDiscoveryMetadata
- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: MaxResults
  nameWithType: FindCriteria.MaxResults
  fullName: System.ServiceModel.Discovery.FindCriteria.MaxResults
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchBy
  nameWithType: FindCriteria.ScopeMatchBy
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByExact
  nameWithType: FindCriteria.ScopeMatchByExact
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByLdap
  nameWithType: FindCriteria.ScopeMatchByLdap
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByNone
  nameWithType: FindCriteria.ScopeMatchByNone
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByPrefix
  nameWithType: FindCriteria.ScopeMatchByPrefix
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByUuid
  nameWithType: FindCriteria.ScopeMatchByUuid
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
- uid: System.ServiceModel.Discovery.FindCriteria.Scopes
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Scopes
  nameWithType: FindCriteria.Scopes
  fullName: System.ServiceModel.Discovery.FindCriteria.Scopes
- uid: System.Collections.ObjectModel.Collection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Uri>
  nameWithType: Collection<Uri>
  fullName: System.Collections.ObjectModel.Collection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: FindCriteria
  nameWithType: FindCriteria.FindCriteria
- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ContractTypeNames
  nameWithType: FindCriteria.ContractTypeNames
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: CreateMetadataExchangeEndpointCriteria
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria
- uid: System.ServiceModel.Discovery.FindCriteria.Duration*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Duration
  nameWithType: FindCriteria.Duration
- uid: System.ServiceModel.Discovery.FindCriteria.Extensions*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Extensions
  nameWithType: FindCriteria.Extensions
- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: IsMatch
  nameWithType: FindCriteria.IsMatch
- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: MaxResults
  nameWithType: FindCriteria.MaxResults
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchBy
  nameWithType: FindCriteria.ScopeMatchBy
- uid: System.ServiceModel.Discovery.FindCriteria.Scopes*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Scopes
  nameWithType: FindCriteria.Scopes
