### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcConnection
  id: OdbcConnection
  children:
  - System.Data.Odbc.OdbcConnection.#ctor
  - System.Data.Odbc.OdbcConnection.#ctor(System.String)
  - System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.Odbc.OdbcConnection.BeginTransaction
  - System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  - System.Data.Odbc.OdbcConnection.Close
  - System.Data.Odbc.OdbcConnection.ConnectionString
  - System.Data.Odbc.OdbcConnection.ConnectionTimeout
  - System.Data.Odbc.OdbcConnection.CreateCommand
  - System.Data.Odbc.OdbcConnection.CreateDbCommand
  - System.Data.Odbc.OdbcConnection.Database
  - System.Data.Odbc.OdbcConnection.DataSource
  - System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcConnection.Driver
  - System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.Odbc.OdbcConnection.GetSchema
  - System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  - System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  - System.Data.Odbc.OdbcConnection.InfoMessage
  - System.Data.Odbc.OdbcConnection.Open
  - System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  - System.Data.Odbc.OdbcConnection.ServerVersion
  - System.Data.Odbc.OdbcConnection.State
  - System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
  type: Class
  summary: "Representerar en öppen anslutning till en datakälla."
  remarks: "En OdbcConnection-objektet representerar en unik anslutning till en datakälla som skapats med hjälp av en anslutningssträng eller namn på ODBC-datakälla (DSN). Med en klient/server-databas motsvarar den en nätverksanslutning till servern. Beroende på funktioner som stöds av den inbyggda ODBC-drivrutinen, kanske vissa metoder eller egenskaper för ett objekt OdbcConnection inte tillgänglig.       Objektet OdbcConnection använder interna resurser, till exempel ODBC-miljön och anslutningen referenser. Du bör alltid stänga alla öppna OdbcConnection objekt genom att anropa <xref:System.Data.Odbc.OdbcConnection.Close%2A>eller **ta bort** innan OdbcConnection objekt går utanför omfånget eller genom att anslutningen inom en `Using` instruktionen.</xref:System.Data.Odbc.OdbcConnection.Close%2A> Detta inte lämnar frigöra interna resurserna till skräpinsamling. Det kanske inte går att frigöra dem direkt. Detta, i sin tur kan eventuellt kan orsaka den underliggande drivrutinen till slut på resurser eller nå en maxgräns. Detta resulterade i återkommande fel. Du kan till exempel uppstå `Maximum Connections` -relaterade fel när antalet anslutningar som väntar på att tas bort av skräpinsamlingen. Explicit stängning av anslutningarna kan en effektivare användning av interna resurser, förbättrad skalbarhet och förbättra programprestanda.      > [!NOTE] > För att distribuera program med höga prestanda, ofta måste du använda anslutningspooler. Men när du använder .NET Framework-dataprovidern för ODBC, behöver du inte aktivera anslutningspoolen eftersom providern hanterar detta automatiskt.       Om en av de `Execute` metoder för den <xref:System.Data.Odbc.OdbcCommand>klass gör ett allvarligt <xref:System.Data.Odbc.OdbcException>(t.ex, en SQL Server-allvarlighetsgrad nivån 20 eller högre), OdbcConnection kan stänga.</xref:System.Data.Odbc.OdbcException> </xref:System.Data.Odbc.OdbcCommand> Dock kan användaren öppna anslutningen och fortsätta.       Ett program som skapar en instans av objektet OdbcConnection kan kräva direkta och indirekta anropare att ha behörighet att koden genom att inställningen deklarativ eller tvingande säkerhet krav. OdbcConnection skapar krav för säkerhet genom att använda den <xref:System.Data.Odbc.OdbcPermission>objekt.</xref:System.Data.Odbc.OdbcPermission> Användarna kan kontrollera att koden har behörighet genom att använda den <xref:System.Data.Odbc.OdbcPermissionAttribute>objekt.</xref:System.Data.Odbc.OdbcPermissionAttribute> Användare och administratörer kan också använda koden åtkomst säkerhetsverktyget Policy (Caspol.exe) för att ändra säkerhetsprinciper på datorn, användare och enterprise-nivåer. Mer information finns i [Code Access Security och ADO.NET](~/add/includes/ajax-current-ext-md.md).       Mer information om hur du hanterar varnings- och informativa meddelanden från datakällan finns [Anslutningshändelser](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcCommand> and an OdbcConnection. The OdbcConnection is opened and set as the <xref:System.Data.Odbc.OdbcCommand.Connection%2A> property. The example then calls <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OdbcConnection#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class OdbcConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: OdbcConnection()
  nameWithType: OdbcConnection.OdbcConnection()
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> klass."
  remarks: "När en ny instans av <xref:System.Data.Odbc.OdbcConnection>skapas den lässkyddad och skrivskyddade egenskaper anges till följande ursprungliga värden om de har angetts med hjälp av deras associerade nyckelord i den <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>egenskapen.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>| tom sträng (&quot;&quot;) |   | <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.Odbc.OdbcConnection.Database%2A>| tom sträng (&quot;&quot;) |       Du kan ändra värdet för dessa egenskaper genom att använda den <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>egenskapen.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection.Database%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_9_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_9_1.vb)]"
  syntax:
    content: public OdbcConnection ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: OdbcConnection(String)
  nameWithType: OdbcConnection.OdbcConnection(String)
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> klass med den angivna anslutningssträngen."
  remarks: "När en ny instans av <xref:System.Data.Odbc.OdbcConnection>skapas den lässkyddad och skrivskyddade egenskaper anges till följande ursprungliga värden om de har angetts med hjälp av deras associerade nyckelord i den <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>egenskapen.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.Odbc.OdbcConnection.Database%2A>| tom sträng (&quot;&quot;) |       Du kan ändra värdet för dessa egenskaper genom att använda den <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>egenskapen.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection.Database%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-vb[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: public OdbcConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Anslutningen används för att öppna datakällan."
  overload: System.Data.Odbc.OdbcConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Som ska läggas till."
    return:
      type: System.Data.Common.DbTransaction
      description: "Som ska läggas till."
  overload: System.Data.Odbc.OdbcConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OdbcConnection.BeginTransaction()
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Startar en transaktion i datakällan."
  remarks: "Om du vill allokera eller återställa transaktionen, måste du uttryckligen använda den <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>eller <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>metoder.</xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> </xref:System.Data.Odbc.OdbcTransaction.Commit%2A>       Kontrollera att .NET Framework-dataprovidern för ODBC-transaktion Hanteringsmodellen utförs korrekt, Undvik att använda andra modeller för transaktion, till exempel de som tillhandahålls av datakällan.      > [!NOTE] > Om du inte anger en isoleringsnivå Isoleringsnivån bestäms av drivrutinen som används. Om du vill ange en isoleringsnivå med metoden BeginTransaction använda överlagring som tar den `isolevel` parameter."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_6_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_6_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "Ett objekt som representerar den nya transaktionen."
  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En transaktion är aktiv. Parallella transaktioner stöds inte."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Startar en transaktion i datakällan med det angivna <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> värde."
  remarks: "Om du vill allokera eller återställa transaktionen, måste du uttryckligen använda den <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>eller <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>metoder.</xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> </xref:System.Data.Odbc.OdbcTransaction.Commit%2A>       Kontrollera att .NET Framework-dataprovidern för ODBC-transaktion Hanteringsmodellen utförs korrekt, Undvik att använda andra modeller för transaktion, till exempel de som tillhandahålls av datakällan."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_4_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_4_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction BeginTransaction (System.Data.IsolationLevel isolevel);
    parameters:
    - id: isolevel
      type: System.Data.IsolationLevel
      description: "Transaktionsisoleringsnivån för den här anslutningen. Om du inte anger en isoleringsnivå används standardisoleringsnivån för drivrutinen."
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "Ett objekt som representerar den nya transaktionen."
  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En transaktion är aktiv. Parallella transaktioner stöds inte."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OdbcConnection.ChangeDatabase(String)
  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ändrar den aktuella databasen som är associerade med en öppen <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  remarks: "Den `value` parameter måste innehålla ett giltigt databasnamn och får inte innehålla ett null-värde, en tom sträng (&quot;&quot;), eller en sträng med endast blanksteg."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \n  \n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "Databasnamnet."
  overload: System.Data.Odbc.OdbcConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Databasnamnet är inte giltigt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen är inte öppen."
  - type: System.Data.Odbc.OdbcException
    commentId: T:System.Data.Odbc.OdbcException
    description: "Det går inte att ändra databasen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Close
  id: Close
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OdbcConnection.Close()
  fullName: System.Data.Odbc.OdbcConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Stänger anslutningen till datakällan."
  remarks: "Close-metoden återställer alla väntande transaktioner. Den sedan släpper anslutningen till anslutningspoolen eller stänger anslutningen om anslutningspooler är inaktiverad. Om Stäng anropas vid hantering av en <xref:System.Data.Common.DbConnection.StateChange>händelse, ingen ytterligare <xref:System.Data.Common.DbConnection.StateChange>händelser skickas.</xref:System.Data.Common.DbConnection.StateChange> </xref:System.Data.Common.DbConnection.StateChange>       Ett program kan anropa Stäng mer än en gång utan att generera ett undantag.      > [!NOTE] > När du använder .NET Framework-dataprovidern för ODBC, behöver du inte aktivera anslutningspoolen eftersom ODBC-drivrutinshanteraren hanteras det automatiskt. Mer information om hur du aktiverar och inaktiverar anslutningspooler finns i dokumentationen för Microsoft ODBC Open Database Connectivity ().      > [!CAUTION] > Inte anropar Close eller `Dispose` på en anslutning, en DataReader eller andra hanterat objekt i den `Finalize` -metoden i klassen. Du bör endast släpper ohanterade resurser som din klass äger direkt i en slutföraren. Om klassen inte äger ohanterade resurser innehåller inte en `Finalize` metod i klassdefinition. Mer information finns i [skräpinsamling](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, opens it, displays some of its properties, and then closes the connection.  \n  \n [!code-vb[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_0_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_0_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
  fullName: System.Data.Odbc.OdbcConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Hämtar eller anger den sträng som används för att öppna en datakälla."
  remarks: "The ConnectionString property is designed to match ODBC connection string format as closely as possible. The ConnectionString can be set only when the connection is closed, and as soon as it is set it is passed, unchanged, to the Driver Manager and the underlying driver. Therefore, the syntax for the ConnectionString must exactly match what the Driver Manager and underlying driver support.  \n  \n You can use the ConnectionString property to connect to a variety of data sources. This includes an ODBC data source name (DSN). The following example illustrates several possible connection strings.  \n  \n```  \n\"Driver={SQL Server};Server=(local);Trusted_Connection=Yes;Database=AdventureWorks;\"  \n  \n\"Driver={Microsoft ODBC for Oracle};Server=ORACLE8i7;Persist Security Info=False;Trusted_Connection=Yes\"  \n  \n\"Driver={Microsoft Access Driver (*.mdb)};DBQ=c:\\bin\\Northwind.mdb\"  \n  \n\"Driver={Microsoft Excel Driver (*.xls)};DBQ=c:\\bin\\book1.xls\"  \n  \n\"Driver={Microsoft Text Driver (*.txt; *.csv)};DBQ=c:\\bin\"  \n  \n\"DSN=dsnname\"  \n```  \n  \n> [!NOTE]\n>  The .NET Framework Data Provider for ODBC does not support the `Persist Security Info` keyword that is supported by other .NET Framework data providers. However, the ConnectionString property behaves as if `Persist Security Info` were set to `false`. This means that you cannot retrieve the password from the ConnectionString property if the connection has been opened. When the ConnectionString property is read from an <xref:System.Data.Odbc.OdbcConnection> object that has been opened, the connection string is returned minus the password. You cannot change this behavior; therefore, if the application requires the password, store it separately before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>.  \n  \n Many of the settings specified in the string have corresponding read-only properties (for example, `Server=(local)`, which corresponds to the <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> property). These properties are updated after the connection is opened, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.Odbc.OdbcConnection> properties (such as <xref:System.Data.Odbc.OdbcConnection.Database%2A>) return only default settings or those settings specified in the ConnectionString.  \n  \n In the Microsoft .NET Framework version 1.0, validation of the connection string does not occur until an application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method. It is the responsibility of the underlying ODBC driver to validate the connection string. If the connection string contains invalid or unsupported properties, the driver may raise an <xref:System.Data.Odbc.OdbcException> at run time.  \n  \n However, in the .NET Framework version 1.1 and later versions, some basic validation of the connection string occurs as soon as you set the ConnectionString property. At that time, the data provider verifies that the connection string meets the \"keyword=value;...\" format, but it does not verify whether keywords or values are valid. The remaining verification is performed by the underlying ODBC driver when the application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.  \n  \n An ODBC connection string has the following syntax:  \n  \n```  \nconnection-string ::= empty-string[;] | attribute[;] | attribute; connection-string  \nempty-string ::=  \nattribute ::= attribute-keyword=attribute-value | DRIVER=[{]attribute-value[}]  \nattribute-keyword ::= DSN | UID | PWD  \n | driver-defined-attribute-keyword  \nattribute-value ::= character-string  \ndriver-defined-attribute-keyword ::= identifier  \n```  \n  \n where `character-string` has zero or more characters; `identifier` has one or more characters; `attribute-keyword` is not case sensitive; `attribute-value` can be case sensitive; and the value of the DSN keyword does not consist only of blanks.  \n  \n Because of connection string and initialization file grammar, keywords and attribute values should be avoided that contain the characters []{}(),;?*=!@ not enclosed with braces. The value of the DSN keyword cannot consist only of blanks and should not contain leading blanks. Because of the grammar of the system information, keywords and data source names cannot contain the backslash (\\\\) character.  \n  \n Applications do not have to add braces around the attribute value after the Driver keyword unless the attribute contains a semicolon (;), in which case the braces are required. If the attribute value that the driver receives includes braces, the driver should not remove them but they should be part of the returned connection string.  \n  \n A DSN or connection string value enclosed with braces ({}) that contains any of the characters []{}(),;?*=!@ is passed intact to the driver. However, when you use these characters in a keyword, the Driver Manager returns an error when you work with file DSNs, but passes the connection string to the driver for regular connection strings. Avoid using embedded braces in a keyword value.  \n  \n The connection string may include any number of driver-defined keywords. Because the DRIVER keyword does not use information from the system, the driver must define enough keywords so that a driver can connect to a data source using only the information in the connection string. The driver defines which keywords are required to connect to the data source.  \n  \n If any keywords are repeated in the connection string, there is no guarantee which value will be selected.  \n  \n> [!NOTE]\n>  If an ODBC driver supports connection strings longer than 1024 characters, you can use a data source name (DSN) to exceed the maximum length limitation."
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "ODBC-drivrutinen anslutningssträngen som innehåller inställningar, till exempel namnet på datakällan, behövs för att skapa den första anslutningen. Standardvärdet är en tom sträng (&quot;&quot;). Den maximala längden är 1024 tecken."
  overload: System.Data.Odbc.OdbcConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Hämtar eller anger väntetiden vid försök att upprätta en anslutning upprättas innan försöket avbryts och ett fel genereras."
  remarks: "Till skillnad från .NET Framework data provider för SQL Server och OLE DB stöder .NET Framework-dataprovidern för ODBC inte den här egenskapen som ett strängvärde för anslutningen, eftersom den inte är ett giltigt ODBC-anslutning nyckelord. Om du vill ange en timeout för anslutning, anger du egenskapen ConnectionTimeout innan du anropar <xref:System.Data.Odbc.OdbcConnection.Open%2A>.</xref:System.Data.Odbc.OdbcConnection.Open%2A> Detta motsvarar att ange ODBC `SQLSetConnectAttr` SQL_ATTR_LOGIN_TIMOUT attribut."
  syntax:
    content: public int ConnectionTimeout { get; set; }
    return:
      type: System.Int32
      description: "Tid i sekunder för en anslutning för att öppna. Standardvärdet är 15 sekunder."
  overload: System.Data.Odbc.OdbcConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Värdet är mindre än 0."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OdbcConnection.CreateCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Skapar och returnerar ett <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> som är associerat med den <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  syntax:
    content: public System.Data.Odbc.OdbcCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "En <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> objekt."
  overload: System.Data.Odbc.OdbcConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OdbcConnection.CreateDbCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Som ska läggas till."
  overload: System.Data.Odbc.OdbcConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Database
  id: Database
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Database
  nameWithType: OdbcConnection.Database
  fullName: System.Data.Odbc.OdbcConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Hämtar namnet på den aktuella databasen eller databas som ska användas när en anslutning har öppnats."
  remarks: "Först anges egenskapen databasen i anslutningssträngen. Egenskapen databasen kan uppdateras med hjälp av den <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>metoden.</xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> Om du ändrar den aktuella databasen använder en SQL-instruktion eller <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>-metoden skickas ett meddelande med information och sedan egenskapen uppdateras.</xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>       Hämtning av egenskapen databasen motsvarar att anropa funktionen ODBC `SQLGetInfo` med den `Attribute` parametern värdet SQL_ATTR_CURRENT_CATALOG."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \n  \n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Namnet på den aktuella databasen. Standardvärdet är en tom sträng (&quot;&quot;) tills anslutningen öppnas."
  overload: System.Data.Odbc.OdbcConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.DataSource
  id: DataSource
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OdbcConnection.DataSource
  fullName: System.Data.Odbc.OdbcConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Hämtar namnet på servern och namnet på datakällan."
  remarks: "Hämtning av egenskapen DataSource motsvarar att anropa funktionen ODBC `SQLGetInfo` med den `InfoType` parametern inställd på SQL-servernamn."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and displays the backend data source name.  \n  \n [!code-vb[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Servernamn eller namnet på datakällan. Standardvärdet är en tom sträng (&quot;&quot;) tills anslutningen öppnas."
  overload: System.Data.Odbc.OdbcConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcConnection.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.Data.Odbc.OdbcConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Driver
  id: Driver
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Driver
  nameWithType: OdbcConnection.Driver
  fullName: System.Data.Odbc.OdbcConnection.Driver
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Hämtar namnet på den ODBC-drivrutin som angetts för den aktuella anslutningen."
  remarks: "Hämtning av egenskapen för drivrutinen motsvarar att anropa funktionen ODBC `SQLGetInfo` med den `InfoType` parametern värdet SQL_DRIVER_NAME."
  syntax:
    content: public string Driver { get; }
    return:
      type: System.String
      description: "Namnet på den ODBC-drivrutinen. Detta är vanligtvis DLL-namn (till exempel Sqlsrv32.dll). Standardvärdet är en tom sträng (&quot;&quot;) tills anslutningen öppnas."
  overload: System.Data.Odbc.OdbcConnection.Driver*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Att registrera sig i den angivna transaktionen som en distribuerad transaktion."
  remarks: "Ny i ADO.NET 2.0 finns stöd för att använda den <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metod för att medverka i en distribuerad transaktion.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Eftersom den anger en anslutning i en <xref:System.Transactions.Transaction>instansen **EnlistTransaction** drar nytta av funktionerna i den <xref:System.Transactions>namnområde för hantering av distribuerade transaktioner, vilket gör det bättre att **EnlistDistributedTransaction** för detta ändamål.</xref:System.Transactions> </xref:System.Transactions.Transaction> Mer information finns i [distribuerade transaktioner](~/add/includes/ajax-current-ext-md.md).       Du kan fortsätta att medverka i en befintlig distribuerad transaktion med den <xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A>metoden om automatisk registrering har inaktiverats.</xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A> Ta med i en befintlig distribuerad transaktion ser till att, om transaktionen bekräftats eller återställts, ändringar har gjorts av koden på datakällan är också bekräftats eller återställts. Mer information om distribuerade transaktioner finns [distribuerade transaktioner](../Topic/Distributed%20Transactions.md).       EnlistDistributedTransaction returnerar ett undantag om den <xref:System.Data.OdbcClient.OdbcConnection>redan har påbörjat en transaktion med <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A> </xref:System.Data.OdbcClient.OdbcConnection> Men om det är en lokal transaktion som startades vid datakällan transaktionen (exempelvis genom att uttryckligen köra instruktionen BEGIN TRANSACTION med ett <xref:System.Data.OdbcClient.OdbcCommand>objekt), EnlistDistributedTransaction återställer lokala transaktionen och registrera sig i den befintliga distribuerade transaktionen som begärs.</xref:System.Data.OdbcClient.OdbcCommand> Observera att den lokala transaktionen återställdes och ansvarar för att hantera alla lokala transaktioner inte startas med hjälp av <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A> visas inte"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "En referens till en befintlig <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> där du vill registrera."
  overload: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OdbcConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Att registrera sig i den angivna transaktionen som en distribuerad transaktion."
  remarks: 'Ny i ADO.NET 2.0 finns stöd för att använda den <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metod för att medverka i en distribuerad transaktion.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Eftersom den anger en anslutning i en <xref:System.Transactions.Transaction>instansen **EnlistTransaction** drar nytta av funktionerna i den <xref:System.Transactions>namnområde för hantering av distribuerade transaktioner, vilket gör det bättre att **EnlistDistributedTransaction**, som använder en **System.EnterpriseServices.ITransaction** objekt.</xref:System.Transactions> </xref:System.Transactions.Transaction> Har något annorlunda semantik: när en anslutning är uttryckligen registrerad på en transaktion, inte unenlisted eller utför en annan transaktion tills den första transaktionen har slutförts. Mer information om distribuerade transaktioner finns [distribuerade transaktioner](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "En referens till en befintlig <xref href=&quot;System.Transactions.Transaction&quot;> </xref> där du vill registrera."
  overload: System.Data.Odbc.OdbcConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema
  id: GetSchema
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OdbcConnection.GetSchema()
  fullName: System.Data.Odbc.OdbcConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Returnerar schemainformation för datakällan för detta <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller schemainformation."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OdbcConnection.GetSchema(String)
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Returnerar schemainformation för datakällan för detta <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> med det angivna namnet för schemanamnet."
  remarks: "När `collectionName` är null, den <xref:System.Data.DataTable>innehåller information om alla tillgängliga metadata och eventuella begränsningar.</xref:System.Data.DataTable>      > [!NOTE] > Alla begränsningar som gäller för den `SQLStatistics` metoden gäller även för den `ODBCConnection.GetSchema(&quot;`index`&quot;)` samling."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Anger namnet på scheman som ska returneras."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller schemainformation."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OdbcConnection.GetSchema(String,String[])
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Returnerar schemainformation för datakällan för detta <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> med den angivna strängen för schemanamnet och angivna Strängmatrisen för värdena som begränsning."
  remarks: "När `collectionName` anges som null, den <xref:System.Data.DataTable>innehåller information om de metadata som är tillgänglig och dess begränsningar.</xref:System.Data.DataTable>       Den `restrictionValues` kan ange parametern *n* djup med värden som anges av begränsningssamlingen för en specifik samling. För att ange värden för en viss begränsning, och inte ange värden för andra begränsningar, måste du ange de här begränsningarna till null och publicera sedan lämpligt värde i för begränsningen som du vill ange ett värde för.       Ett exempel på detta är &quot;Tabeller&quot;-samling. Om samlingen &quot;Tabeller&quot; har tre begränsningar (databas, ägare och namn) och du vill få tillbaka endast tabeller som är kopplade till ägaren &quot;Carl&quot; och sedan måste du skicka in följande värden: null &quot;Carl&quot;. Om en begränsningsvärdet inte skickas, som standardvärden används för denna begränsning. Detta är samma mappning som passerar null, vilket skiljer sig från passerar i en tom sträng för parametervärdet. I så fall, en tom sträng (&quot;&quot;) betraktas som värdet för den angivna parametern.      > [!NOTE] > Alla begränsningar som gäller för SQLStatistics metoden gäller för samlingen ODBCConnection.GetSchema(&quot;indexes&quot;)."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Anger namnet på scheman som ska returneras."
    - id: restrictionValues
      type: System.String[]
      description: "Anger en begränsningsvärden för det begärda schemat."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller schemainformation."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OdbcConnection.InfoMessage
  fullName: System.Data.Odbc.OdbcConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inträffar när ODBC-drivrutinen skickar en varning eller ett informationsmeddelande."
  remarks: "Klienter som vill bearbeta varningar och informationsmeddelanden som skickats av servern ska skapa en <xref:System.Data.Odbc.OdbcInfoMessageEventHandler>ombud för att lyssna på den här händelsen.</xref:System.Data.Odbc.OdbcInfoMessageEventHandler>"
  syntax:
    content: public event System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.Odbc.OdbcInfoMessageEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Open
  id: Open
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OdbcConnection.Open()
  fullName: System.Data.Odbc.OdbcConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Öppnar en anslutning till en datakälla med egenskapsinställningar som anges av <xref:System.Data.Odbc.OdbcConnection.ConnectionString*>.</xref:System.Data.Odbc.OdbcConnection.ConnectionString*>"
  remarks: "Den <xref:System.Data.Odbc.OdbcConnection>ritar en öppen anslutning från anslutningspoolen om det inte finns.</xref:System.Data.Odbc.OdbcConnection> I annat fall upprättar den en ny anslutning till datakällan.      > [!NOTE] > Om den <xref:System.Data.Odbc.OdbcConnection>går utanför den representerar anslutningen stängs inte automatiskt.</xref:System.Data.Odbc.OdbcConnection> Därför måste du uttryckligen stänga anslutningen genom att anropa <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **ta bort**, eller genom att anslutningen inom en `Using` instruktionen.</xref:System.Data.Odbc.OdbcConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.Open*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Funktionerna i den här metoden stöds inte i basklassen och måste implementeras i en härledd klass i stället."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  id: ReleaseObjectPool
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ReleaseObjectPool()
  nameWithType: OdbcConnection.ReleaseObjectPool()
  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Anger att ODBC-drivrutinshanteraren miljöreferens kan frigöras när den senaste underliggande anslutningen släpps."
  remarks: "`ReleaseObjectPool`kan användas för att frigöra referensen för ODBC-miljö. Du kanske vill anropa den här metoden om du till exempel connection-objektet inte ska användas igen. När alla anslutningar i miljön stängs kan miljön tas bort. Observera att anropa metoden enbart faktiskt inte frigör de aktiva anslutningarna som finns i miljön.       Följande måste inträffa innan miljön slutligt: 1.  Anropa <xref:System.Data.Odbc.OdbcConnection.Close%2A>att släppa den <xref:System.Data.Odbc.OdbcConnection>objekt från miljön.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection.Close%2A>      2.  Tillåt varje anslutningsobjekt timeout.      3.  Anropa ReleaseObjectPool.      4.  Anropa skräpinsamling.       Å andra sidan om du anropar <xref:System.Data.Odbc.OdbcConnection.Close%2A>på alla aktiva anslutningar och anropa skräpinsamling, men inte anropa ReleaseObjectPool, de resurser som är reserverade för miljön finns kvar.</xref:System.Data.Odbc.OdbcConnection.Close%2A>       När en miljöreferens släpps, en begäran om en ny <xref:System.Data.Odbc.OdbcConnection>skapar en ny miljö.</xref:System.Data.Odbc.OdbcConnection>"
  syntax:
    content: public static void ReleaseObjectPool ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
  fullName: System.Data.Odbc.OdbcConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Hämtar en sträng som innehåller versionen av den server som klienten är ansluten."
  remarks: "Om ServerVersion inte stöds av den underliggande ODBC-drivrutinen en tom sträng (&quot;&quot;) returneras.       Egenskapen ServerVersion har formen &quot;*##. ##. ###*,&quot; där de två första siffrorna är den högre versionen av följande två siffror är den lägre versionen och de sista fyra siffrorna är den utgivna versionen. Drivrutinen måste återge produktversionen i det här formuläret men kan även lägga till den produktspecifika versionen som en sträng (till exempel &quot;04.01.0000 Rdb 4.1&quot;). Den här strängen har formatet &quot;*major.minor.build*&quot; där *större* och *mindre* är exakt två siffror och *skapa* är exakt fyra siffror."
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "Versionen av den anslutna servern."
  overload: System.Data.Odbc.OdbcConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen är stängd."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.State
  id: State
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: State
  nameWithType: OdbcConnection.State
  fullName: System.Data.Odbc.OdbcConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Hämtar aktuell status för anslutningen."
  remarks: "Följande tillåts tillståndsändringar: – från `Closed` till `Open`med hjälp av den <xref:System.Data.Odbc.OdbcConnection.Open%2A>metoden.</xref:System.Data.Odbc.OdbcConnection.Open%2A>      -Från `Open` till `Closed`, antingen med hjälp av <xref:System.Data.Odbc.OdbcConnection.Close%2A>eller **avyttra** metod.</xref:System.Data.Odbc.OdbcConnection.Close%2A>      > [!NOTE] > Anropar egenskapen State för en öppen anslutning ökar programmet kostnader eftersom varje sådan anrop gör ett SQL_ATTR_CONNECTION_DEAD anrop till den underliggande ODBC-drivrutinen att avgöra om anslutningen är fortfarande giltigt."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "En binär kombination av den <xref href=&quot;System.Data.ConnectionState&quot;> </xref> värden. Standardvärdet är <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcConnection.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "En beskrivning av den här medlemmen finns &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.Odbc.OdbcConnection>instans omvandlas till ett <xref:System.ICloneable>gränssnitt.</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "En ny <xref:System.Object>som är en kopia av den här instansen.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Odbc.OdbcException
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcException
  nameWithType: OdbcException
  fullName: System.Data.Odbc.OdbcException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.Odbc.OdbcConnection.#ctor
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection()
  nameWithType: OdbcConnection.OdbcConnection()
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()
- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection(String)
  nameWithType: OdbcConnection.OdbcConnection(String)
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OdbcConnection.BeginTransaction()
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()
- uid: System.Data.Odbc.OdbcTransaction
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OdbcConnection.ChangeDatabase(String)
  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)
- uid: System.Data.Odbc.OdbcConnection.Close
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Close()
  nameWithType: OdbcConnection.Close()
  fullName: System.Data.Odbc.OdbcConnection.Close()
- uid: System.Data.Odbc.OdbcConnection.ConnectionString
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
  fullName: System.Data.Odbc.OdbcConnection.ConnectionString
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcConnection.CreateCommand
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OdbcConnection.CreateCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OdbcConnection.CreateDbCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Odbc.OdbcConnection.Database
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Database
  nameWithType: OdbcConnection.Database
  fullName: System.Data.Odbc.OdbcConnection.Database
- uid: System.Data.Odbc.OdbcConnection.DataSource
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: DataSource
  nameWithType: OdbcConnection.DataSource
  fullName: System.Data.Odbc.OdbcConnection.DataSource
- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcConnection.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcConnection.Driver
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Driver
  nameWithType: OdbcConnection.Driver
  fullName: System.Data.Odbc.OdbcConnection.Driver
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OdbcConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.Odbc.OdbcConnection.GetSchema
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OdbcConnection.GetSchema()
  fullName: System.Data.Odbc.OdbcConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OdbcConnection.GetSchema(String)
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OdbcConnection.GetSchema(String,String[])
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcConnection.InfoMessage
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OdbcConnection.InfoMessage
  fullName: System.Data.Odbc.OdbcConnection.InfoMessage
- uid: System.Data.Odbc.OdbcInfoMessageEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcInfoMessageEventHandler
  nameWithType: OdbcInfoMessageEventHandler
  fullName: System.Data.Odbc.OdbcInfoMessageEventHandler
- uid: System.Data.Odbc.OdbcConnection.Open
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Open()
  nameWithType: OdbcConnection.Open()
  fullName: System.Data.Odbc.OdbcConnection.Open()
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ReleaseObjectPool()
  nameWithType: OdbcConnection.ReleaseObjectPool()
  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()
- uid: System.Data.Odbc.OdbcConnection.ServerVersion
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
  fullName: System.Data.Odbc.OdbcConnection.ServerVersion
- uid: System.Data.Odbc.OdbcConnection.State
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: State
  nameWithType: OdbcConnection.State
  fullName: System.Data.Odbc.OdbcConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcConnection.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcConnection.#ctor*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection.OdbcConnection
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OdbcConnection.BeginDbTransaction
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OdbcConnection.BeginTransaction
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OdbcConnection.ChangeDatabase
- uid: System.Data.Odbc.OdbcConnection.Close*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Close
  nameWithType: OdbcConnection.Close
- uid: System.Data.Odbc.OdbcConnection.ConnectionString*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
- uid: System.Data.Odbc.OdbcConnection.CreateCommand*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OdbcConnection.CreateCommand
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OdbcConnection.CreateDbCommand
- uid: System.Data.Odbc.OdbcConnection.Database*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Database
  nameWithType: OdbcConnection.Database
- uid: System.Data.Odbc.OdbcConnection.DataSource*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: DataSource
  nameWithType: OdbcConnection.DataSource
- uid: System.Data.Odbc.OdbcConnection.Dispose*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Dispose
  nameWithType: OdbcConnection.Dispose
- uid: System.Data.Odbc.OdbcConnection.Driver*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Driver
  nameWithType: OdbcConnection.Driver
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OdbcConnection.EnlistDistributedTransaction
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OdbcConnection.EnlistTransaction
- uid: System.Data.Odbc.OdbcConnection.GetSchema*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema
  nameWithType: OdbcConnection.GetSchema
- uid: System.Data.Odbc.OdbcConnection.Open*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Open
  nameWithType: OdbcConnection.Open
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ReleaseObjectPool
  nameWithType: OdbcConnection.ReleaseObjectPool
- uid: System.Data.Odbc.OdbcConnection.ServerVersion*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
- uid: System.Data.Odbc.OdbcConnection.State*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: State
  nameWithType: OdbcConnection.State
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcConnection.System.ICloneable.Clone
