### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlSecureResolver
  id: XmlSecureResolver
  children:
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  - System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  - System.Xml.XmlSecureResolver.Credentials
  - System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlSecureResolver
  nameWithType: XmlSecureResolver
  fullName: System.Xml.XmlSecureResolver
  type: Class
  summary: "Hjälper dig att skydda en annan implementering av <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> genom att omsluta den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objekt och begränsa resurserna som den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> har åtkomst till."
  remarks: "Den <xref:System.Xml.XmlUrlResolver>klass är Standardlösaren för alla klasser i den <xref:System.Xml>namnområde.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> Den används för att läsa in XML-dokument och för att lösa externa resurser, till exempel entiteter, DTD: er eller scheman, och importera eller include-direktiven.       Du kan åsidosätta denna standardinställning genom att ange den <xref:System.Xml.XmlResolver>objekt som ska användas.</xref:System.Xml.XmlResolver> Till exempel om du vill begränsa vilka resurser som den underliggande <xref:System.Xml.XmlResolver>kan komma åt, kan du använda ett XmlSecureResolver-objekt.</xref:System.Xml.XmlResolver>       XmlSecureResolver radbryts runt en konkret implementering av <xref:System.Xml.XmlResolver>och begränsar resurserna som den underliggande <xref:System.Xml.XmlResolver>har åtkomst till.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver> Till exempel har XmlSecureResolver möjlighet att förhindra domänerna omdirigering som sker från en referens till en inbäddad identifierare URI (Uniform Resource).       När du skapar ett XmlSecureResolver objekt du ange ett giltigt <xref:System.Xml.XmlResolver>implementering tillsammans med en URL, en instans av ett bevis-objekt eller en grupp, som används av XmlSecureResolver för att fastställa säkerhet.</xref:System.Xml.XmlResolver> Antingen en <xref:System.Security.PermissionSet?displayProperty=fullName>genereras eller befintliga en används och <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName>anropas på den för att skydda den underliggande <xref:System.Xml.XmlResolver>.</xref:System.Xml.XmlResolver> </xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName> </xref:System.Security.PermissionSet?displayProperty=fullName>      > [!IMPORTANT] > XmlSecureResolver objekt kan innehålla känslig information, till exempel användarens autentiseringsuppgifter. Du bör vara försiktig när cachelagring XmlSecureResolver objekt och inte passerar XmlSecureResolver objektet till en komponent som inte är betrodd.      > [!IMPORTANT] > Finns skillnader i säkerhetsinfrastruktur för kod som körs på .NET Framework CLR (CLR) och kod som körs på CLR som är integrerad i Microsoft SQL Server 2005. Detta kan leda till fall där CLR integrerats i koden som utvecklats för .NET Framework CLR fungerar annorlunda när den används på SQL Server. En av dessa skillnader påverkar XmlSecureResolver klassen när du har bevis som baseras på en URL (det vill säga när du använder den <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29>metoden eller <xref:System.Xml.XmlSecureResolver.%23ctor%2A>konstruktor).</xref:System.Xml.XmlSecureResolver.%23ctor%2A> </xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> Principen för matchning av mekanismen för SQL Server integrerad CLR använder inte den <xref:System.Security.Policy.Url>eller <xref:System.Security.Policy.Zone>information.</xref:System.Security.Policy.Zone> </xref:System.Security.Policy.Url> I stället ger den behörighet som baserat på det GUID som servern lägger till när sammansättningar läses. När du använder XmlSecureResolver i SQL Server integrerat CLR, ange alla nödvändiga bevis direkt med hjälp av en angiven <xref:System.Security.PermissionSet>.</xref:System.Security.PermissionSet>      ## Att använda en säker matchare 1.  Skapa en XmlSecureResolver med rätt behörighet.      2.  Skapa en <xref:System.Xml.XmlReaderSettings>objekt som använder objektet XmlSecureResolver.</xref:System.Xml.XmlReaderSettings>           [!code-vb[XmlSecureResolver_Samples #5a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_1.vb)][!code-cs[XmlSecureResolver_Samples #5a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_1.cs) ] 3.        Skicka den <xref:System.Xml.XmlReaderSettings>objekt till den <xref:System.Xml.XmlReader.Create%2A>metoden när du skapar den <xref:System.Xml.XmlReader>objekt.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings>           [!code-vb[XmlSecureResolver_Samples&#5;b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_2.vb)][!code-cs[XmlSecureResolver_Samples&#5;b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_2.cs) ] ## att begränsa åtkomst med hjälp av en URL-användning i <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29>konstruktorn för att skapa ett XmlSecureResolver-objekt som tillåts ansluta till webbplatsen lokalt intranät.</xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29>             [!code-vb[XmlSecureResolver_Samples #3](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_3.vb)][!code-cs[XmlSecureResolver_Samples #3](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_3.cs) ] ## in 1 att begränsa åtkomst med hjälp av en behörighet.    Skapa en <xref:System.Net.WebPermission>objektet.</xref:System.Net.WebPermission>           [!code-vb[XmlSecureResolver_Samples #4a](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_4.vb)][!code-cs[XmlSecureResolver_Samples #4a](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_4.cs) ] 2.        Ange URL: er som du vill tillåta åtkomst till.           [!code-vb[XmlSecureResolver_Samples #4b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_5.vb)][!code-cs[XmlSecureResolver_Samples #4b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_5.cs) ] 3.        Lägg till webbehörigheter till den <xref:System.Security.PermissionSet>objekt.</xref:System.Security.PermissionSet>           [!code-vb[XmlSecureResolver_Samples #4 c](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_6.vb)][!code-cs[XmlSecureResolver_Samples #4 c](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_6.cs) ] 4.        Använd den <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29>konstruktorn för att skapa ett XmlSecureResolver-objekt med hjälp av behörighetsgruppen.</xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29>           [!code-vb[XmlSecureResolver_Samples&#4; d](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_7.vb)][!code-cs[XmlSecureResolver_Samples&#4; d](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_7.cs) ] finns det <xref:System.Xml.XmlSecureResolver.%23ctor%2A>referenssida för ett annat exempel.</xref:System.Xml.XmlSecureResolver.%23ctor%2A>            ## Om du vill begränsa åtkomst med hjälp av bevis kan du begränsa åtkomsten med hjälp av <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>konstruktorn och ange <xref:System.Security.Policy.Evidence>.</xref:System.Security.Policy.Evidence> </xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> <xref:System.Security.Policy.Evidence>Används för att skapa <xref:System.Security.PermissionSet>som tillämpas på den underliggande <xref:System.Xml.XmlResolver>.</xref:System.Xml.XmlResolver> </xref:System.Security.PermissionSet> </xref:System.Security.Policy.Evidence> XmlSecureResolver anropen <xref:System.Security.PermissionSet.PermitOnly%2A>på den skapade <xref:System.Security.PermissionSet>innan du öppnar några resurser.</xref:System.Security.PermissionSet> </xref:System.Security.PermissionSet.PermitOnly%2A>       Här följer några vanliga scenarier och typ av bevis ange för varje: – Om du arbetar i en fullständigt betrodd miljö, använda sammansättningen för att skapa bevis: [!code-vb [XmlSecureResolver_Samples&#1;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_8.vb)][!code-cs[XmlSecureResolver_Samples&#1;](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_8.cs) ] -om du arbetar i en delvis betrodd miljö, kod eller data som kommer från en extern källa och du vet ursprung extern källa och har en verifierbar URI , Använd URI: N för att skapa bevis: [!code-vb [XmlSecureResolver_Samples&#2;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_9.vb)][!code-cs[XmlSecureResolver_Samples&#2;](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_9.cs) ] - om du arbetar i en delvis betrodd miljö och du har kod eller data som kommer från en extern källa, men du inte vet ursprung extern källa, antingen: Ange den `evidence` parameter till `null`.             Detta åtkomst ingen till resurser.           - eller - om ditt program kräver vissa åtkomst till resurser, begära bevis från anroparen.      ## Att använda säker matcharen att läsa in en XSLT-formatmall 1.  Skapa en XmlSecureResolver med rätt behörighet.      2.  Skicka XmlSecureResolver till den <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>metoden.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>           [!code-vb[XmlSecureResolver_Samples&6;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_10.vb)][!code-cs[XmlSecureResolver_Samples&6;      ](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_10.cs)]"
  syntax:
    content: 'public class XmlSecureResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  id: '#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,PermissionSet)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> klassen med den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> och <xref href=&quot;System.Security.PermissionSet&quot;> </xref> angivna."
  remarks: ''
  example:
  - "The following example constructs an <xref:System.Xml.XmlSecureResolver> object by using a customized permission set.  \n  \n [!code-cs[XmlSecureResolver.cctor#1](~/add/codesnippet/csharp/e6fb0edb-66a8-45c7-82d0-_1.cs)]\n [!code-cpp[XmlSecureResolver.cctor#1](~/add/codesnippet/cpp/e6fb0edb-66a8-45c7-82d0-_1.cpp)]\n [!code-vb[XmlSecureResolver.cctor#1](~/add/codesnippet/visualbasic/e6fb0edb-66a8-45c7-82d0-_1.vb)]"
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "XML-matcharen som är omslutna med den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: permissionSet
      type: System.Security.PermissionSet
      description: "Behörigheten inställningen ska gälla för den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> anrop av &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; behörighetsgrupp innan du anropar metoden den <xref:System.Xml.XmlSecureResolver.GetEntity*>metoden på den underliggande XML-lösaren.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: '#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,Evidence)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> klassen med den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> och <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> angivna."
  remarks: "Här följer några möjliga scenarier och typ av bevis ange för varje scenario: – Om du arbetar i en fullständigt betrodd miljö, använda sammansättningen för att skapa bevis: [!code-vb [XmlSecureResolver_Samples&#1;](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_1.vb)][!code-cs[XmlSecureResolver_Samples&#1;](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_1.cs) ] -om du arbetar i en delvis betrodd miljö, kod eller data som kommer från en extern källa och du vet ursprung extern källa och har en verifierbar URI , Använd URI: N för att skapa bevis: [!code-vb [XmlSecureResolver_Samples&#2;](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_2.vb)][!code-cs[XmlSecureResolver_Samples&#2;](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_2.cs) ] - om du arbetar i en delvis betrodd miljö och du har kod eller data som kommer från en extern källa, men du inte vet ursprung extern källa, antingen: Ange den `evidence` parameter till `null`.             Detta åtkomst ingen till resurser.           - eller - om ditt program kräver vissa åtkomst till resurser, begära bevis från anroparen."
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "XML-matcharen som är omslutna med den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Bevis som används för att skapa den <xref href=&quot;System.Security.PermissionSet&quot;> </xref> som ska kopplas till den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> anrop av &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; -metoden i den skapade <xref href=&quot;System.Security.PermissionSet&quot;> </xref> innan du anropar <xref:System.Xml.XmlSecureResolver.GetEntity*>på den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  id: '#ctor(System.Xml.XmlResolver,System.String)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,String)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> klassen med den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> och URL: en."
  remarks: >-
    > [!IMPORTANT]

    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> method or the XmlSecureResolver constructor). The policy resolution mechanism of the SQL Server integrated CLR does not use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.
  example:
  - "This example uses the XmlSecureResolver constructor to create an <xref:System.Xml.XmlSecureResolver> object that is allowed to access your local intranet site only.  \n  \n [!code-vb[XmlSecureResolver_Samples#3](~/add/codesnippet/visualbasic/m-system.xml.xmlsecurere_1.vb)]\n [!code-cs[XmlSecureResolver_Samples#3](~/add/codesnippet/csharp/m-system.xml.xmlsecurere_1.cs)]"
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "XML-matcharen som är omslutna med den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: securityUrl
      type: System.String
      description: "URL: en som används för att skapa den <xref href=&quot;System.Security.PermissionSet&quot;> </xref> som ska kopplas till den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> anrop &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; på den skapade <xref href=&quot;System.Security.PermissionSet&quot;> </xref> innan du anropar <xref:System.Xml.XmlSecureResolver.GetEntity*>på den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  id: CreateEvidenceForUrl(System.String)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: CreateEvidenceForUrl(String)
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)
  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Skapar bevis med den angivna URL: en."
  remarks: >-
    > [!IMPORTANT]

    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the CreateEvidenceForUrl method or the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor). The policy resolution mechanism of the SQL Server integrated CLR doesn't use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.
  syntax:
    content: public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);
    parameters:
    - id: securityUrl
      type: System.String
      description: "Den URL som används för att skapa bevis."
    return:
      type: System.Security.Policy.Evidence
      description: "Bevis som genereras från den angivna URL: en som definieras i standardprincipen."
  overload: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
  fullName: System.Xml.XmlSecureResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ställer in autentiseringsuppgifter som används för att autentisera webbegäranden."
  remarks: ''
  example:
  - "The following example uses an <xref:System.Xml.XmlSecureResolver> with default credentials to resolve and open network resources needed by the <xref:System.Xml.XmlTextReader>.  \n  \n [!code-cpp[XmlSecureResolver.Credentials#1](~/add/codesnippet/cpp/p-system.xml.xmlsecurere_1.cpp)]\n [!code-vb[XmlSecureResolver.Credentials#1](~/add/codesnippet/visualbasic/p-system.xml.xmlsecurere_1.vb)]\n [!code-cs[XmlSecureResolver.Credentials#1](~/add/codesnippet/csharp/p-system.xml.xmlsecurere_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Autentiseringsuppgifterna som ska användas för att autentisera webbegäranden. Den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> anger de angivna autentiseringsuppgifterna för den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Om den här egenskapen inte har angetts standardvärdet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, det vill säga den <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> har inga autentiseringsuppgifter."
  overload: System.Xml.XmlSecureResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Avbildar en URI till ett objekt som innehåller den faktiska resursen. Den här metoden anger tillfälligt den <xref href=&quot;System.Security.PermissionSet&quot;> </xref> skapas i konstruktorn genom att anropa &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; innan du anropar <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> på den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> att öppna resursen."
  remarks: >-
    > [!IMPORTANT]

    >  Your application can mitigate memory denial of service threats to the GetEntity method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Den URI som returneras från <xref:System.Xml.XmlSecureResolver.ResolveUri*>.</xref:System.Xml.XmlSecureResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "För närvarande används inte."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ av objekt ska returnera. Den aktuella versionen returnerar bara <xref:System.IO.Stream>objekt.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "Den dataström som returnerades genom att anropa <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> på den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Om en annan typ än <xref:System.IO.Stream>har angetts returnerar-metoden <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Xml.XmlSecureResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>är inget <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en <xref:System.IO.Stream> typen."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Angiven URI är inte en absolut URI."
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Det finns ett körningsfel (till exempel en avbruten serveranslutning)."
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynkront mappar en URI till ett objekt som innehåller den faktiska resursen."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Den URI som returnerades från <xref:System.Xml.XmlSecureResolver.ResolveUri*>.</xref:System.Xml.XmlSecureResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "För närvarande används inte."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ av objekt ska returnera. Den aktuella versionen returnerar bara <xref:System.IO.Stream>objekt.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Den dataström som returnerades genom att anropa <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> på den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Om en annan typ än <xref:System.IO.Stream>har angetts returnerar-metoden <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Xml.XmlSecureResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Löser absolut URI från bas och relativa URI genom att anropa <xref uid=&quot;langword_csharp_ResolveUri&quot; name=&quot;ResolveUri&quot; href=&quot;&quot;> </xref> på den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Bas-URI som används för att matcha relativa URI: N."
    - id: relativeUri
      type: System.String
      description: "URI som används för att lösa. URI: N kan vara absolut eller relativ. Om absolut värdet effektivt ersätter den `baseUri` värde. Om relativa kombineras med de `baseUri` att göra en absolut URI."
    return:
      type: System.Uri
      description: "Absolut URI eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om relativ URI inte kan matchas (returneras genom att anropa <xref uid=&quot;langword_csharp_ResolveUri&quot; name=&quot;ResolveUri&quot; href=&quot;&quot;> </xref> på den underliggande <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>)."
  overload: System.Xml.XmlSecureResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,PermissionSet)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,Evidence)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,String)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: CreateEvidenceForUrl(String)
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)
  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)
- uid: System.Xml.XmlSecureResolver.Credentials
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
  fullName: System.Xml.XmlSecureResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlSecureResolver.#ctor*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver
  nameWithType: XmlSecureResolver.XmlSecureResolver
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: CreateEvidenceForUrl
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl
- uid: System.Xml.XmlSecureResolver.Credentials*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
- uid: System.Xml.XmlSecureResolver.GetEntity*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlSecureResolver.GetEntity
- uid: System.Xml.XmlSecureResolver.GetEntityAsync*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlSecureResolver.GetEntityAsync
- uid: System.Xml.XmlSecureResolver.ResolveUri*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlSecureResolver.ResolveUri
