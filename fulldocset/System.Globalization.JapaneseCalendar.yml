### YamlMime:ManagedReference
items:
- uid: System.Globalization.JapaneseCalendar
  id: JapaneseCalendar
  children:
  - System.Globalization.JapaneseCalendar.#ctor
  - System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.JapaneseCalendar.AlgorithmType
  - System.Globalization.JapaneseCalendar.Eras
  - System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  - System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  - System.Globalization.JapaneseCalendar.MinSupportedDateTime
  - System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.JapaneseCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: JapaneseCalendar
  nameWithType: JapaneseCalendar
  fullName: System.Globalization.JapaneseCalendar
  type: Class
  summary: "Representerar den japanska kalendern."
  remarks: "Japansk kalender, som även kallas Wareki kalender, fungerar precis som gregoriansk kalender, förutom att år och era är olika.      > [!NOTE] > Information om hur du använder klassen JapaneseCalendar och andra klasser i kalendern i .NET Framework finns [arbeta med kalendrar](~/add/includes/ajax-current-ext-md.md).       Japansk kalender känner igen en era för varje språk Japan. Den aktuella era är era Heisei, som började gregoriansk kalender år 1989. Namnet på era visas före år. Till exempel är gregoriansk kalenderår 2001 kalenderåret japanska 13 Heisei. Observera att det första året för ett era är &quot;Gannen.&quot; Därför kunde gregoriansk kalenderår 1989 japanska kalenderåret Heisei Gannen.       Den här klassen nummer tilldelas epoker på följande sätt: | Värdet för GetEra | Era namn | Era förkortning | Gregorianskt datum |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 januari 1989 presentera |   | 3 | 昭和 (Showa) | 昭 (S, s) | 25 december 1926 till 7 januari 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 juli 1912 till 24 December 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | Den 8 september 1868 till 29 juli 1912 |       Den här klassen hanteras från den 8 September år Meiji 1 (i gregoriansk kalender, den 8 September 1868). Även om den japanska kalendern har växlats från en kalender till en sol kalender år Meiji 6 (1873 av gregoriansk kalender), baseras den här implementeringen på sol kalendern.       Skottår i japanska kalendern motsvarar samma skottår i gregoriansk kalender. Ett skottår i gregoriansk kalender definieras som ett gregorianskt år som är jämnt delbart av fyra utom är delbart med 100. Gregorianskt år som delbart med 400 är dock skottår. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       Japansk kalender har 12 månader med 28 till 31 dagar: | Värdet för GetMonth | Månad | Engelska | Dagar i vanliga år | Dagar i skottår |   |--------------------|-----------|-------------|--------------------------|------------------------|   | 1 | 1月 (Ichigatsu) | Januari | 31 | 31 |   | 2 | 2月 (Nigatsu) | Februari | 28 | 29 |   | 3 | 3月 (Sangatsu) | Mars | 31 | 31 |   | 4 | 4月 (Shigatsu) | April | 30 | 30 |   | 5 | 5月 (Gogatsu) | Kan | 31 | 31 |   | 6 | 6月 (Rokugatsu) | Juni | 30 | 30 |   | 7 | 7月 (Shichigatsu) | Juli | 31 | 31 |   | 8 | 8月 (Hachigatsu) | Augusti | 31 | 31 |   | 9 | 9月 (Kugatsu) | September | 30 | 30 |   | 10 | 10月 (Juugatsu) | Oktober | 31 | 31 |   | 11 | 11月 (Juuichigatsu) | November | 30 | 30 |   | 12 | 12月 (Juunigatsu) | December | 31 | 31 |       Nigatsu som motsvarar månaden gregoriansk kalender februari, har 29 dagar under skottår och 28 under vanliga år.       Datum 1 januari, 2001 e. kr. i gregoriansk kalender motsvarar den första dagen i Ichigatsu år Heisei 13 i japanska kalendern.       Om programmet använder klassen JapaneseCalendar <xref:System.DateTime.Parse%2A?displayProperty=fullName>identifierar era förkortningar framför året.</xref:System.DateTime.Parse%2A?displayProperty=fullName> Förkortningen är eller förkortningen tecken icke-skiftlägeskänsliga latinska tecken Kanji förkortning.       Varje <xref:System.Globalization.CultureInfo>objekt stöder en uppsättning kalendrar.</xref:System.Globalization.CultureInfo> Den <xref:System.Globalization.CultureInfo.Calendar%2A>-egenskap returnerar standardkalender för kulturen, och <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>egenskapen returnerar en matris som innehåller alla kalendrar som stöds av kulturen.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Så här ändrar du den kalender som används av en <xref:System.Globalization.CultureInfo>genom att programmet ska ange <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>egenskapen för <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>till en ny <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class JapaneseCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: JapaneseCalendar()
  nameWithType: JapaneseCalendar.JapaneseCalendar()
  fullName: System.Globalization.JapaneseCalendar.JapaneseCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initierar en ny instans av den <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> klass."
  syntax:
    content: public JapaneseCalendar ();
    parameters: []
  overload: System.Globalization.JapaneseCalendar.#ctor*
  exceptions:
  - type: System.TypeInitializationException
    commentId: T:System.TypeInitializationException
    description: "Det gick inte att initiera en <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objektet på grund av kulturen information saknas."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar ett <xref:System.DateTime>som är angivet antal månader från den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Den dag-delen av den resulterande <xref:System.DateTime>påverkas om den resulterande dagen inte är en giltig dag i den resulterande månaden resulterande.</xref:System.DateTime> Den har ändrats till den sista giltiga dagen i den resulterande månaden resulterande. År tillhör den resulterande <xref:System.DateTime>påverkas om den resulterande månaden är utanför året i angivet <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Era tillhör den resulterande <xref:System.DateTime>påverkas om resulterande året ligger utanför era inom den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Den tid på dag delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Till exempel om den angivna månaden är Juugatsu (oktober) som har 31 dagar, den angivna dagen är 31: a dagen i månaden, och `months` är 6, resulterande året är en mer än det angivna året, månaden resulterande Shigatsu (April), och den resulterande dagen 30: e dag, vilket är den sista dagen i Shigatsu (April).       Om `months` är negativ, den resulterande som <xref:System.DateTime>är äldre än den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen för det returnerade <xref:System.DateTime>värdet alltid är lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Du kan behålla den <xref:System.DateTime.Kind%2A>-egenskapen för den `time` parameter genom att anropa den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som visas i följande exempel.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.j_17_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.j_17_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_17_2.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_17_2.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_17_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>som ska läggas till månader.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Antalet månader att lägga till."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>De resultat från att lägga till det angivna antalet månader till den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det resulterande <xref:System.DateTime>ligger utanför det tillåtna intervallet.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>är mindre än-120000.       - eller - <code>months</code> är större än 120000."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar ett <xref:System.DateTime>som är det angivna antalet år från den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Den dag-delen av den resulterande <xref:System.DateTime>påverkas om den resulterande dagen inte är en giltig dag i den resulterande månaden resulterande.</xref:System.DateTime> Den har ändrats till den sista giltiga dagen i den resulterande månaden resulterande. Den månad delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Era tillhör den resulterande <xref:System.DateTime>påverkas om resulterande året ligger utanför era inom den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Den tid på dag delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Till exempel har Nigatsu (februari) 28 dagar utom under skottår när det har 29 dagar. Om det angivna datumet är den 29: e dag Nigatsu (februari) i ett skottår och värdet för `years` är 1, resulterande datumet kommer att vara 28 veckodag Nigatsu (februari) i följande år.       Om `years` är negativ, den resulterande som <xref:System.DateTime>är äldre än den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen för det returnerade <xref:System.DateTime>värdet alltid är lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Du kan behålla den <xref:System.DateTime.Kind%2A>-egenskapen för den `time` parameter genom att anropa den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som visas i följande exempel.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.j_14_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.j_14_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_14_2.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_14_2.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_14_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>som ska läggas till år.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Antalet år för att lägga till."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>De resultat från att lägga till det angivna antalet år till den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det resulterande <xref:System.DateTime>ligger utanför det tillåtna intervallet.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>ligger utanför intervallet som stöds av den <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> typen.       - eller - <code>years</code> är mindre än-10,000 eller större än 10 000."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
  fullName: System.Globalization.JapaneseCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar ett värde som anger om den aktuella kalendern är sol-baserade, lunar-baserad eller en kombination av båda."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.j_5_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.j_5_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Returnerar alltid <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.Eras
  id: Eras
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: JapaneseCalendar.Eras
  fullName: System.Globalization.JapaneseCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar listan över epoker i den <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref>."
  remarks: "Japansk kalender känner igen en era för varje språk Japan. Den aktuella era är era Heisei, som började gregoriansk kalender år 1989. Namnet på era visas före år. Till exempel är gregoriansk kalenderår 2001 kalenderåret japanska 13 Heisei. Observera att det första året för ett era är &quot;Gannen.&quot; Därför kunde gregoriansk kalenderår 1989 japanska kalenderåret Heisei Gannen.       Den här klassen nummer tilldelas epoker på följande sätt: | Värdet för GetEra | Era namn | Era förkortning | Gregorianskt datum |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 januari 1989 presentera |   | 3 | 昭和 (Showa) | 昭 (S, s) | 25 december 1926 till 7 januari 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 juli 1912 till 24 December 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | Den 8 september 1868 till 29 juli 1912 |       Den här klassen hanteras från den 8 September år Meiji 1 (januari 1, 1868 av gregoriansk kalender). Även om den japanska kalendern har växlats från en kalender till en sol kalender år Meiji 6 (1873 av gregoriansk kalender), baseras den här implementeringen på sol kalendern.      > [!NOTE] > Bör ytterligare epoker ska läggas till i framtiden, program kan uppstå mer än den förväntade fyra epoker för japanska kalendern. Program bör testas för att säkerställa att de fortsätter att fungera i en händelse; Se [Era hantering för japansk kalender](http://go.microsoft.com/fwlink/p/?LinkId=239618)."
  example:
  - "The following example displays the values contained in the Eras property.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/csharp/p-system.globalization.j_4_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/visualbasic/p-system.globalization.j_4_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/cpp/p-system.globalization.j_4_1.cpp)]"
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "En heltalsmatris som representerar epoker i den <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar dagen i månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_13_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_13_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_13_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen i månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar veckodagen i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "<xref:System.DayOfWeek>-Värdena är följande: | Värdet för DayOfWeek | som anger |   |---------------------|---------------------|   | Söndag | 日曜日 (Nichiyoubi) |   | Måndag | 月曜日 (Getsuyoubi) |   | Tisdag | 火曜日 (Kayoubi) |   | Onsdag | 水曜日 (Suiyoubi) |   | Torsdag | 木曜日 (Mokuyoubi) |   | Fredag | 金曜日 (Kinyoubi) |   | Lördag | 土曜日 (Doyoubi) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_9_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_9_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_9_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Ett <xref:System.DayOfWeek>värde som representerar dag i veckan i angivet <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.JapaneseCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar dagen på året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Dag på året definieras som antalet dagar från den första dagen på året. Till exempel GetDayOfYear för den första dagen i den första månaden returnerar 1 och GetDayOfYear för den sista dagen i den senaste månaden returnerar det totala antalet dagar i år, vilket är samma värde som returneras av <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>.</xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_5_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_5_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_5_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 366 som representerar dagen på året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet dagar i den angivna månaden i det angivna året angivna era."
  remarks: "Den här metoden returnerar exempelvis 28 eller 29 för Nigatsu (februari, `month` = 2), beroende på om `year` är ett skottår."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/50a0d95d-a5e5-49bd-9864-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/50a0d95d-a5e5-49bd-9864-_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/50a0d95d-a5e5-49bd-9864-_1.cs)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet dagar i den angivna månaden i det angivna året angivna era."
  overload: System.Globalization.JapaneseCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet dagar under det angivna året angivna era."
  remarks: "Den här metoden returnerar till exempel 365 eller 366, beroende på om `year` är ett skottår."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.j_4_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.j_4_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_4_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet dagar under den angivna era angivna året."
  overload: System.Globalization.JapaneseCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: JapaneseCalendar.GetEra(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar era i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Japansk kalender känner igen en era för varje språk Japan. Den aktuella era är era Heisei, som började gregoriansk kalender år 1989. Namnet på era visas före år. Till exempel är gregoriansk kalenderår 2001 kalenderåret japanska 13 Heisei. Observera att det första året för ett era är &quot;Gannen.&quot; Därför kunde gregoriansk kalenderår 1989 japanska kalenderåret Heisei Gannen.       Den här klassen nummer tilldelas epoker på följande sätt: | Värdet för GetEra | Era namn | Era förkortning | Gregorianskt datum |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 januari 1989 presentera |   | 3 | 昭和 (Showa) | 昭 (S, s) | 25 december 1926 till 7 januari 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 juli 1912 till 24 December 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | Den 8 september 1868 till 29 juli 1912 |       Normalt den <xref:System.Globalization.JapaneseCalendar>klassen stöder datum från September 8 år Meiji 1 (September 8, 1868 av gregoriansk kalender), vilket är värdet för den <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A>egenskapen.</xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> </xref:System.Globalization.JapaneseCalendar> Metoden GetEra returnerar har dock era för datum från den 1 januari till September 7 år Meiji 1 (januari 1, 1868 via 7 September 1868 i gregoriansk kalender). Datum tidigare än 1 januari 1868 i gregoriansk kalender metoden genererar ett <xref:System.ArgumentOutOfRangeException>undantag.</xref:System.ArgumentOutOfRangeException>"
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_10_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_10_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_10_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal som representerar era i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det resulterande <xref:System.DateTime>ligger utanför det tillåtna intervallet.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JapaneseCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar leap månad för ett år och era."
  remarks: "I en kalender som stöder begreppet leap månaden kan leap månaden inträffa efter en viss månad eller efter en månad i ett år. Till exempel den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar ett tal mellan 1 och 13 som anger den månad som är associerad med ett visst datum.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Om det finns en leap månad mellan åttonde och nionde månader år, den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar 8 för den åttonde månaden, 9 för leap åttonde månad och 10 för den nionde månaden.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett år."
    - id: era
      type: System.Int32
      description: "En tidsperiod."
    return:
      type: System.Int32
      description: "Det returnera värdet är alltid 0 eftersom den <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> typen stöder inte begreppet leap i månaden."
  overload: System.Globalization.JapaneseCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>eller <code>era</code> ligger utanför intervallet som stöds av den <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> typen."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: JapaneseCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_18_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_18_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_18_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet månader i det angivna året angivna era."
  remarks: ''
  example:
  - "The following code example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/0687c0ba-842c-4e70-872b-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/0687c0ba-842c-4e70-872b-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/0687c0ba-842c-4e70-872b-_1.cpp)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Det returnera värdet är alltid 12."
  overload: System.Globalization.JapaneseCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar veckan på året som innehåller datum i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Den här metoden kan användas för att bestämma antalet veckor år genom att ange den `time` parametern till den sista dagen på året.       Den <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>egenskapen innehåller kultur-specifika värden som kan användas för den `rule` och `firstDayOfWeek` parametrar.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>Egenskapen <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>innehåller som standard <xref:System.DayOfWeek>värdet som representerar den första dagen i veckan för en specifik kultur, använda kalendern som anges i <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>egenskapen <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.DayOfWeek> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>Egenskapen <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>innehåller som standard <xref:System.Globalization.CalendarWeekRule>värdet som definierar en kalendervecka för en specifik kultur, använda kalendern som anges i <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>egenskapen <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CalendarWeekRule> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       Till exempel i <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A>metod för den 1 januari returnerar 1.</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/ef15d25f-af8b-4734-b15e-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/ef15d25f-af8b-4734-b15e-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/ef15d25f-af8b-4734-b15e-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "En av de <xref:System.Globalization.CalendarWeekRule>värden som definierar en kalendervecka.</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "En av de <xref:System.DayOfWeek>värden som representerar den första dagen i veckan.</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "Ett 1-baserat heltal som representerar veckan på året som innehåller datum i den <code> time </code> parameter."
  overload: System.Globalization.JapaneseCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>eller <code>firstDayOfWeek</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>rule</code> är inte ett giltigt <xref:System.Globalization.CalendarWeekRule> värde."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: JapaneseCalendar.GetYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_16_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_16_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_16_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal som representerar året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna datumet i den angivna era är ett skottår dag."
  remarks: "Skottår i japanska kalendern motsvarar samma skottår i gregoriansk kalender. Ett skottår i gregoriansk kalender definieras som ett gregorianskt år som är jämnt delbart av fyra utom är delbart med 100. Gregorianskt år som delbart med 400 är dock skottår. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       En leap dag är en dag som uppstår endast i ett skottår. Nigatsu (februari) 29 dagen är till exempel endast leap dagen."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/csharp/98bd79da-f987-41c7-8e4e-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/98bd79da-f987-41c7-8e4e-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/cpp/98bd79da-f987-41c7-8e4e-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: day
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om den angivna dagen är leap om dagen. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>day</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om den angivna månaden i det angivna året angivna era är ett skottår månad."
  remarks: "Skottår i japanska kalendern motsvarar samma skottår i gregoriansk kalender. Ett skottår i gregoriansk kalender definieras som ett gregorianskt år som är jämnt delbart av fyra utom är delbart med 100. Gregorianskt år som delbart med 400 är dock skottår. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       En leap månad är en hel månad som sker endast under ett skottår. Japansk kalender har inte någon leap månader."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/6e9c4cc5-e550-476d-bf72-_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/6e9c4cc5-e550-476d-bf72-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/6e9c4cc5-e550-476d-bf72-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "Den här metoden returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, såvida inte åsidosätts av en härledd klass."
  overload: System.Globalization.JapaneseCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna året angivna era är ett skottår."
  remarks: "Skottår i japanska kalendern motsvarar samma skottår i gregoriansk kalender. Ett skottår i gregoriansk kalender definieras som ett gregorianskt år som är jämnt delbart av fyra utom är delbart med 100. Gregorianskt år som delbart med 400 är dock skottår. Ett vanligt år har 365 dagar och ett skottår har 366 dagar."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.j_2_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.j_2_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_2_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om det angivna året är ett skottår; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar det senaste datum och tidpunkt som stöds av aktuellt <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_0_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_0_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_0_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Senaste datum och tid som stöds av den <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> typ som motsvarar den senaste tidpunkt då den 31 December 9999 C.E. i gregoriansk kalender."
  overload: System.Globalization.JapaneseCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar det tidigaste datum och tid som stöds av aktuellt <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objekt."
  remarks: "Det tidigaste datum som stöds av den <xref:System.Globalization.JapaneseCalendar>klassen är September 8, 1868 C.E., i det första året Meiji era.</xref:System.Globalization.JapaneseCalendar> Normalt datum och tid åtgärder som använder den <xref:System.Globalization.JapaneseCalendar>klassen Kasta ett <xref:System.ArgumentOutOfRangeException>undantag för datum före det här datumet.</xref:System.ArgumentOutOfRangeException> </xref:System.Globalization.JapaneseCalendar> Dock vissa medlemmar som den <xref:System.Globalization.JapaneseCalendar.GetEra%2A>-metoden stöder datum från 1 januari 1868 via September 7 år Meiji 1.</xref:System.Globalization.JapaneseCalendar.GetEra%2A>"
  example:
  - "The following example gets the earliest and latest dates supported by the calendar.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_1_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_1_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_1_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Det tidigaste datum och tid som stöds av den <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> typ som motsvarar den första tidpunkten för den 8 September 1868 C.E. i gregoriansk kalender."
  overload: System.Globalization.JapaneseCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar en <xref:System.DateTime>som har angetts till angivet datum och tid i den angivna era.</xref:System.DateTime>"
  remarks: "ToDateTime-metoden är användbar eftersom den kan konvertera ett datum i den aktuella kalendern till ett datum i gregoriansk kalender. Gregorianskt datum kan därefter användas, till exempel att jämföra datum i olika kalendrar eller skapa ett motsvarande datum i en viss kalender."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: day
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen."
    - id: hour
      type: System.Int32
      description: "Ett heltal mellan 0 och 23 som representerar timmen."
    - id: minute
      type: System.Int32
      description: "Ett heltal mellan 0 och 59 som representerar minut."
    - id: second
      type: System.Int32
      description: "Ett heltal mellan 0 och 59 som representerar sekund."
    - id: millisecond
      type: System.Int32
      description: "Ett heltal mellan 0 och 999 som representerar millisekunder."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.DateTime
      description: "Den <xref:System.DateTime>som har angetts till angivet datum och tid i den aktuella era.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>day</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>hour</code> är mindre än noll eller större än 23.       - eller - <code>minute</code> är mindre än noll eller större än 59.       - eller - <code>second</code> är mindre än noll eller större än 59.       - eller - <code>millisecond</code> är mindre än noll eller större än 999.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: JapaneseCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JapaneseCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Konverterar år till ett årtal med hjälp av den <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax*>egenskapen fastställa lämpliga talet.</xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax*>"
  remarks: "Den här metoden implementerar <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>       Eftersom år i den japanska kalendern är vanligtvis mindre än fyra siffror lång, den här implementeringen alltid returnerar värdet för den `year` parameter.       ToFourDigitYear stöder ett årtal eller ett fyrsiffriga år. Ett giltigt år representeras vanligen med två siffror (mindre än 100). Skicka ett årtal värde medför metoden att konvertera värdet till ett fyrsiffrigt värde enligt den <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A>-värde som representerar på lämplig talet.</xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> Om programmet tillhandahåller ett fyrsiffrigt värde, eller om den tillhandahåller noll eller ett negativt värde ToFourDigitYear genererar ett undantag."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal (vanligtvis två siffror) som representerar året ska konverteras."
    return:
      type: System.Int32
      description: "Ett heltal som innehåller fyra siffror representation av <code> year </code>."
  overload: System.Globalization.JapaneseCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
  fullName: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar eller anger det senaste året för ett urval av 100 år som representeras av ett 2 årtal."
  remarks: "Den här egenskapen implementerar <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>       Eftersom år i den japanska kalendern är vanligtvis mindre än fyra siffror lång, den här implementeringen returnerar 99 som standard och påverkar inte returvärdet för <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>.</xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Det senaste året för ett intervall om 100 år som representeras av ett 2 årtal."
  overload: System.Globalization.JapaneseCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet som anges i en set-åtgärd är mindre än 99.       - eller - värdet som anges i en set-åtgärd är större än 8011 (eller <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den aktuella instansen är skrivskyddad i set-åtgärd."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.TypeInitializationException
  isExternal: true
  name: System.TypeInitializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.JapaneseCalendar.#ctor
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: JapaneseCalendar()
  nameWithType: JapaneseCalendar.JapaneseCalendar()
  fullName: System.Globalization.JapaneseCalendar.JapaneseCalendar()
- uid: System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.JapaneseCalendar.AlgorithmType
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
  fullName: System.Globalization.JapaneseCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.JapaneseCalendar.Eras
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: Eras
  nameWithType: JapaneseCalendar.Eras
  fullName: System.Globalization.JapaneseCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: JapaneseCalendar.GetEra(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetEra(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JapaneseCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: JapaneseCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetMonth(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: JapaneseCalendar.GetYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetYear(DateTime)
- uid: System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MinSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: JapaneseCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JapaneseCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
  fullName: System.Globalization.JapaneseCalendar.TwoDigitYearMax
- uid: System.Globalization.JapaneseCalendar.#ctor*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: JapaneseCalendar
  nameWithType: JapaneseCalendar.JapaneseCalendar
- uid: System.Globalization.JapaneseCalendar.AddMonths*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddMonths
  nameWithType: JapaneseCalendar.AddMonths
- uid: System.Globalization.JapaneseCalendar.AddYears*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddYears
  nameWithType: JapaneseCalendar.AddYears
- uid: System.Globalization.JapaneseCalendar.AlgorithmType*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
- uid: System.Globalization.JapaneseCalendar.Eras*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: Eras
  nameWithType: JapaneseCalendar.Eras
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: JapaneseCalendar.GetDayOfMonth
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: JapaneseCalendar.GetDayOfWeek
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: JapaneseCalendar.GetDayOfYear
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: JapaneseCalendar.GetDaysInMonth
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: JapaneseCalendar.GetDaysInYear
- uid: System.Globalization.JapaneseCalendar.GetEra*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetEra
  nameWithType: JapaneseCalendar.GetEra
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: JapaneseCalendar.GetLeapMonth
- uid: System.Globalization.JapaneseCalendar.GetMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonth
  nameWithType: JapaneseCalendar.GetMonth
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: JapaneseCalendar.GetMonthsInYear
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: JapaneseCalendar.GetWeekOfYear
- uid: System.Globalization.JapaneseCalendar.GetYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetYear
  nameWithType: JapaneseCalendar.GetYear
- uid: System.Globalization.JapaneseCalendar.IsLeapDay*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: JapaneseCalendar.IsLeapDay
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: JapaneseCalendar.IsLeapMonth
- uid: System.Globalization.JapaneseCalendar.IsLeapYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: JapaneseCalendar.IsLeapYear
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.ToDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: JapaneseCalendar.ToDateTime
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: JapaneseCalendar.ToFourDigitYear
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
