### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogPermission
  id: EventLogPermission
  children:
  - System.Diagnostics.EventLogPermission.#ctor
  - System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  - System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  - System.Diagnostics.EventLogPermission.PermissionEntries
  langs:
  - csharp
  name: EventLogPermission
  nameWithType: EventLogPermission
  fullName: System.Diagnostics.EventLogPermission
  type: Class
  summary: "Styr koden åtkomstbehörigheter för händelseloggning."
  remarks: "Bevilja inte EventLogPermission till delvis betrodd kod. Möjligheten att läsa och skriva i händelseloggen kan kod för att utföra åtgärder som utfärdar händelseloggmeddelanden i ett annat program.      > [!NOTE] > Om händelsen datakällan som anges av den <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=fullName>egenskapen för händelseloggen inte finns, skapas en ny händelsekälla.</xref:System.Diagnostics.EventLog.Source%2A?displayProperty=fullName> Om du vill skapa en händelsekälla i Windows Vista och senare versioner av Windows eller Windows Server 2003, måste du ha administratörsbehörighet.   >> Orsaken till det här kravet är att alla händelseloggar, inklusive säkerhet, måste sökas igenom för att avgöra om händelsekällan är unika. Från och med Windows Vista har användare inte behörighet att komma åt säkerhetsloggen; Därför kan en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException>   >> Från och med Windows Vista, kontroll av användarkonto (User Account Control) anger behörigheter för en användare. Om du är medlem i gruppen inbyggda administratörer tilldelas två körning åtkomst-token: en standardanvändares åtkomst-token och en administratör åtkomst-token. Som standard är standard användarrollen. Om du vill köra koden som ansluter till säkerhetsloggen måste du först höja din behörighet från standardanvändare till administratören. Du kan göra detta när du startar ett program genom att högerklicka på programikonen och som anger att du vill köra som administratör."
  syntax:
    content: 'public sealed class EventLogPermission : System.Security.Permissions.ResourcePermissionBase'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Security.Permissions.ResourcePermissionBase
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  - System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.Any
  - System.Security.Permissions.ResourcePermissionBase.Clear
  - System.Security.Permissions.ResourcePermissionBase.Copy
  - System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries
  - System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsUnrestricted
  - System.Security.Permissions.ResourcePermissionBase.Local
  - System.Security.Permissions.ResourcePermissionBase.PermissionAccessType
  - System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.TagNames
  - System.Security.Permissions.ResourcePermissionBase.ToXml
  - System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor
  id: '#ctor'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission()
  nameWithType: EventLogPermission.EventLogPermission()
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.EventLogPermission&quot;> </xref> klass."
  syntax:
    content: public EventLogPermission ();
    parameters: []
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  id: '#ctor(System.Diagnostics.EventLogPermissionEntry[])'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(EventLogPermissionEntry[])
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.EventLogPermission&quot;> </xref> klass med de angivna behörighetsposterna."
  syntax:
    content: public EventLogPermission (System.Diagnostics.EventLogPermissionEntry[] permissionAccessEntries);
    parameters:
    - id: permissionAccessEntries
      type: System.Diagnostics.EventLogPermissionEntry[]
      description: "En matris med objekt som representerar behörighetsposter. Den <xref:System.Diagnostics.EventLogPermission.PermissionEntries*>egenskap är inställd på det här värdet.</xref:System.Diagnostics.EventLogPermission.PermissionEntries*>"
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>permissionAccessEntries</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(PermissionState)
  nameWithType: EventLogPermission.EventLogPermission(PermissionState)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.EventLogPermission&quot;> </xref> klass med det angivna Behörighetstillståndet."
  syntax:
    content: public EventLogPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "En av de uppräkningsvärden som anger Behörighetstillståndet (fullständig åtkomst eller ingen åtkomst till resurser)."
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> state </code> parametern är inte ett giltigt värde för <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  id: '#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(EventLogPermissionAccess,String)
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.EventLogPermission&quot;> </xref> klass med de angivna åtkomstnivåerna och namnet på datorn ska använda."
  syntax:
    content: public EventLogPermission (System.Diagnostics.EventLogPermissionAccess permissionAccess, string machineName);
    parameters:
    - id: permissionAccess
      type: System.Diagnostics.EventLogPermissionAccess
      description: "En av de uppräkningsvärden som anger en åtkomstnivå."
    - id: machineName
      type: System.String
      description: "Namnet på datorn där att läsa eller skriva händelser."
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.PermissionEntries
  id: PermissionEntries
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
  fullName: System.Diagnostics.EventLogPermission.PermissionEntries
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar mängden behörighetsposter för denna begäran behörigheter."
  syntax:
    content: public System.Diagnostics.EventLogPermissionEntryCollection PermissionEntries { get; }
    return:
      type: System.Diagnostics.EventLogPermissionEntryCollection
      description: "En samling som innehåller behörighetsposter för denna begäran behörigheter."
  overload: System.Diagnostics.EventLogPermission.PermissionEntries*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: System.Security.Permissions.ResourcePermissionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.EventLogPermission.#ctor
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission()
  nameWithType: EventLogPermission.EventLogPermission()
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission()
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(EventLogPermissionEntry[])
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
- uid: System.Diagnostics.EventLogPermissionEntry[]
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionEntry
  nameWithType: EventLogPermissionEntry
  fullName: System.Diagnostics.EventLogPermissionEntry[]
  spec.csharp:
  - uid: System.Diagnostics.EventLogPermissionEntry
    name: EventLogPermissionEntry
    nameWithType: EventLogPermissionEntry
    fullName: EventLogPermissionEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(PermissionState)
  nameWithType: EventLogPermission.EventLogPermission(PermissionState)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(EventLogPermissionAccess,String)
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
- uid: System.Diagnostics.EventLogPermissionAccess
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionAccess
  nameWithType: EventLogPermissionAccess
  fullName: System.Diagnostics.EventLogPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogPermission.PermissionEntries
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
  fullName: System.Diagnostics.EventLogPermission.PermissionEntries
- uid: System.Diagnostics.EventLogPermissionEntryCollection
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionEntryCollection
  nameWithType: EventLogPermissionEntryCollection
  fullName: System.Diagnostics.EventLogPermissionEntryCollection
- uid: System.Diagnostics.EventLogPermission.#ctor*
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission
  nameWithType: EventLogPermission.EventLogPermission
- uid: System.Diagnostics.EventLogPermission.PermissionEntries*
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
