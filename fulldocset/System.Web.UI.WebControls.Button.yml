### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  summary: "Visar en knappkontroll på webbsidan."
  remarks: "I det här avsnittet:- [introduktion](#Introduction)      -   [återanslående funktion och serverhändelser](#ButtonPostbackBehaviorandServerEvents)      -   [hantering knappen händelser i klientskript](#HandlingButtonEventsinClientScript)      -   [knappar och validering](#ButtonControlsAndValidation)      -   [knapparna i datakontroller](#ButtonsInDataControls)      -   [binda Data till kontrollerna](#BindingDataToTheControls)      -   [med knappar med UpdatePanel kontroller](#UsingButtonsWithUpdatePanelControls)      -   [deklarativa syntaxen](#DeclarativeSyntax) <a name=&quot;Introduction&quot;> </a> ## introduktion använda kontrollen knapp för att skapa en kommandoknapp på webbsidan som gör att användarna för att publicera en sida på servern.       Kontrollen utlöser en händelse i serverkoden som du kan hantera för att svara på återanslåendet. Det kan också medföra en händelse i klientskript som du kan hantera innan sidan skickas eller som kan köra och sedan avbryta överföringen av den här sidan.      > [!NOTE] > ASP.NET innehåller flera typer av knappar som visas på olika sätt på webbsidor. De är kontrollen knapp som återges som en push-knappen. den <xref:System.Web.UI.WebControls.LinkButton>kontroll som återges som en länk, och <xref:System.Web.UI.WebControls.ImageButton>kontroll som återges som en bild; och <xref:System.Web.UI.WebControls.ImageMap>kontroll som gör att du kan skapa en bild som har anslutningar som användarna kan klicka på.</xref:System.Web.UI.WebControls.ImageMap> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> Som standard skickar alla kontroller på sidan när användaren klickar på. Du kan också använda den <xref:System.Web.UI.HtmlControls.HtmlButton>och <xref:System.Web.UI.HtmlControls.HtmlInputButton>kontroller för att skapa knappar på sidan som är programmerbara i serverkoden.</xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> Mer information om skillnaderna mellan HTML och Web server-kontroller finns [översikt över ASP.NET Web Server kontroller](~/add/includes/ajax-current-ext-md.md).       Som standard är en viss kontroll skickaknappen. Skickaknappen har inte ett kommandonamn (anges av den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen) som associeras med knappen och bara inlägg webbsidan tillbaka till servern.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Du kan ange en händelsehanterare för den <xref:System.Web.UI.WebControls.Button.Click>händelsen för att styra åtgärderna som utförs när användaren klickar på knappen Skicka.</xref:System.Web.UI.WebControls.Button.Click>       En kommandoknapp har en kommandonamnet som associeras med knappen, t.ex `Sort`, genom att ange den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen.</xref:System.Web.UI.WebControls.Button.CommandName%2A> På så sätt kan du skapa flera kontroller på en webbsida och programmässigt avgör vilken knappkontroll klickas. Du kan också använda den <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>egenskapen med en kommandoknapp för att ange ytterligare information om kommandot för att använda, till exempel `Ascending`.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Du kan ange en händelsehanterare för den <xref:System.Web.UI.WebControls.Button.Command>händelsen för att styra åtgärderna som utförs när användaren klickar på kommandoknappen.</xref:System.Web.UI.WebControls.Button.Command>      <a name=&quot;ButtonPostbackBehaviorandServerEvents&quot;></a>## Återanslående funktion och Server händelser när en användare klickar du på knappen alla Web server kontroll, skickas sidan till servern. Detta gör att sidan ska bearbetas och eventuella väntande händelser höjas i server-baserade kod. Om alla sidan och bearbetning av kontrollen har slutförts visas återger sidan sig själv till webbläsaren igen.       Knapparna kan medföra sina egna <xref:System.Web.UI.WebControls.Button.Click>händelser eller <xref:System.Web.UI.WebControls.Button.Command>händelsen, som du kan hantera med hjälp av server-baserade kod.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> Detta skiljer sig från händelser i traditionella HTML-sidor eller klientbaserade webbprogram, där en knapp `onclick` händelsen hanteras med hjälp av JavaScript som körs på klienten. Mer information finns i [ASP.NET Web Forms kontrollen händelse servermodellen](~/add/includes/ajax-current-ext-md.md).       När användaren klickar på en viss kontroll, skickas sidan tillbaka till servern. Sidan skickas tillbaka till sig själv som standard, kan du konfigurera knappar om du vill skicka den aktuella sidan till en annan sida. Detta kan vara användbart för att skapa formulär med flera sidor. Mer information finns i [mellan flera sidor bokföring i ASP.NET-webbformulär](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;HandlingButtonEventsinClientScript&quot;></a>## Hantera knappen händelser i klienten skript kontroller kan öka både server-händelser och klienthändelser. Serverhändelser uppstå efter återanslåendet, och de hanteras i den serverkod som du skriver för sidan. Klienthändelser hanteras i klientskript, vanligtvis ECMAScript (JavaScript) och aktiveras innan sidan har skickats. Genom att lägga till klientsidan händelser ASP.NET knappar du utför uppgifter som att visa bekräftelsedialogrutor innan du skickar sidan och potentiellt Avbryt överföringen. Mer information finns i [klientskript i ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md) och [så här: svara på knappen Web Server kontrollhändelserna klientskript](~/add/includes/ajax-current-ext-md.md).       Du kan också knappkontrollen också använda klientskript vid återanslående (i stället för bara utför en HTTP POST-åtgärd). Detta kan vara användbart om du vill hantera programmatiskt återanslåendet, till exempel kopplar den till andra element på sidan. Du kan ange kontrollen knapp <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen `true` baserat återanslående kan orsaka knappkontrollen som ska använda ett klientskript.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>      <a name=&quot;ButtonControlsAndValidation&quot;></a>## Knappar och verifiering om en sida innehåller ASP.NET verifieraren kontroller som standard, klicka på en knappkontroll gör verifieraren kontrollen att dess utförs. Om validering på klientsidan är aktiverad för en kontroll som verifieraren skickas sidan inte om en verifieringen misslyckades.       I följande tabell beskrivs de egenskaper som stöds av knappar som gör det möjligt att styra valideringsprocessen mer exakt.      | Egenskapen | Beskrivning |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>| Anger om knappen också utför en valideringskontrollen.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Den här egenskapen `false` att förhindra att en valideringskontrollen. |   | <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>| Kan du ange vilka verifierare på sidan anropas när användaren klickar på knappen.</xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> Om inga valideringsgrupper upprättas, klicka på en knapp anropar alla systemhälsoverifierare som finns på sidan. |       Mer information finns i [verifierar användarinmatningar i ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;ButtonsInDataControls&quot;></a>## Knapparna i Data kontroller knappen webbserverkontroller ofta används i datakontroller som, som i den <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, och <xref:System.Web.UI.WebControls.Repeater>lista kontroller.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> I sådana fall kan du vanligtvis inte svarar direkt till knappen för händelsen. I stället aktiverar en knapp i en datakontroll en händelse som är specifika för datakontroll. Till exempel i den <xref:System.Web.UI.WebControls.DataList>kontroll, en knapp kan öka den <xref:System.Web.UI.WebControls.DataList>kontrollens <xref:System.Web.UI.WebControls.DataList.ItemCommand>händelsen i stället för att höja kontrollen knapp <xref:System.Web.UI.WebControls.Button.Click>händelse.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.DataList.ItemCommand> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList>       Eftersom databundna listkontroller kan innehålla många knappar, kan du ställa knappens <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>att ange ett värde som ska skickas som en del av händelsen.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Du kan sedan testa att se vilka knapp har klickats på argumentet.      <a name=&quot;BindingDataToTheControls&quot;></a>## Binda Data till kontroller som du kan binda knappen webbserverkontroller till en datakälla för att kunna styra sina egenskapsinställningar dynamiskt. Du kan till exempel ange en knapp <xref:System.Web.UI.WebControls.Button.Text%2A>egenskapen med databindning.</xref:System.Web.UI.WebControls.Button.Text%2A>      <a name=&quot;UsingButtonsWithUpdatePanelControls&quot;></a>## Med knapparna UpdatePanel partiell-kontrollsida återgivning gör det möjligt att uppdatera delar av en sida utan ett återanslående. <xref:System.Web.UI.UpdatePanel>kontroller kan du markera delar av sidan som ingår i partiella sidåtergivningen.</xref:System.Web.UI.UpdatePanel> Som standard beteendet för kontroller i ett <xref:System.Web.UI.UpdatePanel>, inklusive kontroller, är att utföra ett asynkront återanslag i stället för ett återanslående.</xref:System.Web.UI.UpdatePanel> Detta uppdaterar endast innehållet i den <xref:System.Web.UI.UpdatePanel>Kontrollera från återanslåendet ursprung.</xref:System.Web.UI.UpdatePanel>       Förutom scenario där en viss kontroll som finns inuti en <xref:System.Web.UI.UpdatePanel>kontroll, du kan använda knappen kontroller med <xref:System.Web.UI.UpdatePanel>kontroller i följande scenarier:-definierar en viss kontroll som är utanför en <xref:System.Web.UI.UpdatePanel>Kontrollera som en <xref:System.Web.UI.AsyncPostBackTrigger>kontroll för panelen.</xref:System.Web.UI.AsyncPostBackTrigger> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> När du klickar på knappen utför ett asynkront återanslag och uppdaterar innehållet på panelen.      -Definierar en viss kontroll som finns inuti en <xref:System.Web.UI.UpdatePanel>Kontrollera som en <xref:System.Web.UI.PostBackTrigger>för panelen.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.UpdatePanel> När du klickar på knappen utförs ett återanslående trots att den är inom en <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel>       För mer information om delvis-sidan renderas och använder <xref:System.Web.UI.UpdatePanel>kontroller, se [UpdatePanel åtkomstkontroll: översikt](~/add/includes/ajax-current-ext-md.md) och [partiell sidan återgivning översikt](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.UpdatePanel>      <a name=&quot;DeclarativeSyntax&quot;></a>## Deklarativa syntaxen```   <asp:Button       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       UseSubmitBehavior=&quot;True|False&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a Submit Button control that posts the Web page content back to the server.  \n  \n [!code-cs[Classic Button Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[Classic Button Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_1.aspx)]  \n  \n The following code example demonstrates how to create a Command Button control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_2.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:Button runat="server" Text="Button"></{0}:Button>")]

      public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klass."
  remarks: "Använd den här konstruktorn för att skapa och initiera en ny instans av <xref:System.Web.UI.WebControls.Button>klassen.</xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n [!code-cs[ButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_106_1.aspx)]\n [!code-vb[ButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lägger till attributen för den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen till utdataströmmen för återgivning på klienten."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n [!code-cs[CustomButtonAddAttributesToRender#1](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_1.aspx)]\n [!code-vb[CustomButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_1.aspx)]  \n[!code-cs[CustomButtonAddAttributesToRender#2](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_2.cs)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> som innehåller utdataströmmen ska renderas på klienten."
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger ett värde som anger om verifiering ska utföras när den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klickar på kontrollen."
  remarks: "Som standard sidan verifieringen utförs när en <xref:System.Web.UI.WebControls.Button>klickar på kontrollen.</xref:System.Web.UI.WebControls.Button> Sidvalidering avgör om inkommande kontroller som är associerade med en verifiering kontroll på sidan alla skicka valideringsregler som anges av kontrollen för verifiering.       Du kan ange eller ta reda på om verifiering har utförts på både klienten och servern när en <xref:System.Web.UI.WebControls.Button>klickar på kontrollen med hjälp av egenskapen CausesValidation.</xref:System.Web.UI.WebControls.Button> För att förhindra validering utförs för egenskapen CausesValidation `false`.      > [!NOTE] > Bör du ange CausesValidation-egenskapen till `false` när du använder den <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>egenskapen för att skicka tillbaka till en annan sida.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Du bör kontrollera verifiering explicit vid bokföring tillbaka till en annan sida. Ett exempel finns i avsnittet Anmärkningar i den <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>egenskapen.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>       Ange den här egenskapen är ofta `false` för en `reset` eller `clear` för att förhindra att verifieringen från som utförs när användaren klickar på knappen.       När värdet för CausesValidation-egenskapen anges till `true`, du kan också använda den <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>att ange namnet på valideringsgruppen som den <xref:System.Web.UI.WebControls.Button>kontrollen utlöser verifiering.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>       Den här egenskapen kan inte anges med teman eller style blad teman. Mer information finns i <xref:System.Web.UI.ThemeableAttribute>och [ASP.NET teman och skal](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ButtonControlCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_269_1.aspx)]\n [!code-cs[ButtonControlCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_269_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om verifieringen utförs när den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroll är klickade på, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar när den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klickar på kontrollen."
  remarks: "Klicka på händelsen inträffar när den <xref:System.Web.UI.WebControls.Button>klickar på kontrollen.</xref:System.Web.UI.WebControls.Button> Den här händelsen används ofta när inga kommandonamnet är associerad med den <xref:System.Web.UI.WebControls.Button>kontrollen (till exempel med en Skicka-knapp).</xref:System.Web.UI.WebControls.Button>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Click event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_21_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar när den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klickar på kontrollen."
  remarks: "Kommandot-händelsen inträffar när den <xref:System.Web.UI.WebControls.Button>klickar på kontrollen.</xref:System.Web.UI.WebControls.Button> Den här händelsen används ofta när ett kommandonamn som `Sort`, är associerad med den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> Detta kan du skapa flera <xref:System.Web.UI.WebControls.Button>kontroller på en webbplats och avgöra vilka programmässigt <xref:System.Web.UI.WebControls.Button>klickar på kontrollen.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > I kommandot händelsen aktiveras genom kontroll hierarkin i form av den `BubbleEvent`.       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Command event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger en valfri parameter som överförts till den <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> händelse tillsammans med den associera <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*>"
  remarks: "Använd egenskapen CommandArgument för att ange en parameter som Brevkort den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen.</xref:System.Web.UI.WebControls.Button.CommandName%2A>      > [!NOTE] > Även om du kan ange egenskapen CommandArgument ensamt, är det normalt kan bara användas när den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen också anges.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       CommandArgument egenskapen kompletterar den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen genom att du kan ange ytterligare information om kommandot ska utföra.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Till exempel om du ställer in den <xref:System.Web.UI.WebControls.Button.CommandName%2A>egenskapen `Sort` och CommandArgument egenskapen `Ascending`, anger du ett kommando för att sortera i stigande ordning.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       Den här egenskapen kan inte anges med teman eller style blad teman. Mer information finns i <xref:System.Web.UI.ThemeableAttribute>och [ASP.NET teman och skal](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandArgument property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_977_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_977_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "En valfri parameter som överförts till den <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> händelse tillsammans med den associera <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> Standardvärdet är &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger kommandonamn som är associerade med den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroll som skickas till den <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> händelse."
  remarks: "Om du har flera <xref:System.Web.UI.WebControls.Button>kontroller på en webbsida med CommandName egenskapen ange eller kontrollera kommandonamn som är associerade med varje <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button> Du kan ange egenskapen CommandName med valfri sträng som identifierar kommando för att utföra. Du kan sedan programmässigt avgöra kommandonamnet för den <xref:System.Web.UI.WebControls.Button>styr och utföra åtgärderna som.</xref:System.Web.UI.WebControls.Button>       Mer information om kommandot, som `Ascending`, kan anges med hjälp av den <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>egenskapen.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       Den här egenskapen kan inte anges med teman eller style blad teman. Mer information finns i <xref:System.Web.UI.ThemeableAttribute>och [ASP.NET teman och skal](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandName property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_955_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_955_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "Kommandonamnet för den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroll. Standardvärdet är &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Skapar en <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objekt som representerar den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollens återanslående beteende."
  remarks: "Metoden GetPostBackOptions skapar en <xref:System.Web.UI.PostBackOptions>objekt som representerar den <xref:System.Web.UI.WebControls.Button>återanslående beteendet för kontrollens.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.PostBackOptions> Den <xref:System.Web.UI.PostBackOptions>objekt sedan vanligtvis skickades till den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>metoden som används för att hämta en referens till ett klientskript funktion som, när den anropas, gör servern att skicka tillbaka till sidan.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       Den här metoden används främst av kontrollen utvecklare när du utökar en <xref:System.Web.UI.WebControls.Button>klass.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "En <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> som representerar den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollens återanslående beteende."
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> händelsen för den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroll."
  remarks: "Den <xref:System.Web.UI.WebControls.Button.Click>händelsen inträffar när den <xref:System.Web.UI.WebControls.Button>klickar på kontrollen.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Click> Den här händelsen används ofta när inga kommandonamnet är associerad med den <xref:System.Web.UI.WebControls.Button>kontrollen (till exempel med en Skicka-knapp).</xref:System.Web.UI.WebControls.Button>       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnClick kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_232_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_232_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Informationen om händelsen."
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger klientsidans skript som körs när en <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollens <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> händelsen inträffar."
  remarks: "Använd egenskapen OnClientClick för att ange ytterligare klientsidans skript som körs när en <xref:System.Web.UI.WebControls.Button>kontrollens <xref:System.Web.UI.WebControls.Button.Click>händelsen utlöses.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> Skriptet som du anger för den här egenskapen återges i den <xref:System.Web.UI.WebControls.Button>kontrollens `OnClick` attributet förutom kontrollens fördefinierade klientsidans skript.</xref:System.Web.UI.WebControls.Button>       Den här egenskapen kan inte anges med teman eller style blad teman. Mer information finns i <xref:System.Web.UI.ThemeableAttribute>och [ASP.NET teman och skal](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-cs[Button.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1351_1.aspx)]\n [!code-vb[Button.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1351_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "Klientsidans skript som körs när en <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollens <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> händelsen inträffar."
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> händelsen för den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroll."
  remarks: "Den <xref:System.Web.UI.WebControls.Button.Command>händelsen inträffar när den <xref:System.Web.UI.WebControls.Button>klickar på kontrollen.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Command> Den här händelsen används ofta när ett kommandonamn som `Sort`, är associerad med den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> Detta kan du skapa flera <xref:System.Web.UI.WebControls.Button>kontroller på en webbplats och avgöra vilka programmässigt <xref:System.Web.UI.WebControls.Button>klickar på kontrollen.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > Den <xref:System.Web.UI.WebControls.Button.Command>händelsen aktiveras genom kontroll hierarkin i form av den `BubbleEvent`.</xref:System.Web.UI.WebControls.Button.Command>       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnCommand kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_2.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "Informationen om händelsen."
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Anger om knappen har klickat på före återgivning på klienten."
  remarks: "Metoden OnPreRender används främst av kontrollen utvecklare när den härleds en anpassad klass från den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Informationen om händelsen."
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger URL till sidan Publicera till från aktuellt sidan när den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klickar på kontrollen."
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md) for a discussion on creating correct paths.  \n  \n Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n [!code-vb[Button.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_1.aspx)]\n [!code-cs[Button.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_2.aspx)]\n [!code-vb[Button.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "URL-adress till webbsidan efter till från aktuellt sidan när den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> klickar på kontrollen. Standardvärdet är en tom sträng (&quot;&quot;), vilket gör att sidan för att publicera till sig själv."
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar händelser för den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> styr när den skickar tillbaka till servern."
  remarks: "Den här händelsen används internt av den <xref:System.Web.UI.WebControls.Button>kontroll när det klickas för att höja ett <xref:System.Web.UI.WebControls.Button.Click>händelse definierade, en <xref:System.Web.UI.WebControls.Button.Command>händelse.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Argumentet för händelsen."
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Återger innehållet i kontrollen på den angivna skrivaren."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n [!code-cs[CustomButtonRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_1.aspx)]\n [!code-vb[CustomButtonRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_1.aspx)]  \n[!code-cs[CustomButtonRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_2.cs)]\n[!code-vb[CustomButtonRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt som representerar utdataströmmen att återge HTML innehåll på klienten."
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar händelser för den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> styr när den skickar tillbaka till servern."
  remarks: "Den här händelsen används internt av den <xref:System.Web.UI.WebControls.Button>kontroll när det klickas för att höja ett <xref:System.Web.UI.WebControls.Button.Click>händelse definierade, en <xref:System.Web.UI.WebControls.Button.Command>händelse.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to override the IPostBackEventHandler.RaisePostBackEvent method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/visualbasic/78761a3c-3126-47e7-b48e-_1.vb)]\n [!code-cs[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/csharp/78761a3c-3126-47e7-b48e-_1.cs)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Argumentet för händelsen."
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger texten beskrivningen visas i den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroll."
  remarks: "Använda egenskapen Text för att ange etiketten ska visas i den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button>       Värdet för den här egenskapen när inställningen kan sparas automatiskt på en resursfil med verktyget designer. Mer information finns i <xref:System.ComponentModel.LocalizableAttribute>och [globalisering och lokalisering](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1294_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1294_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Den text rubrik som visas i den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontroll. Standardvärdet är &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger ett värde som anger om den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen använder klienten webbläsarens skicka mekanism eller mekanismen för återanslående ASP.NET."
  remarks: "Använd egenskapen UseSubmitBehavior för att ange om en <xref:System.Web.UI.WebControls.Button>kontrollen använder klienten webbläsarens skicka mekanism eller mekanismen ASP.NET återanslående.</xref:System.Web.UI.WebControls.Button> Värdet för den här egenskapen är som standard `true`, orsakar den <xref:System.Web.UI.WebControls.Button>kontrollen som ska användas i webbläsaren skickar mekanism.</xref:System.Web.UI.WebControls.Button> Om du anger `false`, ASP.NET-sidans ramverk lägger till klientskript till sidan för att skicka formuläret till servern.       När egenskapen UseSubmitBehavior är `false`, kontroll-utvecklare kan använda <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden för att returnera klienten återanslående händelse för <xref:System.Web.UI.WebControls.Button>.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Strängen som returnerades av den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden innehåller texten på klientsidan funktionsanropet och kan infogas i en händelsehanterare på klientsidan.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Den här egenskapen kan inte anges med teman eller style blad teman. Mer information finns i <xref:System.Web.UI.ThemeableAttribute>och [ASP.NET teman och skal](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the UseSubmitBehavior property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The UseSubmitBehavior property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n [!code-vb[Button.UseSubmitBehavior#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_854_1.aspx)]\n [!code-cs[Button.UseSubmitBehavior#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_854_1.aspx)]"
  syntax:
    content: public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kontrollen använder klientens webbläsare skicka mekanism; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger gruppen av kontroller som den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen utlöser verifiering bokföring tillbaka till servern."
  remarks: "Verifieringen grupper kan du tilldela valideringskontrollerna på en sida till en specifik kategori. Varje valideringsgrupp kan verifieras oberoende av andra valideringsgrupper på sidan. Använd egenskapen ValidationGroup för att ange namnet på valideringsgruppen som den <xref:System.Web.UI.WebControls.Button>kontrollen utlöser verifiering bokföring tillbaka till servern.</xref:System.Web.UI.WebControls.Button>       Den här egenskapen påverkar endast när värdet för den <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>egenskap är inställd på `true`.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> När du anger ett värde för egenskapen ValidationGroup endast verifieringen styr som ingår i den angivna gruppen verifieras när den <xref:System.Web.UI.WebControls.Button>kontroll skickar tillbaka till servern.</xref:System.Web.UI.WebControls.Button> Om du inte anger ett värde för den här egenskapen och <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>egenskap är inställd på `true`, alla validering kontroller på sidan som inte har tilldelats en valideringsgrupp verifieras när kontrollen skickar tillbaka till servern.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A>       Den här egenskapen kan inte anges med teman eller style blad teman. Mer information finns i <xref:System.Web.UI.ThemeableAttribute>och [ASP.NET teman och skal](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1224_1.aspx)]\n [!code-vb[Button.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1224_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "Grupp av kontroller som den <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> kontrollen utlöser verifiering bokföring tillbaka till servern. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
