### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.AggregateTokenResolver
  id: AggregateTokenResolver
  children:
  - System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  - System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  langs:
  - csharp
  name: AggregateTokenResolver
  nameWithType: AggregateTokenResolver
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver
  type: Class
  summary: "Representerar en säkerhetstokenlösare som kan kapsla in flera token-matchare och matcha token för alla omsluten matchare."
  remarks: "En <xref:System.IdentityModel.Selectors.SecurityTokenResolver>-objektet representerar en verktyget-klass som kan hämta säkerhetstoken eller nycklar när du har en nyckelidentifierare eller nyckelidentifierare-satsen.</xref:System.IdentityModel.Selectors.SecurityTokenResolver> AggregateTokenResolver packar flera <xref:System.IdentityModel.Selectors.SecurityTokenResolver>objekt.</xref:System.IdentityModel.Selectors.SecurityTokenResolver> Token-matchare som ska omslutas har angetts i konstruktorn. Den <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>egenskapen returnerar token-matchare som omslutna med den sammanlagda lösaren.</xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>"
  syntax:
    content: 'public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenResolver
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})'
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initierar en ny instans av den <xref href=&quot;System.IdentityModel.Tokens.AggregateTokenResolver&quot;> </xref> klassen med hjälp av den angivna listan över token-matchare."
  remarks: "Den <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>egenskapen har initierats med den angivna listan över token-matchare.</xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>"
  syntax:
    content: public AggregateTokenResolver (System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver> tokenResolvers);
    parameters:
    - id: tokenResolvers
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}
      description: "En lista över säkerhet token matchare som ska omslutas av den här instansen."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenResolvers</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  id: TokenResolvers
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar säkerheten för token-matchare som omslutna av den här instansen."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver> TokenResolvers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}
      description: "En skrivskyddad samling som innehåller token-matchare som omslutna av den här instansen."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Försök att hämta den nyckel som refereras i satsen angivna nyckelidentifierare."
  remarks: "TryResolveSecurityKeyCore-metoden anropas av den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>och <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>metoder.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>"
  syntax:
    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Nyckelidentifierare-sats kan hämta nyckel för."
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "När den här metoden returnerar innehåller den nyckel som refereras i satsen angivna nyckelidentifierare. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När du kan hämta en nyckel för den angivna nyckelidentifierare satsen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Försök att hämta säkerhetstoken som matchar åtminstone ett av nyckelidentifierare-satser som ingår i den angivna Nyckelidentifieraren."
  remarks: "TryResolveTokenCore-metoden anropas av den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>och <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>metoder.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Viktiga säkerhetsidentifieraren att hämta token för."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "När den här metoden returnerar innehåller en token som representerar den angivna Nyckelidentifieraren. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När du kan hämta en token för den angivna Nyckelidentifieraren; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Försök att lösa den säkerhetstoken som matchar angivna nyckelidentifierare-satsen."
  remarks: "TryResolveTokenCore-metoden anropas av den <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>och <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>metoder.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Instruktionen nyckelidentifierare för att skapa en säkerhetstoken för."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "När den här metoden returnerar innehåller en säkerhetstoken som representerar den angivna nyckelidentifierare-satsen. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När du kan hämta en säkerhetstoken för angivna nyckelidentifierare-satsen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SecurityTokenResolver>
  nameWithType: IEnumerable<SecurityTokenResolver>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: SecurityTokenResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityTokenResolver>
  nameWithType: ReadOnlyCollection<SecurityTokenResolver>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: SecurityTokenResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: AggregateTokenResolver
  nameWithType: AggregateTokenResolver.AggregateTokenResolver
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: AggregateTokenResolver.TryResolveTokenCore
