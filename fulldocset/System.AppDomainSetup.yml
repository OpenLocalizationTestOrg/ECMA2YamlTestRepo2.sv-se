### YamlMime:ManagedReference
items:
- uid: System.AppDomainSetup
  id: AppDomainSetup
  children:
  - System.AppDomainSetup.#ctor
  - System.AppDomainSetup.#ctor(System.ActivationContext)
  - System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  - System.AppDomainSetup.ActivationArguments
  - System.AppDomainSetup.AppDomainInitializer
  - System.AppDomainSetup.AppDomainInitializerArguments
  - System.AppDomainSetup.AppDomainManagerAssembly
  - System.AppDomainSetup.AppDomainManagerType
  - System.AppDomainSetup.ApplicationBase
  - System.AppDomainSetup.ApplicationName
  - System.AppDomainSetup.ApplicationTrust
  - System.AppDomainSetup.CachePath
  - System.AppDomainSetup.ConfigurationFile
  - System.AppDomainSetup.DisallowApplicationBaseProbing
  - System.AppDomainSetup.DisallowBindingRedirects
  - System.AppDomainSetup.DisallowCodeDownload
  - System.AppDomainSetup.DisallowPublisherPolicy
  - System.AppDomainSetup.DynamicBase
  - System.AppDomainSetup.GetConfigurationBytes
  - System.AppDomainSetup.LicenseFile
  - System.AppDomainSetup.LoaderOptimization
  - System.AppDomainSetup.PartialTrustVisibleAssemblies
  - System.AppDomainSetup.PrivateBinPath
  - System.AppDomainSetup.PrivateBinPathProbe
  - System.AppDomainSetup.SandboxInterop
  - System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  - System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  - System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  - System.AppDomainSetup.ShadowCopyDirectories
  - System.AppDomainSetup.ShadowCopyFiles
  - System.AppDomainSetup.TargetFrameworkName
  langs:
  - csharp
  name: AppDomainSetup
  nameWithType: AppDomainSetup
  fullName: System.AppDomainSetup
  type: Class
  summary: "Representerar sammansättningen bindningsinformation som kan läggas till en instans av <xref href=&quot;System.AppDomain&quot;> </xref>."
  remarks: "Ändra egenskaperna för en instans av AppDomainSetup påverkar inte några befintliga <xref:System.AppDomain>.</xref:System.AppDomain> Påverkar det bara att skapa en ny <xref:System.AppDomain>när den <xref:System.AppDomain.CreateDomain%2A>metoden anropas med AppDomainSetup-instans som en parameter.</xref:System.AppDomain.CreateDomain%2A> </xref:System.AppDomain>       Den här klassen implementerar den <xref:System.IAppDomainSetup>gränssnitt.</xref:System.IAppDomainSetup>      > [!CAUTION] > Standardvärdet för den <xref:System.AppDomainSetup.DisallowCodeDownload%2A>egenskapen är false.</xref:System.AppDomainSetup.DisallowCodeDownload%2A> Den här inställningen är inte säkert för tjänster. Ange den här egenskapen till true för att förhindra att tjänster hämtas delvis betrodd kod"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class AppDomainSetup : IAppDomainSetup
  inheritance:
  - System.Object
  implements:
  - System.IAppDomainSetup
  inheritedMembers: []
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor
  id: '#ctor'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup()
  nameWithType: AppDomainSetup.AppDomainSetup()
  fullName: System.AppDomainSetup.AppDomainSetup()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.AppDomainSetup&quot;> </xref> klass."
  syntax:
    content: public AppDomainSetup ();
    parameters: []
  overload: System.AppDomainSetup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor(System.ActivationContext)
  id: '#ctor(System.ActivationContext)'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup(ActivationContext)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationContext)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.AppDomainSetup&quot;> </xref> klass med angivna aktiveringskontexten för manifest-baserad aktivering för en tillämpningsdomän."
  remarks: "Den <xref:System.ActivationContext>objekt som angetts för `activationContext` används för att generera ett <xref:System.Runtime.Hosting.ActivationArguments>objekt som innehåller information som krävs för att aktivera en ny programdomän.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.ActivationContext> Detta <xref:System.Runtime.Hosting.ActivationArguments>objekt kan nås med hjälp av den <xref:System.AppDomainSetup.ActivationArguments%2A>egenskapen.</xref:System.AppDomainSetup.ActivationArguments%2A> </xref:System.Runtime.Hosting.ActivationArguments>"
  syntax:
    content: public AppDomainSetup (ActivationContext activationContext);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Aktiveringskontexten som ska användas för en tillämpningsdomän."
  overload: System.AppDomainSetup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  id: '#ctor(System.Runtime.Hosting.ActivationArguments)'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup(ActivationArguments)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationArguments)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationArguments)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.AppDomainSetup&quot;> </xref> klass med den angivna aktiveringsargument som krävs för manifest-baserad aktivering för en tillämpningsdomän."
  remarks: "Objekt som angetts för `activationArguments` kan nås med hjälp av den <xref:System.AppDomainSetup.ActivationArguments%2A>egenskapen.</xref:System.AppDomainSetup.ActivationArguments%2A>"
  syntax:
    content: public AppDomainSetup (System.Runtime.Hosting.ActivationArguments activationArguments);
    parameters:
    - id: activationArguments
      type: System.Runtime.Hosting.ActivationArguments
      description: "Ett objekt som innehåller information som krävs för manifest-baserad aktivering av en ny programdomän."
  overload: System.AppDomainSetup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationArguments</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.ActivationArguments
  id: ActivationArguments
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
  fullName: System.AppDomainSetup.ActivationArguments
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger information om aktivering av en tillämpningsdomän."
  remarks: "Inget undantag genereras om den här egenskapen anges till `null`.       Informationen som ges av den <xref:System.Runtime.Hosting.ActivationArguments>objekt stöder manifest-baserad aktivering.</xref:System.Runtime.Hosting.ActivationArguments>"
  syntax:
    content: public System.Runtime.Hosting.ActivationArguments ActivationArguments { get; set; }
    return:
      type: System.Runtime.Hosting.ActivationArguments
      description: "Ett objekt som innehåller information om aktivering av en tillämpningsdomän."
  overload: System.AppDomainSetup.ActivationArguments*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen anges till ett <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> objekt vars programidentiteten inte matchar programidentiteten för den <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objektet som returneras av den <> </> *> egenskapen. Inget undantag genereras om den <> </> *> egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainInitializer
  id: AppDomainInitializer
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
  fullName: System.AppDomainSetup.AppDomainInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger den <xref href=&quot;System.AppDomainInitializer&quot;> </xref> delegera, som representerar en metod som anropas när programdomänen har initierats."
  remarks: "Tilldela en matris med strängar som du vill skicka information till motringningsmetoden, den <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>egenskapen.</xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> Matrisen har överförts till motringningsmetoden varje gång en <xref:System.AppDomain>har initierats.</xref:System.AppDomain>       Motringningsmetoden körs i kontexten för den nyligen skapade programdomänen."
  example:
  - "The following example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain. The AppDomainInitializer property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized. The arguments for the callback method are placed in an array of strings, which is assigned to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property. When the child domain is created, the callback method simply prints the strings.  \n  \n [!code-cpp[AppDomainInitializer#1](~/add/codesnippet/cpp/p-system.appdomainsetup._4_1.cpp)]\n [!code-cs[AppDomainInitializer#1](~/add/codesnippet/csharp/p-system.appdomainsetup._4_1.cs)]\n [!code-vb[AppDomainInitializer#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._4_1.vb)]"
  syntax:
    content: public AppDomainInitializer AppDomainInitializer { get; set; }
    return:
      type: System.AppDomainInitializer
      description: "En delegat som representerar en metod som anropas när programdomänen har initierats."
  overload: System.AppDomainSetup.AppDomainInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainInitializerArguments
  id: AppDomainInitializerArguments
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
  fullName: System.AppDomainSetup.AppDomainInitializerArguments
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger argument som skickades till Återanropsmetoden som representeras av den <xref href=&quot;System.AppDomainInitializer&quot;> </xref> delegera. Motringningsmetoden anropas när programdomänen har initierats."
  remarks: "Använd den <xref:System.AppDomainSetup.AppDomainInitializer%2A>att ange en metod som anropas under <xref:System.AppDomain>initiering.</xref:System.AppDomain> </xref:System.AppDomainSetup.AppDomainInitializer%2A> Om den <xref:System.AppDomainSetup.AppDomainInitializer%2A>egenskapen har inte angetts, lagringsmatris till den här egenskapen används inte.</xref:System.AppDomainSetup.AppDomainInitializer%2A>       Motringningsmetoden körs i kontexten för den nyligen skapade programdomänen."
  example:
  - "The following code example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain. The <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized. The arguments for the callback method are placed in an array of strings, which is assigned to the AppDomainInitializerArguments property. When the child domain is created, the callback method simply prints the strings.  \n  \n [!code-cpp[AppDomainInitializer#1](~/add/codesnippet/cpp/p-system.appdomainsetup._0_1.cpp)]\n [!code-cs[AppDomainInitializer#1](~/add/codesnippet/csharp/p-system.appdomainsetup._0_1.cs)]\n [!code-vb[AppDomainInitializer#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._0_1.vb)]"
  syntax:
    content: public string[] AppDomainInitializerArguments { get; set; }
    return:
      type: System.String[]
      description: "En matris med strängar som skickas till motringningsmetoden som representeras av den <xref href=&quot;System.AppDomainInitializer&quot;> </xref> ombud när callback-metoden anropas under <xref href=&quot;System.AppDomain&quot;> </xref> initiering."
  overload: System.AppDomainSetup.AppDomainInitializerArguments*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainManagerAssembly
  id: AppDomainManagerAssembly
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
  fullName: System.AppDomainSetup.AppDomainManagerAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger namnet för sammansättningen som innehåller typ av domän Programhanteraren programdomäner som skapats med den här <xref href=&quot;System.AppDomainSetup&quot;> </xref> objekt."
  remarks: "To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property. If either of these properties is not set, the other is ignored.  \n  \n If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName> method is called).  \n  \n When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly does not exist, or if the assembly does not contain the type specified by the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property. <xref:System.IO.FileLoadException> is thrown if the assembly is found but the version information does not match.  \n  \n To set the application domain manager for the default application domain, use the [\\<appDomainManagerAssembly>](../Topic/%3CappDomainManagerAssembly%3E%20Element.md) and [\\<appDomainManagerType>](../Topic/%3CappDomainManagerType%3E%20Element.md) elements in the [\\<runtime>](../Topic/%3Cruntime%3E%20Element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.  \n  \n This feature requires the application to have full trust. (For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.  \n  \n The format of the assembly display name is given by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property."
  syntax:
    content: public string AppDomainManagerAssembly { get; set; }
    return:
      type: System.String
      description: "Visningsnamnet för sammansättningen som innehåller den <xref:System.Type>till domänen Programhanteraren.</xref:System.Type>"
  overload: System.AppDomainSetup.AppDomainManagerAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainManagerType
  id: AppDomainManagerType
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
  fullName: System.AppDomainSetup.AppDomainManagerType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger det fullständiga namnet på den typ som innehåller domän Programhanteraren programdomäner som skapats med den här <xref href=&quot;System.AppDomainSetup&quot;> </xref> objekt."
  remarks: "To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property. If either of these properties is not set, the other is ignored.  \n  \n If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName> method is called).  \n  \n When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly specified by the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property does not contain the type specified by this property.  \n  \n To set the application domain manager for the default application domain, use the [\\<appDomainManagerAssembly>](../Topic/%3CappDomainManagerAssembly%3E%20Element.md) and [\\<appDomainManagerType>](../Topic/%3CappDomainManagerType%3E%20Element.md) elements in the [\\<runtime>](../Topic/%3Cruntime%3E%20Element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.  \n  \n This feature requires the application to have full trust. (For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.  \n  \n The format of the full name of a type is given by the <xref:System.Type.FullName%2A?displayProperty=fullName> property."
  syntax:
    content: public string AppDomainManagerType { get; set; }
    return:
      type: System.String
      description: "Det fullständiga namnet på typ, inklusive namnområdet."
  overload: System.AppDomainSetup.AppDomainManagerType*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationBase
  id: ApplicationBase
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
  fullName: System.AppDomainSetup.ApplicationBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger namnet på den katalog som innehåller programmet."
  remarks: "Programmets baskatalog är där sammansättningen manager börjar bestäms sammansättningar.       Egenskapen ApplicationBase kan påverka vilka behörigheter som en tillämpningsdomän. Till exempel en tillämpningsdomän härstammar från den lokala datorn normalt tar emot fullständigt förtroende baserat på dess ursprungliga plats. Men om egenskapen ApplicationBase för som <xref:System.AppDomain>är inställd på det fullständiga namnet på en intranät-katalog, ApplicationBase inställningen begränsar behörigheterna för programdomänen för en LocalIntranet bidraget även om programdomänen faktiskt härstammar från den lokala datorn.</xref:System.AppDomain>"
  example:
  - "The following example demonstrates how to use the ApplicationBase property to set the location where the assembly loader begins probing for assemblies to load into a new application domain.  \n  \n> [!NOTE]\n>  You must ensure that the folder you specify exists.  \n  \n [!code-vb[ADApplicationBase#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._5_1.vb)]\n [!code-cpp[ADApplicationBase#1](~/add/codesnippet/cpp/p-system.appdomainsetup._5_1.cpp)]\n [!code-cs[ADApplicationBase#1](~/add/codesnippet/csharp/p-system.appdomainsetup._5_1.cs)]"
  syntax:
    content: public string ApplicationBase { get; set; }
    return:
      type: System.String
      description: "Namnet på programmets baskatalog."
  overload: System.AppDomainSetup.ApplicationBase*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationName
  id: ApplicationName
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
  fullName: System.AppDomainSetup.ApplicationName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger namnet på programmet."
  remarks: ''
  example:
  - "The following example shows how to set the ApplicationName property when you create a new application domain.  \n  \n The example creates a new application domain, and then calls the <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName> method to load the example assembly into the new application domain and create an instance of the `Worker` class. The `Worker` class inherits <xref:System.MarshalByRefObject>, so the example can use the proxy returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A> to call the `TestLoad` method.  \n  \n The `TestLoad` method loads an assembly that you specify. You must either specify a valid, fully qualified assembly name, or comment out the <xref:System.Reflection.Assembly.Load%28System.String%29> method. The `TestLoad` method lists the assemblies that are loaded into the new application domain, showing that your specified assembly and the example assembly are loaded.  \n  \n The example uses the <xref:System.LoaderOptimizationAttribute> attribute to tell the assembly loader how the application will share code across application domains.  \n  \n [!code-cpp[ADMultiDomain#1](~/add/codesnippet/cpp/p-system.appdomainsetup._2_1.cpp)]\n [!code-cs[ADMultiDomain#1](~/add/codesnippet/csharp/p-system.appdomainsetup._2_1.cs)]\n [!code-vb[ADMultiDomain#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._2_1.vb)]"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Namnet på programmet."
  overload: System.AppDomainSetup.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationTrust
  id: ApplicationTrust
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
  fullName: System.AppDomainSetup.ApplicationTrust
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger ett objekt som innehåller säkerhet och förtroendeinformation."
  remarks: "Den här egenskapen är `null` när den <xref:System.AppDomainSetup>har skapats.</xref:System.AppDomainSetup> När ändras, kan inte återställas till en null-referens."
  syntax:
    content: public System.Security.Policy.ApplicationTrust ApplicationTrust { get; set; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Ett objekt som innehåller information om säkerhet och förtroende."
  overload: System.AppDomainSetup.ApplicationTrust*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen anges till ett <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objekt vars programidentiteten inte matchar programidentiteten för den <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> objektet som returneras av den <> </> *> egenskapen. Inget undantag genereras om den <> </> *> egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapen anges till <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.CachePath
  id: CachePath
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
  fullName: System.AppDomainSetup.CachePath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger namnet på ett område specifika till programmet där filerna är skuggkopior."
  remarks: "För den här egenskapen har en effekt på <xref:System.AppDomainSetup.ApplicationName%2A>egenskapen måste anges.</xref:System.AppDomainSetup.ApplicationName%2A> Om den <xref:System.AppDomainSetup.ApplicationName%2A>egenskapen har inte angetts, ignoreras egenskapen CachePath och cacheplatsen shadow copy som standard hämtningscachen.</xref:System.AppDomainSetup.ApplicationName%2A>       Mer information om hur du kopierar shadow finns [Shadow kopierar sammansättningar](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string CachePath { get; set; }
    return:
      type: System.String
      description: "Det fullständigt kvalificerade namnet på sökvägen och namnet på den katalog där filerna är skuggkopior."
  overload: System.AppDomainSetup.CachePath*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ConfigurationFile
  id: ConfigurationFile
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
  fullName: System.AppDomainSetup.ConfigurationFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger namnet på konfigurationsfilen för en tillämpningsdomän."
  remarks: "Konfigurationsfilen beskrivs regler för sökning och konfigurationsdata för programdomänen. Värden som skapar programdomänen ansvarar för att tillhandahålla data eftersom meningsfulla värdena variera från fall till fall.       Till exempel lagras konfigurationsdata för ASP.NET-program för varje program, plats och datorn, medan konfigurationsdata för en körbar fil lagras för varje program, användare och datorer. Endast värden vet specifika konfigurationsdata för en viss situation."
  syntax:
    content: public string ConfigurationFile { get; set; }
    return:
      type: System.String
      description: "Namnet på konfigurationsfilen."
  overload: System.AppDomainSetup.ConfigurationFile*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing
  id: DisallowApplicationBaseProbing
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
  fullName: System.AppDomainSetup.DisallowApplicationBaseProbing
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Anger om grundläggande programsökväg och privat binär sökväg för när du söker efter sammansättningar att läsa in."
  remarks: "Om egenskapen DisallowApplicationBaseProbing `true`, värdet för den <xref:System.AppDomainSetup.ApplicationBase%2A>egenskapen ignoreras.</xref:System.AppDomainSetup.ApplicationBase%2A> Det vill säga ingen sammansättningar för för i kataloger som anges av den <xref:System.AppDomainSetup.ApplicationBase%2A>egenskapen.</xref:System.AppDomainSetup.ApplicationBase%2A> Dessutom värdena för den <xref:System.AppDomainSetup.PrivateBinPath%2A>egenskapen och <xref:System.AppDomainSetup.PrivateBinPathProbe%2A>egenskapen ignoreras.</xref:System.AppDomainSetup.PrivateBinPathProbe%2A> </xref:System.AppDomainSetup.PrivateBinPath%2A> Inga sammansättningar för för i kataloger som anges av den <xref:System.AppDomainSetup.PrivateBinPath%2A>egenskapen.</xref:System.AppDomainSetup.PrivateBinPath%2A>       Egenskapen DisallowApplicationBaseProbing ger ett ytterligare lager med kontroll över inläsningen. I normal sammansättning lästes in sekvens programmet base är avsöktes innan den <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName>händelsen utlöses.</xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> Vissa program kan dock behöva att läsa in sammansättningar från en sammansatt OLE-fil i ett dokument eller från en unik plats som varken är i den globala sammansättningscachen eller i kataloger som anges av den <xref:System.AppDomainSetup.ApplicationBase%2A>och <xref:System.AppDomainSetup.PrivateBinPath%2A>Egenskaper.</xref:System.AppDomainSetup.PrivateBinPath%2A> </xref:System.AppDomainSetup.ApplicationBase%2A> Dessa program kan använda egenskapen DisallowApplicationBaseProbing att undvika fördröjning på grund av vanlig sökning och för att undvika att belasta kopior av nödvändiga sammansättningen som kan finnas i de normala avsöknings sökvägarna."
  syntax:
    content: public bool DisallowApplicationBaseProbing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det inte är tillåtet att sökning; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.DisallowApplicationBaseProbing*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowBindingRedirects
  id: DisallowBindingRedirects
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
  fullName: System.AppDomainSetup.DisallowBindingRedirects
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger ett värde som anger om en tillämpningsdomän tillåter sammansättningen bindning omdirigering."
  remarks: "Egenskapen DisallowBindingRedirects är avsedd att användas av tjänster och serverprogram där sammansättningen bindning omdirigering inte är en del av scenariot för programmet."
  syntax:
    content: public bool DisallowBindingRedirects { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om omdirigering av sammansättningar inte är tillåtet; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om det är tillåtet."
  overload: System.AppDomainSetup.DisallowBindingRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowCodeDownload
  id: DisallowCodeDownload
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
  fullName: System.AppDomainSetup.DisallowCodeDownload
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger ett värde som anger om HTTP-överföring av sammansättningar är tillåtet för en tillämpningsdomän."
  remarks: "Egenskapen DisallowCodeDownload är avsedd att användas av tjänster och serverprogram där hämtar koden från ett intranät eller Internet inte är en del av scenariot för programmet.      > [!CAUTION] > Standardvärdet för egenskapen DisallowCodeDownload är `false`. Den här inställningen är inte säkert för tjänster. För att förhindra att tjänster hämtas delvis betrodd kod kan du ange egenskapen till `true`."
  syntax:
    content: public bool DisallowCodeDownload { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om HTTP för hämtning av sammansättningar är inte tillåtet; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om det är tillåtet."
  overload: System.AppDomainSetup.DisallowCodeDownload*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowPublisherPolicy
  id: DisallowPublisherPolicy
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
  fullName: System.AppDomainSetup.DisallowPublisherPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger ett värde som anger om den [ &lt;publisherPolicy&gt; ](../Topic/%3CpublisherPolicy%3E%20Element.md) avsnittet av konfigurationsfilen används för en tillämpningsdomän."
  remarks: "Egenskapen DisallowPublisherPolicy gäller specifikt för ett webbprogram som har lästs in lokalt. Använd den här egenskapen för att förhindra angripare att köra ett osäkert webbprogram i felsäkert läge.       Mer information om kringgå utgivarprincip finns i [omdirigera paketversionerna](~/add/includes/ajax-current-ext-md.md) avsnittet. Mer information om felsäkert läge finns i avsnittet &quot;Undersöka konfigurationsfiler&quot; för den [hur det Runtime hittar-sammansättningar](~/add/includes/ajax-current-ext-md.md) avsnittet."
  syntax:
    content: public bool DisallowPublisherPolicy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref uid=&quot;langword_csharp_&lt;publisherPolicy&gt;&quot; name=&quot;&lt;publisherPolicy&gt;&quot; href=&quot;&quot;> </xref> avsnittet i konfigurationsfilen för en tillämpningsdomän ignoreras; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om principen deklarerade publisher hanteras."
  overload: System.AppDomainSetup.DisallowPublisherPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DynamicBase
  id: DynamicBase
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
  fullName: System.AppDomainSetup.DynamicBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger baskatalogen där katalogen för dynamiskt genererad filer finns."
  remarks: "Use this property to set the base directory where the dynamic directory for the new application domain will be located. When code in the new application domain loads an assembly, assembly resolution looks first in the normal probing paths. If it does not find the assembly, it looks in the dynamic directory, which is returned by the <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName> property. Dynamic assemblies that will be loaded and executed by the new application domain can be placed there.  \n  \n When you assign a path to the DynamicBase property, an additional subdirectory is added; the name of this subdirectory is the hash code of the value assigned to the <xref:System.AppDomainSetup.ApplicationName%2A> property. Thus, the base directory subsequently returned by this property is always different from the value assigned.  \n  \n> [!IMPORTANT]\n>  Assigning a value to this property does not create any directories. The directories must be created or verified by the code that uses them.  \n  \n The dynamic directory is a subdirectory of DynamicBase. Its simple name is the value returned by the <xref:System.AppDomainSetup.ApplicationName%2A> property, so its format is *original path*\\\\*hash code*\\\\*application name*."
  example:
  - "The following example demonstrates how to use the DynamicBase property to set the path an application domain probes when loading dynamic assemblies.  \n  \n The example creates an <xref:System.AppDomainSetup> object and sets its <xref:System.AppDomainSetup.ApplicationName%2A> property to \"Example\" and its DynamicBase property to \"C:\\DynamicAssemblyDir\". The example then displays the DynamicBase property, to show that the hash code of the application name has been appended as a subdirectory of the path that was originally assigned.  \n  \n> [!NOTE]\n>  The base directory in this example is intended to be outside the probing path for the example application. Be sure to compile the example in a different location. Delete the base directory and all its subdirectories each time you run the example.  \n  \n The example creates a new application domain using the <xref:System.AppDomainSetup> object. The example then creates the dynamic directory if it does not already exist. Although the example uses the application domain's <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName> property to get the name of the dynamic directory, it could just as easily create the directory beforehand by concatenating the original path, the hash code of the application name, and the application name.  \n  \n The example has a `GenerateDynamicAssembly` method that emits an assembly named `DynamicHelloWorld.dll` and stores it in the new application domain's dynamic directory. The dynamic assembly contains one type, `HelloWorld`, that has a static method (`Shared` method in Visual Basic) named `HelloFromAD`. Calling this method displays the name of the application domain.  \n  \n The `Example` class derives from <xref:System.MarshalByRefObject>, so the example can create an instance of the class in the new application domain and call its `Test` method. The `Test` method loads the dynamic assembly by its display name and calls the static `HelloFromAD` method.  \n  \n You can show that the dynamic directory is searched after the normal probing paths by writing code for an assembly named `DynamicHelloWorld.dll` and compiling it in the same directory as this example. The assembly must have a class named `HelloWorld` with a static method named `HelloFromAD`. This method does not have to have the same functionality as the one in the example; it can simply display a string to the console. The assembly must also have an <xref:System.Reflection.AssemblyVersionAttribute> attribute that sets its version to 1.0.0.0. When you run the example, the assembly you compiled in the current directory is found before the dynamic directory is searched.  \n  \n [!code-cpp[ADDynamicBase#1](~/add/codesnippet/cpp/p-system.appdomainsetup._1_1.cpp)]\n [!code-cs[ADDynamicBase#1](~/add/codesnippet/csharp/p-system.appdomainsetup._1_1.cs)]\n [!code-vb[ADDynamicBase#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._1_1.vb)]"
  syntax:
    content: public string DynamicBase { get; set; }
    return:
      type: System.String
      description: "Katalogen där den &lt;xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName&gt; finns.       <div class=&quot;alert NOTE&quot;>    Returvärdet för den här egenskapen skiljer sig från värdet som tilldelas. Finns i avsnittet Anmärkningar.      </div>"
  overload: System.AppDomainSetup.DynamicBase*
  exceptions:
  - type: System.MemberAccessException
    commentId: T:System.MemberAccessException
    description: "Den här egenskapen kan inte anges eftersom programnamnet på programdomänen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.GetConfigurationBytes
  id: GetConfigurationBytes
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: GetConfigurationBytes()
  nameWithType: AppDomainSetup.GetConfigurationBytes()
  fullName: System.AppDomainSetup.GetConfigurationBytes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerar den XML-konfigurationsinformation som anges av den <xref:System.AppDomainSetup.SetConfigurationBytes*>metoden som åsidosätter konfigurationsinformation för programmets XML.</xref:System.AppDomainSetup.SetConfigurationBytes*>"
  remarks: "Den <xref:System.AppDomainSetup.SetConfigurationBytes%2A>metoden är ett sätt att åsidosätta konfigurationsinformation för ett program som skapar en ny programdomän.</xref:System.AppDomainSetup.SetConfigurationBytes%2A> Konfigurationsinformationen för filen i `value` åsidosätter konfigurationsinformation för filen för programmet. När Example.exe programmet skapar en ny programdomän, kan den åsidosätta den konfigurationsinformation som ursprungligen hämtades från Example.exe.config fil.      > [!IMPORTANT] > Vissa konsumenter av information om konfigurationsfil inte använder den information som lagras av den <xref:System.AppDomainSetup.SetConfigurationBytes%2A>metoden.</xref:System.AppDomainSetup.SetConfigurationBytes%2A> Körningsmiljön göra inte detta. Använd för att säkerställa att all konfigurationsinformation filen åsidosätts i en ny programdomän den <xref:System.AppDomainSetup.ConfigurationFile%2A>egenskapen för att ange en konfigurationsfil.</xref:System.AppDomainSetup.ConfigurationFile%2A> Den <xref:System.AppDomainSetup.SetConfigurationBytes%2A>metoden påverkar sammansättningen bindning.</xref:System.AppDomainSetup.SetConfigurationBytes%2A>       XML i `value` är samma som XML-koden i en normal konfigurationsfil, förutom att den lagras som en <xref:System.Byte>matris.</xref:System.Byte>       Om du vill komma åt configuration byte för en tillämpningsdomän, använda den <xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName>egenskapen för att hämta den <xref:System.AppDomainSetup>-objektet för programdomänen och sedan använda metoden GetConfigurationBytes.</xref:System.AppDomainSetup> </xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName>"
  syntax:
    content: public byte[] GetConfigurationBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "En matris som innehåller den XML-konfigurationsinformation som ställdes in av den <> </> *>-metoden eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om den <> </> *> metoden har inte anropats."
  overload: System.AppDomainSetup.GetConfigurationBytes*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.LicenseFile
  id: LicenseFile
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
  fullName: System.AppDomainSetup.LicenseFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger platsen för den licensfil som är associerade med den här domänen."
  syntax:
    content: public string LicenseFile { get; set; }
    return:
      type: System.String
      description: "Platsen och namnet på licensfilen."
  overload: System.AppDomainSetup.LicenseFile*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.LoaderOptimization
  id: LoaderOptimization
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
  fullName: System.AppDomainSetup.LoaderOptimization
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Anger den princip för optimering som används för att läsa in en körbar fil."
  remarks: ''
  example:
  - "The following example creates a dynamic assembly and saves it to disk, and then uses the LoaderOptimization property to set the optimization policy used to load the assembly into an application domain.  \n  \n [!code-cpp[ADDyno#1](~/add/codesnippet/cpp/p-system.appdomainsetup._3_1.cpp)]\n [!code-cs[ADDyno#1](~/add/codesnippet/csharp/p-system.appdomainsetup._3_1.cs)]\n [!code-vb[ADDyno#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._3_1.vb)]"
  syntax:
    content: public LoaderOptimization LoaderOptimization { get; set; }
    return:
      type: System.LoaderOptimization
      description: "En uppräknade konstant som används med den <xref href=&quot;System.LoaderOptimizationAttribute&quot;> </xref>."
  overload: System.AppDomainSetup.LoaderOptimization*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies
  id: PartialTrustVisibleAssemblies
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
  fullName: System.AppDomainSetup.PartialTrustVisibleAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger en lista över sammansättningar som markerats med den <xref href=&quot;System.Security.PartialTrustVisibilityLevel&quot;> </xref> flagga som är synliga för partiellt förtroende kod som körs i ett begränsat läge programdomän."
  remarks: "Från och med den [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], <xref:System.Security.AllowPartiallyTrustedCallersAttribute>attribut (APTCA) kan göras villkorlig genom att ange <xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A>egenskapen till <xref:System.Security.PartialTrustVisibilityLevel>.</xref:System.Security.PartialTrustVisibilityLevel> </xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A> </xref:System.Security.AllowPartiallyTrustedCallersAttribute> En APTCA-sammansättning som har markerats med <xref:System.Security.PartialTrustVisibilityLevel>kan inte användas av delvis betrodd kod såvida inte värdprogrammet tillåter det.</xref:System.Security.PartialTrustVisibilityLevel>       Värden för ett begränsat läge tillämpningsdomän kan koden i programdomänen använda sammansättningar med villkorlig APTCA attribut genom att skapa en matris som innehåller den enkla namn och en offentlig nyckel för varje sammansättning och tilldelar matrisen till den här egenskapen. For example, an element of the array might look like the following: &quot;MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9&quot;.      > [!IMPORTANT] > Om du använder en underklass till <xref:System.AppDomainManager>, och sammansättningen som definierar den beroende sammansättningar som har markerats med attributet villkorlig APTCA, måste du inkludera dessa sammansättningar i listan som du skickar till egenskapen PartialTrustVisibleAssemblies för den <xref:System.AppDomainSetup>du använder för att skapa programdomäner.</xref:System.AppDomainSetup> </xref:System.AppDomainManager> Annars kommer sammansättningar som har markerats med attributet villkorlig APTCA att inaktiveras.      > [!NOTE] > När du felsöker ett program som körs i ett begränsat läge programdomänen vissa <xref:System.Security.SecurityException>meddelanden kan vara vilseledande.</xref:System.Security.SecurityException> Ett meddelande kan ange att en av dina fullständigt betrodda sammansättningar endast har begränsad behörighet, när den verkliga orsaken till problemet är att en säkerhets-begäran som överskrider bevilja uppsättning begränsade programdomänen har sprids till en gräns i begränsat läge programdomänen och misslyckades."
  syntax:
    content: public string[] PartialTrustVisibleAssemblies { get; set; }
    return:
      type: System.String[]
      description: "En matris med partiellt sammansättningsnamn, där varje del av namnet består av enkla sammansättningsnamnet och den offentliga nyckeln."
  overload: System.AppDomainSetup.PartialTrustVisibleAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PrivateBinPath
  id: PrivateBinPath
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
  fullName: System.AppDomainSetup.PrivateBinPath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger listan över kataloger under programmets baskatalog som för för privata sammansättningar."
  remarks: "Privata sammansättningar distribueras i samma katalogstruktur som programmet. Om de kataloger som angetts för PrivateBinPath inte under <xref:System.AppDomainSetup.ApplicationBase%2A>, ignoreras de.</xref:System.AppDomainSetup.ApplicationBase%2A>"
  syntax:
    content: public string PrivateBinPath { get; set; }
    return:
      type: System.String
      description: "En lista över katalognamn avgränsade med semikolon."
  overload: System.AppDomainSetup.PrivateBinPath*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PrivateBinPathProbe
  id: PrivateBinPathProbe
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
  fullName: System.AppDomainSetup.PrivateBinPathProbe
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger ett strängvärde som inkluderar eller undantar <> </> *> från sökvägen för programmet och sökningar endast <> </> *>."
  remarks: "Ange egenskapen till ett icke-null värde, inklusive <xref:System.String?displayProperty=fullName>(&quot;&quot;), för att utesluta sökvägen till programmet – det vill säga <xref:System.AppDomainSetup.ApplicationBase%2A>– från sökvägen för programmet och för att söka efter sammansättningarna endast i <xref:System.AppDomainSetup.PrivateBinPath%2A>.</xref:System.AppDomainSetup.PrivateBinPath%2A> </xref:System.AppDomainSetup.ApplicationBase%2A> </xref:System.String?displayProperty=fullName>"
  syntax:
    content: public string PrivateBinPathProbe { get; set; }
    return:
      type: System.String
      description: "En null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic) att inkludera rotsökvägen för programmet när du söker efter sammansättningar; strängvärden icke-null för att utesluta sökvägen. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.PrivateBinPathProbe*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SandboxInterop
  id: SandboxInterop
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
  fullName: System.AppDomainSetup.SandboxInterop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger ett värde som anger om cachelagring av gränssnittet är inaktiverat för interop-anrop i programdomänen så att en `QueryInterface` utförs på varje anrop."
  remarks: "Inaktivera cachelagring av gränssnittet har en betydande inverkan på prestanda för interop-anrop.       Den här medlemmen införs i den [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public bool SandboxInterop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om gränssnittet cachelagring har inaktiverats för interop-anrop i programdomäner som skapats med aktuellt <xref href=&quot;System.AppDomainSetup&quot;> </xref> objekt; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.SandboxInterop*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  id: SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetCompatibilitySwitches(IEnumerable<String>)
  nameWithType: AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  fullName: System.AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Anger de angivna växlar gör programdomänen som är kompatibel med tidigare versioner av .NET Framework för de angivna problem."
  remarks: "Major versions of the .NET Framework sometimes introduce breaking changes from the previous version. For example, the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] introduces a small number of breaking changes from the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Use the SetCompatibilitySwitches method to specify that one or more of these breaking changes should be rolled back for the application domain, to make the behavior compatible with the previous version of the .NET Framework.  \n  \n Each time you call this method, it replaces the existing switch settings. To erase the settings, specify `null` for the `switches` parameter.  \n  \n The set of string values you provide for `switches` can be a simple string array, because arrays implement the <xref:System.Collections.IEnumerable> interface.  \n  \n The following table provides examples of compatibility switches that can be set to restore the behavior of earlier versions of the .NET Framework.  \n  \n|Switch|Meaning|  \n|------------|-------------|  \n|\"NetFx40_LegacySecurityPolicy\"|Code access security (CAS) for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] is enabled in this application domain. See [\\&lt;NetFx40_LegacySecurityPolicy\\&gt; Element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md).|  \n|\"NetFx40_Legacy20SortingBehavior\"|String sorting defaults for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] are enabled in this application domain. Successfully restoring legacy sorting behavior also requires the sort00001000.dll dynamic link library to be available on the local system. See [\\&lt;CompatSortNLSVersion\\&gt; Element](../Topic/%3CCompatSortNLSVersion%3E%20Element.md).|  \n|\"NetFx40_Legacy40SortingBehavior\"|String sorting defaults for the [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] and Unicode 5.0 are enabled in this application domain. Successfully restoring legacy sorting behavior also requires the sort00060101.dll dynamic link library to be available on the local system.|  \n|\"NetFx40_TimeSpanLegacyFormatMode\"|<xref:System.TimeSpan> formatting behavior for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] is enabled in this application domain. See [\\&lt;TimeSpan_LegacyFormatMode\\&gt; Element](../Topic/%3CTimeSpan_LegacyFormatMode%3E%20Element.md) and the \"Restoring Legacy TimeSpan Formatting\" section of the <xref:System.TimeSpan> topic.|  \n|\"UseRandomizedStringHashAlgorithm\"|The runtime calculates hash codes for strings on a per application domain basis instead of using a single hashing algorithm that produces a consistent hash code across application domains. See [\\&lt;UseRandomizedStringHashAlgorithm\\&gt; Element](../Topic/%3CUseRandomizedStringHashAlgorithm%3E%20Element.md).|"
  syntax:
    content: public void SetCompatibilitySwitches (System.Collections.Generic.IEnumerable<string> switches);
    parameters:
    - id: switches
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "En enumerable uppsättning strängvärden som anger kompatibilitet växlar eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att radera befintliga kompatibilitet växlar."
  overload: System.AppDomainSetup.SetCompatibilitySwitches*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  id: SetConfigurationBytes(System.Byte[])
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetConfigurationBytes(Byte[])
  nameWithType: AppDomainSetup.SetConfigurationBytes(Byte[])
  fullName: System.AppDomainSetup.SetConfigurationBytes(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Innehåller XML-konfigurationsinformation för programdomänen ersätter konfigurationsinformation för programmets XML."
  remarks: "Metoden SetConfigurationBytes är ett sätt att ersätta konfigurationsinformation för ett program som skapar en ny programdomän. Konfigurationsinformationen för filen i `value`ersätter filen konfigurationsinformation för programmet. När programmet Example.exe skapar en ny programdomän, kan den ersätta den konfigurationsinformation som ursprungligen hämtades från filen Example.exe.config.      > [!IMPORTANT] > Vissa konsumenter av information om konfigurationsfil inte använder den information som lagras av metoden SetConfigurationBytes. Körningsmiljön göra inte detta. Använd för att säkerställa att all konfigurationsinformation för filen ersätts i en ny programdomän den <xref:System.AppDomainSetup.ConfigurationFile%2A>egenskapen för att ange en konfigurationsfil.</xref:System.AppDomainSetup.ConfigurationFile%2A> Metoden SetConfigurationBytes påverkar sammansättningen bindning.       XML i `value` är samma som XML-koden i en normal konfigurationsfil, förutom att den lagras som en <xref:System.Byte>matris.</xref:System.Byte>"
  syntax:
    content: public void SetConfigurationBytes (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "En matris som innehåller XML-konfigurationsinformation som ska användas för programdomänen."
  overload: System.AppDomainSetup.SetConfigurationBytes*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  id: SetNativeFunction(System.String,System.Int32,System.IntPtr)
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetNativeFunction(String,Int32,IntPtr)
  nameWithType: AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  fullName: System.AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ger en alternativ implementering av en jämförelse Strängfunktion common language runtime."
  remarks: "Följande strängjämförelse och sortering metoder kan åsidosättas med metoden SetNativeFunction:- `IsNLSDefinedString`       -    `CompareStringEx`       -    `LCMapStringEx`       -    `FindNLSStringEx`       -    `CompareStringOrdinal`       -    `GetNLSVersion` information om dessa funktioner finns [National Language Support funktioner](http://go.microsoft.com/fwlink/?LinkId=228134)."
  syntax:
    content: public void SetNativeFunction (string functionName, int functionVersion, IntPtr functionPointer);
    parameters:
    - id: functionName
      type: System.String
      description: "Namnet på funktionen sträng jämförelse att åsidosätta."
    - id: functionVersion
      type: System.Int32
      description: "Funktionsversion. För [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], dess värde måste vara 1 eller större."
    - id: functionPointer
      type: System.IntPtr
      description: "En pekare till den funktion som åsidosätter `functionName`."
  overload: System.AppDomainSetup.SetNativeFunction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>functionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>functionVersion</code>är inte minst 1.       - eller - <code>functionPointer</code> är &lt;xref:System.IntPtr?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.AppDomainSetup.ShadowCopyDirectories
  id: ShadowCopyDirectories
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
  fullName: System.AppDomainSetup.ShadowCopyDirectories
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger namnen på de kataloger som innehåller sammansättningarna för skuggkopior."
  remarks: "När shadow kopiera aktiveras, är standard att skuggkopian alla sammansättningar som hittades via sökning; det vill säga i kataloger som anges av den <xref:System.AppDomainSetup.PrivateBinPath%2A>och <xref:System.AppDomainSetup.ApplicationBase%2A>Egenskaper.</xref:System.AppDomainSetup.ApplicationBase%2A> </xref:System.AppDomainSetup.PrivateBinPath%2A> Egenskapen ShadowCopyDirectories begränsar skuggkopian till sammansättningar i kataloger som anges av ShadowCopyDirectories.       Om du inte tilldelar en sträng till egenskapen ShadowCopyDirectories, eller om du anger egenskapen `null`, alla sammansättningar i kataloger som anges av den <xref:System.AppDomainSetup.ApplicationBase%2A>och <xref:System.AppDomainSetup.PrivateBinPath%2A>Egenskaper är skuggkopior.</xref:System.AppDomainSetup.PrivateBinPath%2A> </xref:System.AppDomainSetup.ApplicationBase%2A>      > [!IMPORTANT] > Katalogsökvägar får inte innehålla semikolon, eftersom semikolon är ett avgränsningstecken. Det finns inget escape-tecken för semikolon.       När shadow kopiera används kan kopieras sammansättningsfilerna till en annan plats innan sammansättningarna läses. Den ursprungliga sammansättningsfilen är inte låst, så den kan uppdateras. Mer information om hur du kopierar shadow finns [Shadow kopierar sammansättningar](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string ShadowCopyDirectories { get; set; }
    return:
      type: System.String
      description: "En lista över katalognamn avgränsade med semikolon."
  overload: System.AppDomainSetup.ShadowCopyDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ShadowCopyFiles
  id: ShadowCopyFiles
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
  fullName: System.AppDomainSetup.ShadowCopyFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger en sträng som anger om shadow kopiera är påslagna eller avstängda."
  remarks: "Mer information om hur du kopierar shadow finns [Shadow kopierar sammansättningar](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string ShadowCopyFiles { get; set; }
    return:
      type: System.String
      description: "Strängvärdet &quot;true&quot; för att indikera att shadow kopiera är aktiverat; eller &quot;false&quot; för att indikera att shadow kopiera är inaktiverad."
  overload: System.AppDomainSetup.ShadowCopyFiles*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.TargetFrameworkName
  id: TargetFrameworkName
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
  fullName: System.AppDomainSetup.TargetFrameworkName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar eller anger en sträng som anger målversionen och profil av .NET Framework för programdomänen, i ett format som kan parsas av den &lt;xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName&gt; konstruktor."
  remarks: "Den här egenskapen ska berätta för pågående version av .NET Framework att programdomänen används för att ladda och köra sammansättningar som har sammanställts för målversionen och profil. Om den pågående versionen av .NET Framework har valfria beteenden som påverkar kompatibiliteten för kod som kompilerats med målversionen, den aktivera eller inaktivera dessa funktioner, efter behov för att förbättra kompatibiliteten. Detta kan vara användbart när ett program har stöd för tillägg som kompilerats med flera versioner av .NET Framework genom att köra dem i separata programdomäner.       För program, är värdet på egenskapen TargetFrameworkName härledas från den <xref:System.Runtime.Versioning.TargetFrameworkAttribute>attribut.</xref:System.Runtime.Versioning.TargetFrameworkAttribute> I [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] och senare kan det här attributet läggs till automatiskt baserat på inställningen i projektets sammansättningen **Målversionen av Framework** egenskapen."
  syntax:
    content: public string TargetFrameworkName { get; set; }
    return:
      type: System.String
      description: "Målversionen och .NET Framework-profilen."
  overload: System.AppDomainSetup.TargetFrameworkName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.MemberAccessException
  isExternal: true
  name: System.MemberAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.AppDomainSetup.#ctor
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup()
  nameWithType: AppDomainSetup.AppDomainSetup()
  fullName: System.AppDomainSetup.AppDomainSetup()
- uid: System.AppDomainSetup.#ctor(System.ActivationContext)
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup(ActivationContext)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationContext)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationContext)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup(ActivationArguments)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationArguments)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationArguments)
- uid: System.Runtime.Hosting.ActivationArguments
  parent: System.Runtime.Hosting
  isExternal: false
  name: ActivationArguments
  nameWithType: ActivationArguments
  fullName: System.Runtime.Hosting.ActivationArguments
- uid: System.AppDomainSetup.ActivationArguments
  parent: System.AppDomainSetup
  isExternal: false
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
  fullName: System.AppDomainSetup.ActivationArguments
- uid: System.AppDomainSetup.AppDomainInitializer
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
  fullName: System.AppDomainSetup.AppDomainInitializer
- uid: System.AppDomainInitializer
  parent: System
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainInitializer
  fullName: System.AppDomainInitializer
- uid: System.AppDomainSetup.AppDomainInitializerArguments
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
  fullName: System.AppDomainSetup.AppDomainInitializerArguments
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AppDomainSetup.AppDomainManagerAssembly
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
  fullName: System.AppDomainSetup.AppDomainManagerAssembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AppDomainSetup.AppDomainManagerType
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
  fullName: System.AppDomainSetup.AppDomainManagerType
- uid: System.AppDomainSetup.ApplicationBase
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
  fullName: System.AppDomainSetup.ApplicationBase
- uid: System.AppDomainSetup.ApplicationName
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
  fullName: System.AppDomainSetup.ApplicationName
- uid: System.AppDomainSetup.ApplicationTrust
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
  fullName: System.AppDomainSetup.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.AppDomainSetup.CachePath
  parent: System.AppDomainSetup
  isExternal: false
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
  fullName: System.AppDomainSetup.CachePath
- uid: System.AppDomainSetup.ConfigurationFile
  parent: System.AppDomainSetup
  isExternal: false
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
  fullName: System.AppDomainSetup.ConfigurationFile
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
  fullName: System.AppDomainSetup.DisallowApplicationBaseProbing
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AppDomainSetup.DisallowBindingRedirects
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
  fullName: System.AppDomainSetup.DisallowBindingRedirects
- uid: System.AppDomainSetup.DisallowCodeDownload
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
  fullName: System.AppDomainSetup.DisallowCodeDownload
- uid: System.AppDomainSetup.DisallowPublisherPolicy
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
  fullName: System.AppDomainSetup.DisallowPublisherPolicy
- uid: System.AppDomainSetup.DynamicBase
  parent: System.AppDomainSetup
  isExternal: false
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
  fullName: System.AppDomainSetup.DynamicBase
- uid: System.AppDomainSetup.GetConfigurationBytes
  parent: System.AppDomainSetup
  isExternal: false
  name: GetConfigurationBytes()
  nameWithType: AppDomainSetup.GetConfigurationBytes()
  fullName: System.AppDomainSetup.GetConfigurationBytes()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AppDomainSetup.LicenseFile
  parent: System.AppDomainSetup
  isExternal: false
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
  fullName: System.AppDomainSetup.LicenseFile
- uid: System.AppDomainSetup.LoaderOptimization
  parent: System.AppDomainSetup
  isExternal: false
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
  fullName: System.AppDomainSetup.LoaderOptimization
- uid: System.LoaderOptimization
  parent: System
  isExternal: false
  name: LoaderOptimization
  nameWithType: LoaderOptimization
  fullName: System.LoaderOptimization
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies
  parent: System.AppDomainSetup
  isExternal: false
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
  fullName: System.AppDomainSetup.PartialTrustVisibleAssemblies
- uid: System.AppDomainSetup.PrivateBinPath
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
  fullName: System.AppDomainSetup.PrivateBinPath
- uid: System.AppDomainSetup.PrivateBinPathProbe
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
  fullName: System.AppDomainSetup.PrivateBinPathProbe
- uid: System.AppDomainSetup.SandboxInterop
  parent: System.AppDomainSetup
  isExternal: false
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
  fullName: System.AppDomainSetup.SandboxInterop
- uid: System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  parent: System.AppDomainSetup
  isExternal: false
  name: SetCompatibilitySwitches(IEnumerable<String>)
  nameWithType: AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  fullName: System.AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  parent: System.AppDomainSetup
  isExternal: false
  name: SetConfigurationBytes(Byte[])
  nameWithType: AppDomainSetup.SetConfigurationBytes(Byte[])
  fullName: System.AppDomainSetup.SetConfigurationBytes(Byte[])
- uid: System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  parent: System.AppDomainSetup
  isExternal: false
  name: SetNativeFunction(String,Int32,IntPtr)
  nameWithType: AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  fullName: System.AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.AppDomainSetup.ShadowCopyDirectories
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
  fullName: System.AppDomainSetup.ShadowCopyDirectories
- uid: System.AppDomainSetup.ShadowCopyFiles
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
  fullName: System.AppDomainSetup.ShadowCopyFiles
- uid: System.AppDomainSetup.TargetFrameworkName
  parent: System.AppDomainSetup
  isExternal: false
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
  fullName: System.AppDomainSetup.TargetFrameworkName
- uid: System.AppDomainSetup.#ctor*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup
  nameWithType: AppDomainSetup.AppDomainSetup
- uid: System.AppDomainSetup.ActivationArguments*
  parent: System.AppDomainSetup
  isExternal: false
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
- uid: System.AppDomainSetup.AppDomainInitializer*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
- uid: System.AppDomainSetup.AppDomainInitializerArguments*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
- uid: System.AppDomainSetup.AppDomainManagerAssembly*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
- uid: System.AppDomainSetup.AppDomainManagerType*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
- uid: System.AppDomainSetup.ApplicationBase*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
- uid: System.AppDomainSetup.ApplicationName*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
- uid: System.AppDomainSetup.ApplicationTrust*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
- uid: System.AppDomainSetup.CachePath*
  parent: System.AppDomainSetup
  isExternal: false
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
- uid: System.AppDomainSetup.ConfigurationFile*
  parent: System.AppDomainSetup
  isExternal: false
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
- uid: System.AppDomainSetup.DisallowBindingRedirects*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
- uid: System.AppDomainSetup.DisallowCodeDownload*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
- uid: System.AppDomainSetup.DisallowPublisherPolicy*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
- uid: System.AppDomainSetup.DynamicBase*
  parent: System.AppDomainSetup
  isExternal: false
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
- uid: System.AppDomainSetup.GetConfigurationBytes*
  parent: System.AppDomainSetup
  isExternal: false
  name: GetConfigurationBytes
  nameWithType: AppDomainSetup.GetConfigurationBytes
- uid: System.AppDomainSetup.LicenseFile*
  parent: System.AppDomainSetup
  isExternal: false
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
- uid: System.AppDomainSetup.LoaderOptimization*
  parent: System.AppDomainSetup
  isExternal: false
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies*
  parent: System.AppDomainSetup
  isExternal: false
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
- uid: System.AppDomainSetup.PrivateBinPath*
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
- uid: System.AppDomainSetup.PrivateBinPathProbe*
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
- uid: System.AppDomainSetup.SandboxInterop*
  parent: System.AppDomainSetup
  isExternal: false
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
- uid: System.AppDomainSetup.SetCompatibilitySwitches*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetCompatibilitySwitches
  nameWithType: AppDomainSetup.SetCompatibilitySwitches
- uid: System.AppDomainSetup.SetConfigurationBytes*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetConfigurationBytes
  nameWithType: AppDomainSetup.SetConfigurationBytes
- uid: System.AppDomainSetup.SetNativeFunction*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetNativeFunction
  nameWithType: AppDomainSetup.SetNativeFunction
- uid: System.AppDomainSetup.ShadowCopyDirectories*
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
- uid: System.AppDomainSetup.ShadowCopyFiles*
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
- uid: System.AppDomainSetup.TargetFrameworkName*
  parent: System.AppDomainSetup
  isExternal: false
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
