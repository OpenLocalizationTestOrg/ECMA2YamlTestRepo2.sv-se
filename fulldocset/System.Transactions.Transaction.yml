### YamlMime:ManagedReference
items:
- uid: System.Transactions.Transaction
  id: Transaction
  children:
  - System.Transactions.Transaction.Clone
  - System.Transactions.Transaction.Current
  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  - System.Transactions.Transaction.Dispose
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.Equals(System.Object)
  - System.Transactions.Transaction.GetHashCode
  - System.Transactions.Transaction.GetPromotedToken
  - System.Transactions.Transaction.IsolationLevel
  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.PromoterType
  - System.Transactions.Transaction.Rollback
  - System.Transactions.Transaction.Rollback(System.Exception)
  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Transactions.Transaction.TransactionCompleted
  - System.Transactions.Transaction.TransactionInformation
  langs:
  - csharp
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
  type: Class
  summary: "Representerar en transaktion."
  remarks: "Den <xref:System.Transactions>namnområde ger både en explicit programmeringsmodell baserat på klassen transaktion, samt en implicit programmering modellen med den <xref:System.Transactions.TransactionScope>klassen, där hanteras transaktioner automatiskt av infrastrukturen.</xref:System.Transactions.TransactionScope> </xref:System.Transactions> Vi rekommenderar starkt att du använder lättare implicit modellen för utveckling. Om du vill komma igång finns det [implementera en Implicit transaktion med transaktionsomfånget](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) avsnittet. Mer information om hur du skriver en tillämpning finns [skriva A tillämpningen](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       Transaktionen-klassen innehåller metoder som används av utvecklare implementera resurshanterare för registrering. Det ger också funktioner för kloning av en transaktion och kontrollera den aktuella transaktionskontexten. Du kan hämta den aktuella transaktionen om ett anges med hjälp av statiskhet <xref:System.Transactions.Transaction.Current%2A>egenskap.</xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: 'public class Transaction : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Clone
  id: Clone
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Skapar en klon av transaktionen."
  remarks: "Kloner skapas om du vill skicka transaktioner.  Till exempel du kanske inte vill skicka en <xref:System.Transactions.CommittableTransaction>till andra program, eftersom du inte vill att andra att genomföra transaktionen.</xref:System.Transactions.CommittableTransaction>  Om du försöker konvertera eller serialisera en transaktion skapas en klon automatiskt åt dig."
  syntax:
    content: public System.Transactions.Transaction Clone ();
    parameters: []
    return:
      type: System.Transactions.Transaction
      description: "En <xref href=&quot;System.Transactions.Transaction&quot;> </xref> som är en kopia av det aktuella transaktionsobjektet."
  overload: System.Transactions.Transaction.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Current
  id: Current
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hämtar eller anger den omgivande transaktionen."
  remarks: "Mer information om omgivande transaktioner finns i avsnittet &quot;Hantera transaktionsflöde med TransactionScopeOption&quot; för den [implementera en Implicit transaktion med transaktionsomfånget](~/add/includes/ajax-current-ext-md.md) avsnittet.       Men du kan ange den omgivande transaktionen som använder den här egenskapen bör du använda den <xref:System.Transactions.TransactionScope>objekt att ändra den omgivande transaktionen när det är möjligt.</xref:System.Transactions.TransactionScope>       Den här egenskapen är statisk tråd. Om du ändrar den omgivande transaktionen som använder den här egenskapen i en <xref:System.Transactions.TransactionScope>en <xref:System.InvalidOperationException>genereras när <xref:System.Transactions.TransactionScope.Dispose%2A>anropas, och det tidigare värdet omgivande transaktionen återställs.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope>"
  syntax:
    content: public static System.Transactions.Transaction Current { get; set; }
    return:
      type: System.Transactions.Transaction
      description: "En <xref href=&quot;System.Transactions.Transaction&quot;> </xref> som beskriver den aktuella transaktionen."
  overload: System.Transactions.Transaction.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  id: DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Skapar en underordnad klon av transaktionen."
  remarks: "En beroende transaktionen är en vars resultat beroende på resultatet av transaktionen som klonades.       Den `cloneoption` parameter styr vilka slags beroende transaktion för att skapa. Om en beroende transaktion skapas med <xref:System.Transactions.DependentCloneOption>, blockeras processen genomförande av transaktionen tills transaktionen timeout eller <xref:System.Transactions.DependentTransaction.Complete%2A>anropas på <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.DependentCloneOption> Om den har skapats med <xref:System.Transactions.DependentCloneOption>, den automatiskt avbryter transaktionen om <xref:System.Transactions.CommittableTransaction.Commit%2A>anropas innan <xref:System.Transactions.DependentTransaction.Complete%2A>anropas på <xref:System.Transactions.DependentTransaction>.</xref:System.Transactions.DependentTransaction> </xref:System.Transactions.DependentTransaction.Complete%2A> </xref:System.Transactions.CommittableTransaction.Commit%2A> </xref:System.Transactions.DependentCloneOption>"
  example:
  - "The following example shows you how to create a dependent transaction.  \n  \n [!code-vb[Tx_DependentTx#1](~/add/codesnippet/visualbasic/a081f0f4-5473-43fc-b7fe-_1.vb)]\n [!code-cs[Tx_DependentTx#1](~/add/codesnippet/csharp/a081f0f4-5473-43fc-b7fe-_1.cs)]"
  syntax:
    content: public System.Transactions.DependentTransaction DependentClone (System.Transactions.DependentCloneOption cloneOption);
    parameters:
    - id: cloneOption
      type: System.Transactions.DependentCloneOption
      description: "En <xref href=&quot;System.Transactions.DependentCloneOption&quot;> </xref> som anger vilken typ av beroende transaktion för att skapa."
    return:
      type: System.Transactions.DependentTransaction
      description: "En <xref href=&quot;System.Transactions.DependentTransaction&quot;> </xref> som representerar beroende klonen."
  overload: System.Transactions.Transaction.DependentClone*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Dispose
  id: Dispose
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Släpper de resurser som innehas av objektet."
  remarks: "Om du ändrar den omgivande transaktionen genom att ange <xref:System.Transactions.Transaction.Current%2A>inuti en <xref:System.Transactions.TransactionScope>en <xref:System.InvalidOperationException>genereras när <xref:System.Transactions.TransactionScope.Dispose%2A>anropas, och det tidigare värdet omgivande transaktionen återställs.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.InvalidOperationException> </xref:System.Transactions.TransactionScope> </xref:System.Transactions.Transaction.Current%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.Transaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger en beständig resurshanterare som stöder två fasen genomförande för att delta i en transaktion."
  remarks: "Resurshanterare med en varaktig registrering måste kunna återställa om de får ett fel. Mer information om återställning finns [utför återställningen](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Mer information om temporär och beständig resurser, samt hur du registrerar en resurs finns [implementera en Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).  Mer information om hur en resurshanterare svarar för att spara meddelanden och förbereda genomförande i två faser finns [genomför en transaktion i Single-Phase och flera fas](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Resurshanterare registrerad för deltagande i en transaktion med den här metoden postavisering två fasen genomförande som motsvarar de metoder som definierats för den <xref:System.Transactions.IEnlistmentNotification>gränssnitt.</xref:System.Transactions.IEnlistmentNotification>"
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "En unik identifierare för en resurshanterare som bör kvarstår i resource manager fel eller starta om datorn."
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Ett objekt som implementerar det <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> gränssnittet på två fasen commit-meddelanden."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Om resurshanteraren vill utföra ytterligare arbete under förberedningsfasen."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -objektet som beskriver listan."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger en beständig resurshanterare som stöder en fas delegering för att delta i en transaktion."
  remarks: "Resurshanterare med en varaktig registrering måste kunna återställa om de får ett fel. Mer information om återställning finns [utför återställningen](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691). Mer information om temporär och beständig resurser, samt hur du registrerar en resurs finns [implementera en Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).       Observera att även om att registrera sig med den här metoden implementeringen resource manager, det inte är säkert att den tar emot ett enda steg genomförande. Transaktionshanteraren kan fortfarande skicka två fasen commit-meddelanden i stället. Mer information om en fas delegering finns [optimering med enda fasen genomförande och upphöja samma fas anmälan](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistDurable (Guid resourceManagerIdentifier, System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "En unik identifierare för en resurshanterare som bör kvarstår i resource manager fel eller starta om datorn."
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Ett objekt som implementerar det <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> gränssnitt som måste kunna ta emot en fas genomförande och två fasen commit-meddelanden."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Om resurshanteraren vill utföra ytterligare arbete under förberedningsfasen."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -objektet som beskriver listan."
  overload: System.Transactions.Transaction.EnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger en resurshanterare som har en intern transaktion med hjälp av en upphöja en fas-registrering (PSPE)."
  remarks: "Registreringar i en transaktion är beständig; de det vill säga inte klarar fel på deltagaren. Dessutom kan den här metoden endast föreslår transaktionshanteraren för att eskalera kontrollen, men eskalering själva är inte säkert. Om eskalering misslyckas, meddelas inte användaren och transaktionen återställs.       Parametern `promotableSinglePhaseNotification` används för att kommunicera med transaktionshanteraren om resultatet av försöker genomföra med resource manager interna transaktionen.  Om inkonsekventa data rapporteras utlöser transaktionshanteraren ett undantag. Om en <xref:System.Transactions.TransactionStatus>resultatet rapporteras, transaktionshanteraren söker efter resultatet meddelandet i sin egen interna registrering och ignorerar rapporterade svaret.</xref:System.Transactions.TransactionStatus>       Mer information om registreringar och Eskalering av en transaktion finns [transaktion Management eskalering](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7). Mer information om PSPE finns [optimering med enda fasen spara och upphöja samma fas anmälan](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb).       **Obs** den här metoden använder <xref:System.Security.Permissions.SecurityAction>att förhindra att anropas från icke betrodd kod; dock endast omedelbar anropare krävs för att inneha den `FullTrust` behörighetsgruppen.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "En <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> gränssnitt som implementerats av deltagaren."
    return:
      type: System.Boolean
      description: "En <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> gränssnitt implementering som beskriver listan."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger en resurshanterare som har en intern transaktion med hjälp av en upphöja en fas-registrering (PSPE)."
  remarks: "Om värdet som angetts för den `promoterType` parametern är `TransactionInterop.PromoterTypeDtc`, transaktionen **måste** uppgraderas av MSDTC och `byte[]` returnerades från den `IPromotableSinglePhaseNotification.Promote` metoden **måste** vara en Spridningstoken för MSDTC-transaktion.       Om värdet som angetts för den `promoterType` parametern är **inte**`TransactionInterop.PromoterTypeDTC`, kommer inte att upphöja transaktionen MSDTC, men i stället genom anroparens implementeringen av `IPromotableSinglePhaseNotification`. Om anropet lyckades, det finns en uppsättning efterföljande åtgärder på transaktionen som returnerar en `TransactionPromotionException`. Dessa åtgärder är:- `Transaction.EnlistDurable`       -    `TransactionInterop.GetDtcTransaction`       -    `TransactionInterop.GetExportCookie`       -    `TransctionInterop.GetTransmitterPropagationToken` -serialisering av ett Transaction-objekt"
  syntax:
    content: public bool EnlistPromotableSinglePhase (System.Transactions.IPromotableSinglePhaseNotification promotableSinglePhaseNotification, Guid promoterType);
    parameters:
    - id: promotableSinglePhaseNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "En <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> gränssnitt som implementerats av deltagaren."
    - id: promoterType
      type: System.Guid
      description: "Typ av processor för distribuerad transaktion."
    return:
      type: System.Boolean
      description: "En <xref href=&quot;System.Transactions.SinglePhaseEnlistment&quot;> </xref> gränssnitt implementering som beskriver listan."
  overload: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger en temporär resurshanterare som stöder två fasen genomförande för att delta i en transaktion."
  remarks: "Temporär resurshanterare inte återställa från fel för att slutföra en transaktion som de deltar. Så här skaffar du en beständig registrering i en transaktion i <xref:System.Transactions.Transaction.EnlistDurable%2A>metod.</xref:System.Transactions.Transaction.EnlistDurable%2A>       Resurshanterare registrerad för deltagande i en transaktion med den här metoden postavisering två fasen genomförande som motsvarar de metoder som definierats för den <xref:System.Transactions.IEnlistmentNotification>gränssnitt.</xref:System.Transactions.IEnlistmentNotification>"
  example:
  - "The following example shows an implementation of <xref:System.Transactions.IEnlistmentNotification> interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/1d69bab4-4268-46d9-8f3f-_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/1d69bab4-4268-46d9-8f3f-_1.vb)]"
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.IEnlistmentNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "Ett objekt som implementerar det <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> gränssnittet för att ta emot meddelanden i två faser."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Om resurshanteraren vill utföra ytterligare arbete under förberedningsfasen."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -objektet som beskriver listan."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger en temporär resurshanterare som stöder en fas delegering för att delta i en transaktion."
  remarks: "Temporär resurshanterare inte återställa från fel för att slutföra en transaktion som de deltar. Så här skaffar du en beständig registrering i en transaktion i <xref:System.Transactions.Transaction.EnlistDurable%2A>metod.</xref:System.Transactions.Transaction.EnlistDurable%2A> Mer information om temporär och beständig resurser, samt hur du registrerar en resurs finns [implementera en Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e). Mer information om hur en resurshanterare svarar för att spara meddelanden och förbereda genomförandet finns [genomför en transaktion i Single-Phase och flera fas](http://msdn.microsoft.com/en-us/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).       Observera att även om att registrera sig med den här metoden implementeringen resource manager, det inte är säkert att den tar emot ett enda steg genomförande. Transaktionshanteraren kan fortfarande skicka två fasen commit-meddelanden i stället. Mer information om en fas delegering finns [optimering med enda fasen genomförande och upphöja samma fas anmälan](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)."
  syntax:
    content: public System.Transactions.Enlistment EnlistVolatile (System.Transactions.ISinglePhaseNotification singlePhaseNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: singlePhaseNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Ett objekt som implementerar det <xref href=&quot;System.Transactions.ISinglePhaseNotification&quot;> </xref> gränssnitt som måste kunna ta emot en fas genomförande och två fasen commit-meddelanden."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Om resurshanteraren vill utföra ytterligare arbete under förberedningsfasen."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> -objektet som beskriver listan."
  overload: System.Transactions.Transaction.EnlistVolatile*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger om den här transaktionen och det angivna objektet är lika."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som ska jämföras med den här instansen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> obj </code> och den här transaktionen är identiska, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Transactions.Transaction.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetHashCode
  id: GetHashCode
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Returnerar hash-koden för den här instansen."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En 32-bitars heltal hash-kod."
  overload: System.Transactions.Transaction.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.GetPromotedToken
  id: GetPromotedToken
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hämtar den `byte[]` returneras av den `Promote` metoden när transaktionen befordras."
  remarks: "Den här metoden har sidoeffekt orsaka befordran av transaktionen om det inte redan höjs.       Formatet för den returnerade `byte[]` definieras av värdet för den `Transation.PromoterType` egenskapen. Om värdet för den `Transaction.PromoterType` egenskapen är `TransactionInterop.PromoterTypeDtc` eller `Guid.Empty`, sedan `byte[]` returneras av den här metoden är en Spridningstoken för MSDTC-sändaren. Ett annat värde för den `Transaction.PromoterType` egenskapen anger ett format som definieras av anroparen av `Transaction.EnlistPromotableSinglePhase` som angetts egenskapsvärdet för typen. För att tolka den upphöjda token i det senare fallet behöver du i dokumentationen för den kod som gjorts i `EnlistPromotableSinglePhase` anropa."
  syntax:
    content: public byte[] GetPromotedToken ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Den `byte[]` returneras av den `Promote` metoden när transaktionen befordras."
  overload: System.Transactions.Transaction.GetPromotedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.IsolationLevel
  id: IsolationLevel
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hämtar isoleringsnivå för transaktionen."
  remarks: "Isolering avgör av en transaktion vilken åtkomstnivå som andra transaktioner måste föränderliga data innan en transaktion har slutförts. Mer information om-isoleringsnivåer finns i dokumentationen för den <xref:System.Transactions.IsolationLevel>uppräkningen.</xref:System.Transactions.IsolationLevel>"
  syntax:
    content: public System.Transactions.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Transactions.IsolationLevel
      description: "En av de <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> värden som anger isoleringsnivå för transaktionen."
  overload: System.Transactions.Transaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Testar om två angivna <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instanser är likvärdiga."
  syntax:
    content: public static bool op_Equality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "Den <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -instans som är till vänster om likhetsoperatorn."
    - id: y
      type: System.Transactions.Transaction
      description: "Den <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -instans som är till höger om likhetsoperatorn."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  id: op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
  type: Operator
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Returnerar ett värde som anger om två <xref href=&quot;System.Transactions.Transaction&quot;> </xref> instanser är inte lika."
  syntax:
    content: public static bool op_Inequality (System.Transactions.Transaction x, System.Transactions.Transaction y);
    parameters:
    - id: x
      type: System.Transactions.Transaction
      description: "Den <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -instans som är till vänster om operatorn olikhet."
    - id: y
      type: System.Transactions.Transaction
      description: "Den <xref href=&quot;System.Transactions.Transaction&quot;> </xref> -instans som är till höger om operatorn olikhet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>x</code> and <code>y</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Transactions.Transaction.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  id: PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Stöds i .NET Framework 4.5.2 och senare versioner]       Flyttar upp och registrerar en beständig resurshanterare som stöder två fasen genomförande för att delta i en transaktion."
  syntax:
    content: public System.Transactions.Enlistment PromoteAndEnlistDurable (Guid resourceManagerIdentifier, System.Transactions.IPromotableSinglePhaseNotification promotableNotification, System.Transactions.ISinglePhaseNotification enlistmentNotification, System.Transactions.EnlistmentOptions enlistmentOptions);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "En unik identifierare för en resurshanterare som bör kvarstår i resource manager fel eller starta om datorn."
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "Ett objekt som fungerar som ett genomförande ombud för en intern för en resurshanterare inte distribuerad transaktion."
    - id: enlistmentNotification
      type: System.Transactions.ISinglePhaseNotification
      description: "Ett objekt som implementerar det <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> gränssnittet på två fasen commit-meddelanden."
    - id: enlistmentOptions
      type: System.Transactions.EnlistmentOptions
      description: "<xref href=&quot;System.Transactions.EnlistmentOptions&quot;></xref>Om resurshanteraren vill utföra ytterligare arbete under förberedningsfasen."
    return:
      type: System.Transactions.Enlistment
      description: "[Stöds i .NET Framework 4.5.2 och senare versioner]       Flyttar upp och registrerar en beständig resurshanterare som stöder två fasen genomförande för att delta i en transaktion."
  overload: System.Transactions.Transaction.PromoteAndEnlistDurable*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.PromoterType
  id: PromoterType
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Identifierar formatet för den `byte[]` returneras av metoden Promote när transaktionen befordras."
  remarks: "Om transaktionen inte har ännu uppgraderats och ännu inte har en upphöja en fas registrering, värdet för den här egenskapen kommer att `Guid.Empty`. Om transaktionen har eller befordras till MSDTC och sedan värdet för den här egenskapen ska vara `TransactionInterop.PromoterTypeDtc`. Om transaktionen har eller befordras av en icke-MSDTC förslagsställare, värdet för den här egenskapen kommer att värdet som har angetts till ett tidigare anrop till `Transaction.EnlistPromotableSinglePhase`."
  syntax:
    content: public Guid PromoterType { get; }
    return:
      type: System.Guid
      description: "Ett guid som unikt identifierar formatet för den `byte[]` returneras av metoden Promote när transaktionen befordras."
  overload: System.Transactions.Transaction.PromoterType*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback
  id: Rollback
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Samlar tillbaka (avbryts) transaktionen."
  remarks: "En kopia av ett transaction-objekt kan starta återställningen av transaktionen genom att anropa den här metoden. Endast ursprungliga transaction-objektet, vilket är en <xref:System.Transactions.CommittableTransaction>objekt, kan användas för att initiera ett försök att genomföra transaktionen.</xref:System.Transactions.CommittableTransaction> Ett undantag när den här metoden anropas när resultatet av transaktionen har redan fastställts."
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  id: Rollback(System.Exception)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Samlar tillbaka (avbryts) transaktionen."
  syntax:
    content: public void Rollback (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "En förklaring till varför en återställning uppstod."
  overload: System.Transactions.Transaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  id: SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger distribuerade transaktionen ID genereras av icke-MSDTC förslagsställare."
  remarks: "Den här metoden kan endast anropas har medan den `IPromotableSinglePhaseNotification.Promote` metoden bearbetas. Om den här metoden anropas när som helst andra en `TransactionException` genereras.       Det angivna värdet för den `promotableNotification` parametern måste vara samma objekt som ursprungligen angavs till den `Transaction.EnlistPromotableSinglePhase` anrop. Om detta inte är fallet, och sedan en `InvalidOperationException` genereras."
  syntax:
    content: public void SetDistributedTransactionIdentifier (System.Transactions.IPromotableSinglePhaseNotification promotableNotification, Guid distributedTransactionIdentifier);
    parameters:
    - id: promotableNotification
      type: System.Transactions.IPromotableSinglePhaseNotification
      description: "En <xref href=&quot;System.Transactions.IPromotableSinglePhaseNotification&quot;> </xref> gränssnitt som implementerats av deltagaren."
    - id: distributedTransactionIdentifier
      type: System.Guid
      description: "Identifierare för transaktionen som används av den distribuerade transaktionshanteraren."
  overload: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hämtar en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> med de data som krävs för att serialisera den här transaktionen."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> att fylla i med data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Målet (se <xref:System.Runtime.Serialization.StreamingContext>) för den här serialisering.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionCompleted
  id: TransactionCompleted
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger att transaktionen har slutförts."
  remarks: "Du kan registrera för den här händelsen i stället för en temporär registrering för att hämta information om resultatet för transaktioner. Parametern som överförts till den <xref:System.Transactions.TransactionCompletedEventHandler>ombud är en <xref:System.Transactions.Transaction>instans.</xref:System.Transactions.Transaction> </xref:System.Transactions.TransactionCompletedEventHandler> Du kan fråga på <xref:System.Transactions.Transaction.TransactionInformation%2A>-egenskapen för den specifika instans att hämta en instans av <xref:System.Transactions.TransactionInformation>, vars <xref:System.Transactions.TransactionInformation.Status%2A>egenskap innehåller statusen för en transaktion med antingen den <xref:System.Transactions.TransactionStatus>eller <xref:System.Transactions.TransactionStatus>värde.</xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionStatus> </xref:System.Transactions.TransactionInformation.Status%2A> </xref:System.Transactions.TransactionInformation> </xref:System.Transactions.Transaction.TransactionInformation%2A>       **Varning** registrerar dig för den här händelsen negativt påverkar prestanda för transaktionen som den är kopplad till."
  example:
  - "The following sample shows how an application can obtain the outcome of a transaction by subscribing to the TransactionCompleted event.  \n  \n [!code-cs[Tx_Outcome#1](~/add/codesnippet/csharp/e-system.transactions.tr_1.cs)]\n [!code-vb[Tx_Outcome#1](~/add/codesnippet/visualbasic/e-system.transactions.tr_1.vb)]"
  syntax:
    content: public event System.Transactions.TransactionCompletedEventHandler TransactionCompleted;
    return:
      type: System.Transactions.TransactionCompletedEventHandler
      description: "Som ska läggas till."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ett försök att prenumerera på den här händelsen på en transaktion som har tagits bort."
  platform:
  - net462
- uid: System.Transactions.Transaction.TransactionInformation
  id: TransactionInformation
  parent: System.Transactions.Transaction
  langs:
  - csharp
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hämtar ytterligare information om en transaktion."
  syntax:
    content: public System.Transactions.TransactionInformation TransactionInformation { get; }
    return:
      type: System.Transactions.TransactionInformation
      description: "En <xref href=&quot;System.Transactions.TransactionInformation&quot;> </xref> som innehåller ytterligare information om transaktionen."
  overload: System.Transactions.Transaction.TransactionInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Transactions.Transaction.Clone
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone()
  nameWithType: Transaction.Clone()
  fullName: System.Transactions.Transaction.Clone()
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.Transaction.Current
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
  fullName: System.Transactions.Transaction.Current
- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone(DependentCloneOption)
  nameWithType: Transaction.DependentClone(DependentCloneOption)
  fullName: System.Transactions.Transaction.DependentClone(DependentCloneOption)
- uid: System.Transactions.DependentTransaction
  parent: System.Transactions
  isExternal: false
  name: DependentTransaction
  nameWithType: DependentTransaction
  fullName: System.Transactions.DependentTransaction
- uid: System.Transactions.DependentCloneOption
  parent: System.Transactions
  isExternal: false
  name: DependentCloneOption
  nameWithType: DependentCloneOption
  fullName: System.Transactions.DependentCloneOption
- uid: System.Transactions.Transaction.Dispose
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose()
  nameWithType: Transaction.Dispose()
  fullName: System.Transactions.Transaction.Dispose()
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.EnlistmentOptions
  parent: System.Transactions
  isExternal: false
  name: EnlistmentOptions
  nameWithType: EnlistmentOptions
  fullName: System.Transactions.EnlistmentOptions
- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistDurable(Guid,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.ISinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: ISinglePhaseNotification
  nameWithType: ISinglePhaseNotification
  fullName: System.Transactions.ISinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Transactions.IPromotableSinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: IPromotableSinglePhaseNotification
  nameWithType: IPromotableSinglePhaseNotification
  fullName: System.Transactions.IPromotableSinglePhaseNotification
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(IEnlistmentNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.EnlistVolatile(ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.Equals(System.Object)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: System.Transactions.Transaction.Equals(Object)
- uid: System.Transactions.Transaction.GetHashCode
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: System.Transactions.Transaction.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Transactions.Transaction.GetPromotedToken
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken()
  nameWithType: Transaction.GetPromotedToken()
  fullName: System.Transactions.Transaction.GetPromotedToken()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.Transaction.IsolationLevel
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
  fullName: System.Transactions.Transaction.IsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality(Transaction,Transaction)
  nameWithType: Transaction.op_Equality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Equality(Transaction,Transaction)
- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality(Transaction,Transaction)
  nameWithType: Transaction.op_Inequality(Transaction,Transaction)
  fullName: System.Transactions.Transaction.op_Inequality(Transaction,Transaction)
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  nameWithType: Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
  fullName: System.Transactions.Transaction.PromoteAndEnlistDurable(Guid,IPromotableSinglePhaseNotification,ISinglePhaseNotification,EnlistmentOptions)
- uid: System.Transactions.Transaction.PromoterType
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
  fullName: System.Transactions.Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback()
  nameWithType: Transaction.Rollback()
  fullName: System.Transactions.Transaction.Rollback()
- uid: System.Transactions.Transaction.Rollback(System.Exception)
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback(Exception)
  nameWithType: Transaction.Rollback(Exception)
  fullName: System.Transactions.Transaction.Rollback(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
  fullName: System.Transactions.Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification,Guid)
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Transactions.Transaction.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Transactions.Transaction.TransactionCompleted
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionCompleted
  nameWithType: Transaction.TransactionCompleted
  fullName: System.Transactions.Transaction.TransactionCompleted
- uid: System.Transactions.TransactionCompletedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionCompletedEventHandler
  nameWithType: TransactionCompletedEventHandler
  fullName: System.Transactions.TransactionCompletedEventHandler
- uid: System.Transactions.Transaction.TransactionInformation
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
  fullName: System.Transactions.Transaction.TransactionInformation
- uid: System.Transactions.TransactionInformation
  parent: System.Transactions
  isExternal: false
  name: TransactionInformation
  nameWithType: TransactionInformation
  fullName: System.Transactions.TransactionInformation
- uid: System.Transactions.Transaction.Clone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Clone
  nameWithType: Transaction.Clone
- uid: System.Transactions.Transaction.Current*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Current
  nameWithType: Transaction.Current
- uid: System.Transactions.Transaction.DependentClone*
  parent: System.Transactions.Transaction
  isExternal: false
  name: DependentClone
  nameWithType: Transaction.DependentClone
- uid: System.Transactions.Transaction.Dispose*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Dispose
  nameWithType: Transaction.Dispose
- uid: System.Transactions.Transaction.EnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistDurable
  nameWithType: Transaction.EnlistDurable
- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistPromotableSinglePhase
  nameWithType: Transaction.EnlistPromotableSinglePhase
- uid: System.Transactions.Transaction.EnlistVolatile*
  parent: System.Transactions.Transaction
  isExternal: false
  name: EnlistVolatile
  nameWithType: Transaction.EnlistVolatile
- uid: System.Transactions.Transaction.Equals*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Equals
  nameWithType: Transaction.Equals
- uid: System.Transactions.Transaction.GetHashCode*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetHashCode
  nameWithType: Transaction.GetHashCode
- uid: System.Transactions.Transaction.GetPromotedToken*
  parent: System.Transactions.Transaction
  isExternal: false
  name: GetPromotedToken
  nameWithType: Transaction.GetPromotedToken
- uid: System.Transactions.Transaction.IsolationLevel*
  parent: System.Transactions.Transaction
  isExternal: false
  name: IsolationLevel
  nameWithType: Transaction.IsolationLevel
- uid: System.Transactions.Transaction.op_Equality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Equality
  nameWithType: Transaction.op_Equality
- uid: System.Transactions.Transaction.op_Inequality*
  parent: System.Transactions.Transaction
  isExternal: false
  name: op_Inequality
  nameWithType: Transaction.op_Inequality
- uid: System.Transactions.Transaction.PromoteAndEnlistDurable*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoteAndEnlistDurable
  nameWithType: Transaction.PromoteAndEnlistDurable
- uid: System.Transactions.Transaction.PromoterType*
  parent: System.Transactions.Transaction
  isExternal: false
  name: PromoterType
  nameWithType: Transaction.PromoterType
- uid: System.Transactions.Transaction.Rollback*
  parent: System.Transactions.Transaction
  isExternal: false
  name: Rollback
  nameWithType: Transaction.Rollback
- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier*
  parent: System.Transactions.Transaction
  isExternal: false
  name: SetDistributedTransactionIdentifier
  nameWithType: Transaction.SetDistributedTransactionIdentifier
- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Transactions.Transaction
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Transaction.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Transactions.Transaction.TransactionInformation*
  parent: System.Transactions.Transaction
  isExternal: false
  name: TransactionInformation
  nameWithType: Transaction.TransactionInformation
