### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.ServerProtocol
  id: ServerProtocol
  children:
  - System.Web.Services.Protocols.ServerProtocol.#ctor
  - System.Web.Services.Protocols.ServerProtocol.AddToCache(System.Type,System.Type,System.Object)
  - System.Web.Services.Protocols.ServerProtocol.Context
  - System.Web.Services.Protocols.ServerProtocol.GetFromCache(System.Type,System.Type)
  - System.Web.Services.Protocols.ServerProtocol.Request
  - System.Web.Services.Protocols.ServerProtocol.Response
  - System.Web.Services.Protocols.ServerProtocol.Target
  langs:
  - csharp
  name: ServerProtocol
  nameWithType: ServerProtocol
  fullName: System.Web.Services.Protocols.ServerProtocol
  type: Class
  summary: ".NET Framework använder klasser som härleds från klassen ServerProtocol att bearbeta XML-webbtjänsten tjänstbegäranden."
  syntax:
    content: public abstract class ServerProtocol
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.ServerProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.ServerProtocol
  langs:
  - csharp
  name: ServerProtocol()
  nameWithType: ServerProtocol.ServerProtocol()
  fullName: System.Web.Services.Protocols.ServerProtocol.ServerProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Konstruktorn för <xref href=&quot;System.Web.Services.Protocols.ServerProtocol&quot;> </xref>."
  syntax:
    content: protected ServerProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.ServerProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.ServerProtocol.AddToCache(System.Type,System.Type,System.Object)
  id: AddToCache(System.Type,System.Type,System.Object)
  parent: System.Web.Services.Protocols.ServerProtocol
  langs:
  - csharp
  name: AddToCache(Type,Type,Object)
  nameWithType: ServerProtocol.AddToCache(Type,Type,Object)
  fullName: System.Web.Services.Protocols.ServerProtocol.AddToCache(Type,Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Lagrar en <xref:System.Object>i cachen med en nyckel som skapas från den angivna protokolltyp och servertyp.</xref:System.Object>"
  syntax:
    content: protected void AddToCache (Type protocolType, Type serverType, object value);
    parameters:
    - id: protocolType
      type: System.Type
      description: "En <xref:System.Type>som används för att skapa nyckeln för att lagra `value` i cacheminnet.</xref:System.Type>"
    - id: serverType
      type: System.Type
      description: "En <xref:System.Type>som används för att skapa nyckeln för att lagra `value` i cacheminnet.</xref:System.Type>"
    - id: value
      type: System.Object
      description: "Den <xref:System.Object>som ska lagras i cacheminnet.</xref:System.Object>"
  overload: System.Web.Services.Protocols.ServerProtocol.AddToCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.ServerProtocol.Context
  id: Context
  parent: System.Web.Services.Protocols.ServerProtocol
  langs:
  - csharp
  name: Context
  nameWithType: ServerProtocol.Context
  fullName: System.Web.Services.Protocols.ServerProtocol.Context
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar den <xref href=&quot;System.Web.HttpContext&quot;> </xref> objekt för den härledda klassen."
  syntax:
    content: protected System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "En <xref href=&quot;System.Web.HttpContext&quot;> </xref> objekt."
  overload: System.Web.Services.Protocols.ServerProtocol.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.ServerProtocol.GetFromCache(System.Type,System.Type)
  id: GetFromCache(System.Type,System.Type)
  parent: System.Web.Services.Protocols.ServerProtocol
  langs:
  - csharp
  name: GetFromCache(Type,Type)
  nameWithType: ServerProtocol.GetFromCache(Type,Type)
  fullName: System.Web.Services.Protocols.ServerProtocol.GetFromCache(Type,Type)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar den <xref:System.Object>som lagras i cachen med den nyckel som skapades från den angivna protokolltyp och servertyp.</xref:System.Object>"
  syntax:
    content: protected object GetFromCache (Type protocolType, Type serverType);
    parameters:
    - id: protocolType
      type: System.Type
      description: "En <xref:System.Type>som används för att skapa nyckeln för att hämta `value` från cacheminnet.</xref:System.Type>"
    - id: serverType
      type: System.Type
      description: "En <xref:System.Type>som används för att skapa nyckeln för att hämta `value` från cacheminnet.</xref:System.Type>"
    return:
      type: System.Object
      description: "Den <xref:System.Object>som lagras i cachen med nyckeln som har skapats från <code> protocolType </code> och <code> serverType </code>.</xref:System.Object>"
  overload: System.Web.Services.Protocols.ServerProtocol.GetFromCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.ServerProtocol.Request
  id: Request
  parent: System.Web.Services.Protocols.ServerProtocol
  langs:
  - csharp
  name: Request
  nameWithType: ServerProtocol.Request
  fullName: System.Web.Services.Protocols.ServerProtocol.Request
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar den <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objekt för den härledda klassen."
  syntax:
    content: protected System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "En <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objekt."
  overload: System.Web.Services.Protocols.ServerProtocol.Request*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.ServerProtocol.Response
  id: Response
  parent: System.Web.Services.Protocols.ServerProtocol
  langs:
  - csharp
  name: Response
  nameWithType: ServerProtocol.Response
  fullName: System.Web.Services.Protocols.ServerProtocol.Response
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar den <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objekt för den härledda klassen."
  syntax:
    content: protected System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "En <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objekt."
  overload: System.Web.Services.Protocols.ServerProtocol.Response*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.ServerProtocol.Target
  id: Target
  parent: System.Web.Services.Protocols.ServerProtocol
  langs:
  - csharp
  name: Target
  nameWithType: ServerProtocol.Target
  fullName: System.Web.Services.Protocols.ServerProtocol.Target
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar serviceobjektet som anropas."
  syntax:
    content: protected virtual object Target { get; }
    return:
      type: System.Object
      description: "Serviceobjektet som anropas."
  overload: System.Web.Services.Protocols.ServerProtocol.Target*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.ServerProtocol.#ctor
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: ServerProtocol()
  nameWithType: ServerProtocol.ServerProtocol()
  fullName: System.Web.Services.Protocols.ServerProtocol.ServerProtocol()
- uid: System.Web.Services.Protocols.ServerProtocol.AddToCache(System.Type,System.Type,System.Object)
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: AddToCache(Type,Type,Object)
  nameWithType: ServerProtocol.AddToCache(Type,Type,Object)
  fullName: System.Web.Services.Protocols.ServerProtocol.AddToCache(Type,Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.ServerProtocol.Context
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: Context
  nameWithType: ServerProtocol.Context
  fullName: System.Web.Services.Protocols.ServerProtocol.Context
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Services.Protocols.ServerProtocol.GetFromCache(System.Type,System.Type)
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: GetFromCache(Type,Type)
  nameWithType: ServerProtocol.GetFromCache(Type,Type)
  fullName: System.Web.Services.Protocols.ServerProtocol.GetFromCache(Type,Type)
- uid: System.Web.Services.Protocols.ServerProtocol.Request
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: Request
  nameWithType: ServerProtocol.Request
  fullName: System.Web.Services.Protocols.ServerProtocol.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.Services.Protocols.ServerProtocol.Response
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: Response
  nameWithType: ServerProtocol.Response
  fullName: System.Web.Services.Protocols.ServerProtocol.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.Services.Protocols.ServerProtocol.Target
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: Target
  nameWithType: ServerProtocol.Target
  fullName: System.Web.Services.Protocols.ServerProtocol.Target
- uid: System.Web.Services.Protocols.ServerProtocol.#ctor*
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: ServerProtocol
  nameWithType: ServerProtocol.ServerProtocol
- uid: System.Web.Services.Protocols.ServerProtocol.AddToCache*
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: AddToCache
  nameWithType: ServerProtocol.AddToCache
- uid: System.Web.Services.Protocols.ServerProtocol.Context*
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: Context
  nameWithType: ServerProtocol.Context
- uid: System.Web.Services.Protocols.ServerProtocol.GetFromCache*
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: GetFromCache
  nameWithType: ServerProtocol.GetFromCache
- uid: System.Web.Services.Protocols.ServerProtocol.Request*
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: Request
  nameWithType: ServerProtocol.Request
- uid: System.Web.Services.Protocols.ServerProtocol.Response*
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: Response
  nameWithType: ServerProtocol.Response
- uid: System.Web.Services.Protocols.ServerProtocol.Target*
  parent: System.Web.Services.Protocols.ServerProtocol
  isExternal: false
  name: Target
  nameWithType: ServerProtocol.Target
