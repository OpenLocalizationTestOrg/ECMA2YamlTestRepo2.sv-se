### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  id: SupportedAddressingMode
  children:
  - System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  - System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  - System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  langs:
  - csharp
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
  type: Enum
  summary: "Anger om en tjänst stöder skicka svar till anonyma adresser endast icke-anonyma adresser, eller båda."
  remarks: "Den här uppräkningen används för att ange kapaciteten för en server, som i sin tur inför ett krav på klienter.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]har olika adresser kontroller för att ange om meddelanden ska skickas. Det är exempelvis den logiska <xref:System.ServiceModel.Channels.MessageHeaders.To%2A>adress för meddelande-mål, fysiskt (&quot;Via&quot;) adress som används av transport, som lyssnar på en tjänst, och <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>-adressen för den slutpunkt som ger klienten slutpunktens adress.</xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> </xref:System.ServiceModel.Channels.MessageHeaders.To%2A>       I det enklaste fallet när två parter skickar meddelanden mellan dem, är det inte nödvändigt att ange dessa adresser separat. Men eftersom utbyten kan omfatta andra meddelande-mål, du måste kunna ange när adresser måste anges explicit. Även mellan två parter krävs denna möjlighet ibland, som med dubbla HTTP där servern måste skapa en egen HTTP-begäran. Följande typer av relationer som definieras av uppräkningen SupportedAddressingMode att samla in dessa meddelandemönster:-anonyma adresser är den enklaste formen av adressering. Anonym adressering används när det finns en standardsökväg för svar. TCP är en dubbelriktad kommunikation transport och svar på ett TCP-meddelande kan skickas tillbaka till den andra sidan av socket som skickat det ursprungliga meddelandet. På liknande sätt, skickar request-reply-modellen för HTTP-svar via HTTP-svar-kanalen. Ingen av dessa svar måste där svarsmeddelanden kommer. När en server kräver anonym svar från klienten, använder anonym värdet för uppräkningen. Den [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] systembaserade <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding>och <xref:System.ServiceModel.WSHttpBinding>Bindningar alltid använda anonyma adresser.</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.BasicHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -Icke-anonyma adresser används när du skickar svar måste du skapa en ny kanal för kommunikation. Den [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] systembaserade <xref:System.ServiceModel.WSDualHttpBinding>bindningen använder en icke-anonym adress.</xref:System.ServiceModel.WSDualHttpBinding> Klienten skapar en HTTP-begäran för att skicka ett meddelande med dubbla HTTP och servern måste skapa egna HTTP-begäran för att skicka ett svar. Eftersom servern initierar skicka, måste den ha en viss slutpunkt för att upprätta anslutningen. Du måste ange servern adressen till en slutpunkt för sitt svar. På liknande sätt, om en tjänst måste svara på ett enkelriktat meddelande som togs emot det kräver också en icke-anonyma adressen eftersom det finns ingen tillbaka kanal för kommunikation. Om servern skickar tillbaka ett meddelande, krävs en separat åtgärd från som används för att skicka det första meddelandet.      -Blandat utgör ett tredje adressering som kombinerar anonym och icke-anonyma adresser beroende på det meddelande som skickas. Ett typexempel på blandat läge adressering är att använda en särskild dator för fel eller bekräftelse meddelandebehandling. Om standard exchange-sekvensen för svar är HTTP eller TCP, svaren använder anonym adressering men fel använder icke-anonym adressering. Medan [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] ger inte Mixed adressering funktioner i en av dess standard bindningar, är det möjligt att skriva en kanal som kan skicka svar direkt på Bakåt-kanalen (när svaret adressen är anonym) eller på en separat kanal (när svaret adressen är icke-anonyma)-tjänsten. I sådana fall är bindningselement av kanal används för att setSupportedAddressingMode till Mixed."
  syntax:
    content: public enum SupportedAddressingMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  id: Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Servern stöder enbart anonyma adresser och klienterna måste ange en svarsadress för anonym."
  syntax:
    content: Anonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  id: Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Servern stöder både anonyma och icke-anonyma adresser och klienter kan välja att använda ett av eller båda."
  syntax:
    content: Mixed
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  id: NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Servern stöder endast icke-anonyma adresser och klienter måste ange en icke-anonym svarsadress."
  syntax:
    content: NonAnonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  parent: System.ServiceModel.Channels
  isExternal: false
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
