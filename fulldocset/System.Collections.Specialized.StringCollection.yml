### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringCollection
  id: StringCollection
  children:
  - System.Collections.Specialized.StringCollection.#ctor
  - System.Collections.Specialized.StringCollection.Add(System.String)
  - System.Collections.Specialized.StringCollection.AddRange(System.String[])
  - System.Collections.Specialized.StringCollection.Clear
  - System.Collections.Specialized.StringCollection.Contains(System.String)
  - System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  - System.Collections.Specialized.StringCollection.Count
  - System.Collections.Specialized.StringCollection.GetEnumerator
  - System.Collections.Specialized.StringCollection.IndexOf(System.String)
  - System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  - System.Collections.Specialized.StringCollection.IsReadOnly
  - System.Collections.Specialized.StringCollection.IsSynchronized
  - System.Collections.Specialized.StringCollection.Item(System.Int32)
  - System.Collections.Specialized.StringCollection.Remove(System.String)
  - System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  - System.Collections.Specialized.StringCollection.SyncRoot
  - System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
  type: Class
  summary: "Representerar en samling med strängar."
  remarks: "StringCollection accepterar `null` som ett giltigt värde och tillåter dubblettelement.       Strängjämförelser är skiftlägeskänsliga.       Element i denna mängd kan nås med ett heltalsindex.  Index i den här samlingen är nollbaserade."
  example:
  - "The following code example demonstrates several of the properties and methods of StringCollection.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/cpp/t-system.collections.spe_2_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/csharp/t-system.collections.spe_2_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_2_1.vb)]"
  syntax:
    content: 'public class StringCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: StringCollection()
  nameWithType: StringCollection.StringCollection()
  fullName: System.Collections.Specialized.StringCollection.StringCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> klass."
  remarks: "Den här konstruktorn är en O(1)-åtgärd."
  syntax:
    content: public StringCollection ();
    parameters: []
  overload: System.Collections.Specialized.StringCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: StringCollection.Add(String)
  fullName: System.Collections.Specialized.StringCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lägger till en sträng i slutet av den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>accepterar `null` som ett giltigt värde och tillåter dubblettelement.</xref:System.Collections.Specialized.StringCollection>       Om <xref:System.Collections.Specialized.StringCollection.Count%2A>är mindre än kapaciteten den här metoden är en O(1) åtgärd.</xref:System.Collections.Specialized.StringCollection.Count%2A> Om kapaciteten måste ökas för att anpassa det nya elementet, blir den här metoden en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/m-system.collections.spe_39_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/m-system.collections.spe_39_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.collections.spe_39_1.vb)]"
  syntax:
    content: public int Add (string value);
    parameters:
    - id: value
      type: System.String
      description: "Strängen ska läggas till i slutet av den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet där det nya elementet infogas."
  overload: System.Collections.Specialized.StringCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])
  id: AddRange(System.String[])
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: AddRange(String[])
  nameWithType: StringCollection.AddRange(String[])
  fullName: System.Collections.Specialized.StringCollection.AddRange(String[])
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopierar elementen i en strängmatris till slutet av den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>accepterar `null` som ett giltigt värde och tillåter dubblettelement.</xref:System.Collections.Specialized.StringCollection>       Om den <xref:System.Collections.Specialized.StringCollection>kan anpassa de nya elementen utan att öka kapaciteten är den här metoden en O (`n`) igen, där `n` är antalet element som ska läggas till.</xref:System.Collections.Specialized.StringCollection> Om kapaciteten måste ökas för att anpassa de nya element, blir den här metoden en O (`n` + `m`) igen, där `n` är antalet element som ska läggas till och `m` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/m-system.collections.spe_4_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/m-system.collections.spe_4_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.collections.spe_4_1.vb)]"
  syntax:
    content: public void AddRange (string[] value);
    parameters:
    - id: value
      type: System.String[]
      description: "En matris med strängar som ska läggas till i slutet av den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Matrisen sig själv kan inte vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> men det kan innehålla element som är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: StringCollection.Clear()
  fullName: System.Collections.Specialized.StringCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Tar bort alla strängar från den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection.Count%2A>är angivet till noll och släpps också referenser till andra objekt från element i mängden.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_2_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_2_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_2_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.StringCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: StringCollection.Contains(String)
  fullName: System.Collections.Specialized.StringCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Anger om den angivna strängen är den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Metoden innehåller kan bekräfta förekomsten av en sträng innan du utför ytterligare åtgärder.       Den här metoden anger likheten genom att anropa <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> Strängjämförelser är skiftlägeskänsliga.       Den här metoden utförs en linjär sökning. den här metoden är därför en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Från och med .NET Framework 2.0 kan den här metoden använder den samling objekt <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder i `item` att avgöra om det finns objekt.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> I tidigare versioner av .NET Framework gjordes detta genom att använda den <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder för den `item` parameter på objekten i samlingen.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/csharp/m-system.collections.spe_28_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/cpp/m-system.collections.spe_28_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_28_1.vb)]"
  syntax:
    content: public bool Contains (string value);
    parameters:
    - id: value
      type: System.String
      description: "Sträng att söka efter i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value</code> is found in the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: StringCollection.CopyTo(String[],Int32)
  fullName: System.Collections.Specialized.StringCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopierar hela <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> värden till en endimensionell matris med strängar som börjar med det angivna indexet för Målmatrisen."
  remarks: "Den angivna matrisen måste vara kompatibelt med datatypen.       Elementen kopieras till den <xref:System.Array>i samma ordning som uppräknaren för <xref:System.Collections.Specialized.StringCollection>går igenom <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> </xref:System.Array>       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/csharp/6398d0a9-11dc-4566-8dea-_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/cpp/6398d0a9-11dc-4566-8dea-_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/visualbasic/6398d0a9-11dc-4566-8dea-_1.vb)]"
  syntax:
    content: public void CopyTo (string[] array, int index);
    parameters:
    - id: array
      type: System.String[]
      description: "Endimensionell matris med strängar som är mål för element som kopieras från <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Den <xref:System.Array>måste ha Nollbaserad indexering.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet i `array` vilka kopiera börjar."
  overload: System.Collections.Specialized.StringCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>är multidimensionell.       - eller - antalet element i källan <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> är större än det tillgängliga utrymmet från <code>index</code> till slutet av destinationen <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ av källan <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> kan inte omvandlas automatiskt till typ av målet <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Count
  id: Count
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Count
  nameWithType: StringCollection.Count
  fullName: System.Collections.Specialized.StringCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar antalet strängar som ingår i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  example:
  - "The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/csharp/p-system.collections.spe_15_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/cpp/p-system.collections.spe_15_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/visualbasic/p-system.collections.spe_15_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antal strängar som ingår i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StringCollection.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Returnerar en <xref href=&quot;System.Collections.Specialized.StringEnumerator&quot;> </xref> som går igenom den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "[Visual Basic och C#]       Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare.  Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>medför också uppräknaren tillbaka till den här positionen.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>  I den här positionen <xref:System.Collections.Specialized.StringEnumerator.Current%2A>är odefinierad.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> Därför måste du anropa <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>att avancera uppräknaren till det första elementet i mängden innan du läser värdet för <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       <xref:System.Collections.Specialized.StringEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>eller <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>kallas.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A></xref:System.Collections.Specialized.StringEnumerator.Current%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>Anger <xref:System.Collections.Specialized.StringEnumerator.Current%2A>till nästa element.</xref:System.Collections.Specialized.StringEnumerator.Current%2A></xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Om <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>passerar slutet på mängden uppräknaren är placerad efter det sista elementet i mängden och <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> När uppräknaren är på denna position efterföljande anrop till <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>också returnera `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>returnerade `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>är odefinierad.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Ange <xref:System.Collections.Specialized.StringEnumerator.Current%2A>att det första elementet i mängden igen, kan du anropa <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>följt av <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren blir inaktuella och sitt beteende är odefinierad.       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en säker tråd-procedur.  Om du vill garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkningen.  Om du vill tillåta en samling som ska användas av flera trådar för läsning och skrivning, måste du implementera ditt eget synkronisering.       Den här metoden är en O(1)-åtgärd."
  syntax:
    content: public System.Collections.Specialized.StringEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Specialized.StringEnumerator
      description: "A <xref href=&quot;System.Collections.Specialized.StringEnumerator&quot;></xref> for the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: StringCollection.IndexOf(String)
  fullName: System.Collections.Specialized.StringCollection.IndexOf(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Söker efter den angivna strängen och returnerar det nollbaserade indexet för den första förekomsten inom den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Den här metoden anger likheten genom att anropa <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> Strängjämförelser är skiftlägeskänsliga.       Den här metoden utförs en linjär sökning. den här metoden är därför en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Från och med .NET Framework 2.0 kan den här metoden använder den samling objekt <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder i `item` att avgöra om det finns objekt.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> I tidigare versioner av .NET Framework gjordes detta genom att använda den <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder för den `item` parameter på objekten i samlingen.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/csharp/m-system.collections.spe_7_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/cpp/m-system.collections.spe_7_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_7_1.vb)]"
  syntax:
    content: public int IndexOf (string value);
    parameters:
    - id: value
      type: System.String
      description: "Sträng att söka efter. Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för den första förekomsten av <code> value </code> i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>om hittas, i annat fall -1."
  overload: System.Collections.Specialized.StringCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: StringCollection.Insert(Int32,String)
  fullName: System.Collections.Specialized.StringCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Infogar en sträng i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> med det angivna indexet."
  remarks: "Dubbla strängar är tillåtna i <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection>       Om `index` är lika med <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` har lagts till i slutet av <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Hantera nya element i samlingar av angränsande element, som visar de element som följer insättningspunkten Flytta ned till. Om samlingen är indexerad, uppdateras även indexen för element som flyttas. Det här problemet gäller inte för samlingar där element begreppsmässigt är grupperade i buckets, till exempel en hash-tabell.       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/5308ad74-fbfb-4390-83de-_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/5308ad74-fbfb-4390-83de-_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/5308ad74-fbfb-4390-83de-_1.vb)]"
  syntax:
    content: public void Insert (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet som `value` infogas."
    - id: value
      type: System.String
      description: "Strängen som ska infogas. Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll.       - eller - <code>index</code> större än <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> är skrivskyddad."
  remarks: "<xref:System.Collections.Specialized.StringCollection>implementerar egenskapen IsReadOnly eftersom det krävs av den <xref:System.Collections.IList?displayProperty=fullName>gränssnitt.</xref:System.Collections.IList?displayProperty=fullName></xref:System.Collections.Specialized.StringCollection>       En samling som är skrivskyddat tillåter inte att tillägg, borttagning eller ändring av element när samlingen har skapats.       En samling som är skrivskyddad är helt enkelt en samling med en wrapper som förhindrar att ändra samlingen; Om ändringar görs i den underliggande mängden visar därför skrivskyddad samling ändringarna.       En <xref:System.Collections.Specialized.StringCollection>instans alltid är skrivbar.</xref:System.Collections.Specialized.StringCollection>       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Den här egenskapen returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
  fullName: System.Collections.Specialized.StringCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar ett värde som anger om åtkomst till den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> är synkroniserade (trådsäkra)."
  remarks: "<xref:System.Collections.Specialized.StringCollection>implementerar egenskapen IsSynchronized eftersom det krävs av den <xref:System.Collections.ICollection>gränssnitt.</xref:System.Collections.ICollection></xref:System.Collections.Specialized.StringCollection>       Uppräkning av en samling är är inte en säker tråd-procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.       Följande kodexempel visar hur du låser en samling med hjälp av den <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>under hela uppräkningen: [!code-cpp [System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/cpp/p-system.collections.spe_23_1.cpp)][!code-cs[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/csharp/p-system.collections.spe_23_1.cs)][!code-vb[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_23_1.vb) ] hämta värdet för den här egenskapen är en O(1) åtgärd.    </xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Den här egenskapen returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: StringCollection.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar eller anger elementet med det angivna indexet."
  remarks: "Den här egenskapen ger möjlighet att komma åt ett visst element i samlingen med följande syntax: `myCollection[index]`.       <xref:System.Collections.Specialized.StringCollection>accepterar `null` som ett giltigt värde och tillåter dubblettelement.</xref:System.Collections.Specialized.StringCollection>       C#-språk använder nyckelordet för att definiera indexerare i stället för att implementera egenskapen Item. Visual Basic implementerar objektet som en default-egenskap som innehåller samma funktion för indexering.       Hämtar värdet för den här egenskapen är O(1) åtgärd. Egenskapen är också en O(1)-åtgärd."
  syntax:
    content: public string this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet för att hämta eller ange transaktionen."
    return:
      type: System.String
      description: "Element med det angivna indexet."
  overload: System.Collections.Specialized.StringCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll.       - eller - <code>index</code> är lika med eller större än <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: StringCollection.Remove(String)
  fullName: System.Collections.Specialized.StringCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Tar bort den första förekomsten av en specifik sträng från den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Dubbla strängar är tillåtna i <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> Endast den första förekomsten tas bort. Ta bort alla förekomster av den angivna strängen med `RemoveAt(IndexOf(value))` flera gånger när <xref:System.Collections.Specialized.StringCollection.IndexOf%2A>inte returnerar -1.</xref:System.Collections.Specialized.StringCollection.IndexOf%2A>       Om den <xref:System.Collections.Specialized.StringCollection>innehåller inte det angivna objektet i <xref:System.Collections.Specialized.StringCollection>förblir oförändrad.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Inget undantag genereras.       Element som följer efter elementet borttagna flytta uppta vacated plats i samlingar med sammanhängande element, till exempel listor. Om samlingen är indexerad, uppdateras även indexen för element som flyttas. Det här problemet gäller inte för samlingar där element begreppsmässigt är grupperade i buckets, till exempel en hash-tabell.       Den här metoden anger likheten genom att anropa <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> Strängjämförelser är skiftlägeskänsliga.       Den här metoden utförs en linjär sökning. den här metoden är därför en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_20_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_20_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_20_1.vb)]"
  syntax:
    content: public void Remove (string value);
    parameters:
    - id: value
      type: System.String
      description: "Strängen som ska ta bort från den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: StringCollection.RemoveAt(Int32)
  fullName: System.Collections.Specialized.StringCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Tar bort strängen med det angivna indexet för den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Element som följer efter elementet borttagna flytta uppta vacated plats i samlingar med sammanhängande element, till exempel listor. Om samlingen är indexerad, uppdateras även indexen för element som flyttas. Det här problemet gäller inte för samlingar där element begreppsmässigt är grupperade i buckets, till exempel en hash-tabell.       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_16_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_16_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_16_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet för strängen som ska ta bort."
  overload: System.Collections.Specialized.StringCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll.       - eller - <code>index</code> är lika med eller större än <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
  fullName: System.Collections.Specialized.StringCollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar ett objekt som kan användas för att synkronisera åtkomst till den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Härledda klasser kan ge sina egna synkroniserade versionen av den <xref:System.Collections.Specialized.StringCollection>med egenskapen SyncRoot.</xref:System.Collections.Specialized.StringCollection> Synkronisera kod måste utföra åtgärder på SyncRoot av den <xref:System.Collections.Specialized.StringCollection>, inte direkt på <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Detta säkerställer att samlingar som är härledda från andra objekt ska fungera korrekt. Mer specifikt den upprätthåller rätt synkronisering med andra trådar samtidigt ändra den <xref:System.Collections.Specialized.StringCollection>objekt.</xref:System.Collections.Specialized.StringCollection>       Uppräkning av en samling är är inte en säker tråd-procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.       Följande kodexempel visar hur du låsa den samling som använder SyncRoot under hela uppräkningen: [!code-cpp [System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/cpp/p-system.collections.spe_3_1.cpp)][!code-cs[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/csharp/p-system.collections.spe_3_1.cs)][!code-vb[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_3_1.vb) ] hämta värdet för den här egenskapen är en O(1)-åtgärd.    "
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Ett objekt som kan användas för att synkronisera åtkomst till den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopierar hela <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> till en kompatibel endimensionell <xref:System.Array>början från det angivna indexet för Målmatrisen.</xref:System.Array>"
  remarks: "Den angivna matrisen måste vara kompatibelt med datatypen.       Den här metoden använder <xref:System.Array.Copy%2A?displayProperty=fullName>att kopiera element.</xref:System.Array.Copy%2A?displayProperty=fullName>       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Den endimensionell <xref:System.Array>som är mål för element som kopieras från <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Array> Den <xref:System.Array>måste ha Nollbaserad indexering.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet i `array` vilka kopiera börjar."
  overload: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>är multidimensionell.       - eller - antalet element i källan <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> är större än det tillgängliga utrymmet från <code>index</code> till slutet av destinationen <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ av källan <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> kan inte omvandlas automatiskt till typ av målet <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Returnerar en <xref:System.Collections.IEnumerator>som går igenom den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic och C#]       Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare.  Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. <xref:System.Collections.IEnumerator.Reset%2A>medför också uppräknaren tillbaka till den här positionen.</xref:System.Collections.IEnumerator.Reset%2A> AT detta position, anropar <xref:System.Collections.IEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.IEnumerator.Current%2A> Därför måste du anropa <xref:System.Collections.IEnumerator.MoveNext%2A>att avancera uppräknaren till det första elementet i mängden innan du läser värdet för <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kallas.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Anger <xref:System.Collections.IEnumerator.Current%2A>till nästa element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Om <xref:System.Collections.IEnumerator.MoveNext%2A>passerar slutet på mängden uppräknaren är placerad efter det sista elementet i mängden och <xref:System.Collections.IEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> När uppräknaren är på denna position efterföljande anrop till <xref:System.Collections.IEnumerator.MoveNext%2A>också returnera `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Collections.IEnumerator.MoveNext%2A>returnerade `false`, anropa <xref:System.Collections.IEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Ange <xref:System.Collections.IEnumerator.Current%2A>att det första elementet i mängden igen, kan du anropa <xref:System.Collections.IEnumerator.Reset%2A>följt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren inaktuella blir och nästa anropa eller <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>genererar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Om samlingen har ändrats mellan <xref:System.Collections.IEnumerator.MoveNext%2A>och <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en säker tråd-procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar.       Den här metoden är en O(1)-åtgärd."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: StringCollection.System.Collections.IList.Add(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lägger till ett objekt i slutet av den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>accepterar `null` som ett giltigt värde och tillåter dubblettelement.</xref:System.Collections.Specialized.StringCollection>       Om <xref:System.Collections.Specialized.StringCollection.Count%2A>redan är lika med kapaciteten, kapaciteten för den <xref:System.Collections.Specialized.StringCollection>ökas genom att omfördela automatiskt den interna matrisen och befintliga element kopieras till den nya matrisen innan du lägger till nya element.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Om <xref:System.Collections.Specialized.StringCollection.Count%2A>är mindre än kapaciteten den här metoden är en O(1) åtgärd.</xref:System.Collections.Specialized.StringCollection.Count%2A> Om kapaciteten måste ökas för att anpassa det nya elementet, blir den här metoden en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Den <xref:System.Object>som ska läggas till i slutet av den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> index då den <code> value </code> har lagts till."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> är skrivskyddad.       - eller - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> har en fast storlek."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: StringCollection.System.Collections.IList.Contains(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Anger om det är ett element i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Den här metoden anger likheten genom att anropa <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den här metoden utförs en linjär sökning. den här metoden är därför en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Från och med .NET Framework 2.0 kan den här metoden använder den samling objekt <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder i `item` att avgöra om det finns objekt.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> I tidigare versioner av .NET Framework gjordes detta genom att använda den <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder för den `item` parameter på objekten i samlingen.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Den <xref:System.Object>att hitta i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value</code> is found in the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StringCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Söker efter den angivna <xref:System.Object>och returnerar det nollbaserade indexet för den första förekomsten inom hela <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object>"
  remarks: "Den <xref:System.Collections.Specialized.StringCollection>genomsöks framåt börjar vid det första elementet och slutar på det sista elementet.</xref:System.Collections.Specialized.StringCollection>       Den här metoden anger likheten genom att anropa <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den här metoden utförs en linjär sökning. den här metoden är därför en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Från och med .NET Framework 2.0 kan den här metoden använder den samling objekt <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder i `item` att avgöra om det finns objekt.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> I tidigare versioner av .NET Framework gjordes detta genom att använda den <xref:System.Object.Equals%2A>och <xref:System.IComparable.CompareTo%2A>metoder för den `item` parameter på objekten i samlingen.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Den <xref:System.Object>att hitta i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för den första förekomsten av <code> value </code> inom hela <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>om hittas, i annat fall -1."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StringCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Infogar ett element i den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> med det angivna indexet."
  remarks: "Om <xref:System.Collections.Specialized.StringCollection.Count%2A>redan är lika med kapaciteten, kapaciteten för den <xref:System.Collections.Specialized.StringCollection>ökas genom att omfördela automatiskt den interna matrisen och befintliga element kopieras till den nya matrisen innan du lägger till nya element.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Om `index` är lika med <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` har lagts till i slutet av <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Hantera nya element i samlingar av angränsande element, som visar de element som följer insättningspunkten Flytta ned till. Om samlingen är indexerad, uppdateras även indexen för element som flyttas. Det här problemet gäller inte för samlingar där element begreppsmässigt är grupperade i buckets, till exempel en hash-tabell.       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet som `value` ska infogas."
    - id: value
      type: System.Object
      description: "Den <xref:System.Object>Infoga.</xref:System.Object> Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll.       - eller - <code>index</code> är större än <xref:System.Collections.Specialized.StringCollection.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> är skrivskyddad.       - eller - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> har en fast storlek."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objekt har en fast storlek."
  remarks: "En samling med en fast storlek kan inte tillägg eller borttagning av element när samlingen har skapats, men tillåter ändring av befintliga element.       En samling med en fast storlek är helt enkelt en samling med en wrapper som förhindrar att lägga till och ta bort element. därför visar ändringar har gjorts i den underliggande mängden, inklusive tillägg eller borttagning av element, ändringarna på samlingen fast storlek.       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objekt har en fast storlek, i annat fall <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objektet är skrivskyddat."
  remarks: "En samling som är skrivskyddat tillåter inte att tillägg, borttagning eller ändring av element när samlingen har skapats.       En samling som är skrivskyddad är helt enkelt en samling med en wrapper som förhindrar att ändra samlingen; Om ändringar görs i den underliggande mängden visar därför skrivskyddad samling ändringarna.       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objektet är skrivskyddat, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: StringCollection.System.Collections.IList.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar eller anger elementet med det angivna indexet."
  remarks: "Felklassen ger möjlighet att komma åt ett visst element i samlingen med följande syntax: `myCollection[index]`.       C#-språk används den [detta](~/add/includes/ajax-current-ext-md.md) nyckelord för att definiera indexerare i stället för att implementera egenskapen IList.Item. Visual Basic implementerar IList.Item som en default-egenskap som innehåller samma funktion för indexering.       <xref:System.Collections.Specialized.StringCollection>accepterar `null` som ett giltigt värde och tillåter dubblettelement.</xref:System.Collections.Specialized.StringCollection>       Hämtar värdet för den här egenskapen är O(1) åtgärd. Egenskapen är också en O(1)-åtgärd."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet för elementet du vill hämta eller ange."
    return:
      type: System.Object
      description: "Element med det angivna indexet."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll.       - eller - <code>index</code> är lika med eller större än <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: StringCollection.System.Collections.IList.Remove(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Tar bort den första förekomsten av ett specifikt objekt från den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Om den <xref:System.Collections.Specialized.StringCollection>innehåller inte det angivna objektet i <xref:System.Collections.Specialized.StringCollection>förblir oförändrad.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Inget undantag genereras.       Element som följer efter elementet borttagna flytta uppta vacated plats i samlingar med sammanhängande element, till exempel listor. Om samlingen är indexerad, uppdateras även indexen för element som flyttas. Det här problemet gäller inte för samlingar där element begreppsmässigt är grupperade i buckets, till exempel en hash-tabell.       Den här metoden anger likheten genom att anropa <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Den här metoden utförs en linjär sökning. den här metoden är därför en O (`n`) igen, där `n` är <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Den <xref:System.Object>att ta bort från den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> är skrivskyddad.       - eller - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> har en fast storlek."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.Specialized.StringCollection.#ctor
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: StringCollection()
  nameWithType: StringCollection.StringCollection()
  fullName: System.Collections.Specialized.StringCollection.StringCollection()
- uid: System.Collections.Specialized.StringCollection.Add(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Add(String)
  nameWithType: StringCollection.Add(String)
  fullName: System.Collections.Specialized.StringCollection.Add(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: AddRange(String[])
  nameWithType: StringCollection.AddRange(String[])
  fullName: System.Collections.Specialized.StringCollection.AddRange(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.StringCollection.Clear
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Clear()
  nameWithType: StringCollection.Clear()
  fullName: System.Collections.Specialized.StringCollection.Clear()
- uid: System.Collections.Specialized.StringCollection.Contains(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Contains(String)
  nameWithType: StringCollection.Contains(String)
  fullName: System.Collections.Specialized.StringCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: StringCollection.CopyTo(String[],Int32)
  fullName: System.Collections.Specialized.StringCollection.CopyTo(String[],Int32)
- uid: System.Collections.Specialized.StringCollection.Count
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Count
  nameWithType: StringCollection.Count
  fullName: System.Collections.Specialized.StringCollection.Count
- uid: System.Collections.Specialized.StringCollection.GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: StringCollection.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.GetEnumerator()
- uid: System.Collections.Specialized.StringEnumerator
  parent: System.Collections.Specialized
  isExternal: false
  name: StringEnumerator
  nameWithType: StringEnumerator
  fullName: System.Collections.Specialized.StringEnumerator
- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: StringCollection.IndexOf(String)
  fullName: System.Collections.Specialized.StringCollection.IndexOf(String)
- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: StringCollection.Insert(Int32,String)
  fullName: System.Collections.Specialized.StringCollection.Insert(Int32,String)
- uid: System.Collections.Specialized.StringCollection.IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.IsSynchronized
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
  fullName: System.Collections.Specialized.StringCollection.IsSynchronized
- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: StringCollection.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.Item(Int32)
- uid: System.Collections.Specialized.StringCollection.Remove(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Remove(String)
  nameWithType: StringCollection.Remove(String)
  fullName: System.Collections.Specialized.StringCollection.Remove(String)
- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: StringCollection.RemoveAt(Int32)
  fullName: System.Collections.Specialized.StringCollection.RemoveAt(Int32)
- uid: System.Collections.Specialized.StringCollection.SyncRoot
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
  fullName: System.Collections.Specialized.StringCollection.SyncRoot
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: StringCollection.System.Collections.IList.Add(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Add(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: StringCollection.System.Collections.IList.Contains(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StringCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StringCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsFixedSize
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: StringCollection.System.Collections.IList.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Item(Int32)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: StringCollection.System.Collections.IList.Remove(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove(Object)
- uid: System.Collections.Specialized.StringCollection.#ctor*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection.StringCollection
- uid: System.Collections.Specialized.StringCollection.Add*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Add
  nameWithType: StringCollection.Add
- uid: System.Collections.Specialized.StringCollection.AddRange*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: AddRange
  nameWithType: StringCollection.AddRange
- uid: System.Collections.Specialized.StringCollection.Clear*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Clear
  nameWithType: StringCollection.Clear
- uid: System.Collections.Specialized.StringCollection.Contains*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Contains
  nameWithType: StringCollection.Contains
- uid: System.Collections.Specialized.StringCollection.CopyTo*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: CopyTo
  nameWithType: StringCollection.CopyTo
- uid: System.Collections.Specialized.StringCollection.Count*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Count
  nameWithType: StringCollection.Count
- uid: System.Collections.Specialized.StringCollection.GetEnumerator*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: StringCollection.GetEnumerator
- uid: System.Collections.Specialized.StringCollection.IndexOf*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IndexOf
  nameWithType: StringCollection.IndexOf
- uid: System.Collections.Specialized.StringCollection.Insert*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Insert
  nameWithType: StringCollection.Insert
- uid: System.Collections.Specialized.StringCollection.IsReadOnly*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.IsSynchronized*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
- uid: System.Collections.Specialized.StringCollection.Item*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Item
  nameWithType: StringCollection.Item
- uid: System.Collections.Specialized.StringCollection.Remove*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Remove
  nameWithType: StringCollection.Remove
- uid: System.Collections.Specialized.StringCollection.RemoveAt*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: RemoveAt
  nameWithType: StringCollection.RemoveAt
- uid: System.Collections.Specialized.StringCollection.SyncRoot*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: StringCollection.System.Collections.IList.Add
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: StringCollection.System.Collections.IList.Contains
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: StringCollection.System.Collections.IList.IndexOf
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: StringCollection.System.Collections.IList.Insert
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: StringCollection.System.Collections.IList.Item
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: StringCollection.System.Collections.IList.Remove
