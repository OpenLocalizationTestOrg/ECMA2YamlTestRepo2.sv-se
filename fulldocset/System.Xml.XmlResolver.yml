### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlResolver
  id: XmlResolver
  children:
  - System.Xml.XmlResolver.#ctor
  - System.Xml.XmlResolver.Credentials
  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
  type: Class
  summary: "Löser externa XML-resurser med namnet med en identifierare URI (Uniform Resource)."
  remarks: "XmlResolver-typ används för att lösa externa XML-resurser, till exempel entiteter, typdefinitioner för dokumentet (DTD: er) eller scheman. Det är också användas för att inkludera och importera element hittades i Extensible Stylesheet Language (XSL) formatmallar eller XML-Schema definition language (XSD) scheman.       XmlResolver hanterar alla aspekter av förhandling anslutning till resurser, inklusive hantering säkerhetsreferenser, öppna anslutningen till datakällan och returnera resursen i form av en dataström eller andra objekttyp. Det objekt som anropar XmlResolver har till uppgift att tolka dataströmmen.       Den <xref:System.Xml>namnområdet innehåller två konkreta implementeringar av klassen XmlResolver:- <xref:System.Xml.XmlUrlResolver>är Standardlösaren för alla klasser i den <xref:System.Xml>namnområde.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml> Stöder den `file://` och `http://` protokoll och förfrågningar från <xref:System.Net.WebRequest?displayProperty=fullName>klass.</xref:System.Net.WebRequest?displayProperty=fullName> Exempel på utökning av klassen för att förbättra prestanda finns i <xref:System.Xml.XmlUrlResolver>referenssida.</xref:System.Xml.XmlUrlResolver>      - <xref:System.Xml.XmlSecureResolver>skyddar en annan XmlResolver-objektet genom att wrapping objekt-objekt och begränsa de resurser som den kan komma åt.</xref:System.Xml.XmlSecureResolver> Till exempel den <xref:System.Xml.XmlSecureResolver>kan förhindra åtkomst till specifika webbplatser eller till zoner.</xref:System.Xml.XmlSecureResolver>       Du kan skapa och ange egna lösare. Om du inte anger en matchare läsaren använder standard <xref:System.Xml.XmlUrlResolver>med autentiseringsuppgifterna för användaren.</xref:System.Xml.XmlUrlResolver>       Du anger XmlResolver att använda genom att ange den <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>egenskapen och skicka den <xref:System.Xml.XmlReaderSettings>objekt till den <xref:System.Xml.XmlReader.Create%2A>metoden.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>       Om den är lagrad på ett system som kräver autentisering, använder du den <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>att ange nödvändiga autentiseringsuppgifter.</xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>      ## Ange autentiseringsuppgifter för har den fil som innehåller XML-data för att läsa en begränsad åtkomst-princip. Om autentisering krävs för att få åtkomst till en nätverksresurs, använder du den <xref:System.Xml.XmlResolver.Credentials%2A>att ange nödvändiga autentiseringsuppgifter.</xref:System.Xml.XmlResolver.Credentials%2A> Om den <xref:System.Xml.XmlResolver.Credentials%2A>anges inte egenskapen är autentiseringsuppgifter `null`.</xref:System.Xml.XmlResolver.Credentials%2A>       Anta exempelvis att autentiseringsuppgifter behövs när du begär data från webben för autentisering. Såvida inte virtuell webbkatalog tillåter anonym åtkomst, måste du ange den <xref:System.Xml.XmlResolver.Credentials%2A>egenskapen för att ange autentiseringsuppgifter.</xref:System.Xml.XmlResolver.Credentials%2A> I följande exempel skapas en <xref:System.Xml.XmlReader>objekt som använder en <xref:System.Xml.XmlUrlResolver>med standardautentiseringsuppgifter för åtkomst till webbplatsen http://localhost/bookstore/inventory.xml.</xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlReader>       [!code-cpp[XmlReaderSettings.cctor#2](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)][!code-cs[XmlReaderSettings.cctor#2](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)][!code-vb[XmlReaderSettings.cctor#2](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb) ] du kan ange olika autentiseringsuppgifter för olika URI: er och lägger till dem i ett cacheminne.     Dessa autentiseringsuppgifter används för att kontrollera autentisering för annan URI: er oavsett den ursprungliga källan till XML-filen. I följande exempel visas hur du lägger till autentiseringsuppgifter till ett cacheminne.       [!code-vb[XslCompiledTransform.Load#11](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)][!code-cs[XslCompiledTransform.Load#11](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs) ] ## säkerhetsaspekter Överväg följande när du arbetar med XmlResolver-klassen.        -XmlResolver objekt kan innehålla känslig information, till exempel användarens autentiseringsuppgifter. Du bör vara försiktig när cachelagring XmlResolver objekt och inte passerar XmlResolver-objektet till en komponent som inte är betrodd.      – Om du designar en klassegenskap som använder klassen XmlResolver ska egenskapen vara definierat som en lässkyddad egenskap. Egenskapen kan användas för att ange XmlResolver ska användas, men den kan inte användas för att returnera ett XmlResolver-objektet.      -Om tillämpningsprogrammet accepterar XmlResolver objekt från icke betrodd kod, kan du anta att URI: N skickades till den <xref:System.Xml.XmlResolver.GetEntity%2A>metod ska vara samma som returneras av den <xref:System.Xml.XmlResolver.ResolveUri%2A>metoden.</xref:System.Xml.XmlResolver.ResolveUri%2A> </xref:System.Xml.XmlResolver.GetEntity%2A> Klasser som härleds från klassen XmlResolver kan åsidosätta den <xref:System.Xml.XmlResolver.GetEntity%2A>metoden och returnera data än vad som fanns i den ursprungliga URI.</xref:System.Xml.XmlResolver.GetEntity%2A>      -Programmet kan minimera minne DOS-tjänsten hot mot den <xref:System.Xml.XmlResolver.GetEntity%2A>metoden genom att implementera en <xref:System.Runtime.InteropServices.ComTypes.IStream>som begränsar antalet lästa byte.</xref:System.Runtime.InteropServices.ComTypes.IStream> </xref:System.Xml.XmlResolver.GetEntity%2A> Detta skyddar mot situationer där skadlig kod som försöker skicka en oändlig dataström med byte som den <xref:System.Xml.XmlResolver.GetEntity%2A>metoden.</xref:System.Xml.XmlResolver.GetEntity%2A>"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials. A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.  \n  \n [!code-cs[XmlResolver_ex#1](~/add/codesnippet/csharp/t-system.xml.xmlresolver_3.cs)]\n [!code-vb[XmlResolver_ex#1](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_3.vb)]"
  syntax:
    content: public abstract class XmlResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> klass."
  remarks: "Den här konstruktorn anropas av härledd klasskonstruktorer initiera tillstånd i den här typen."
  syntax:
    content: protected XmlResolver ();
    parameters: []
  overload: System.Xml.XmlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Anger de autentiseringsuppgifter som används för att autentisera webbegäranden när åsidosätts i en härledd klass."
  remarks: "Om den virtuella katalogen inte kräver autentisering, inte den här egenskapen anges. Annars måste autentiseringsuppgifterna för användaren anges.       Följande C#-kod anger autentiseringsuppgifterna för den <xref:System.Xml.XmlResolver>objekt.</xref:System.Xml.XmlResolver>      ```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```Du kan koppla olika autentiseringsuppgifter till olika URI: er och lägger till dem i ett cacheminne. Du kan sedan använda autentiseringsuppgifter för att kontrollera autentisering för annan URI: er oavsett den ursprungliga källan till XML.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> for an example that uses this property.
  syntax:
    content: public virtual System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Autentiseringsuppgifterna som ska användas för att autentisera webbegäranden. Om den här egenskapen inte har angetts standardvärdet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, det vill säga den <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref> har inga autentiseringsuppgifter."
  overload: System.Xml.XmlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "När åsidosätts i en härledd klass, mappar en URI till ett objekt som innehåller den faktiska resursen."
  remarks: "Den här metoden används när anroparen vill mappa en given URI i objektet som innehåller den faktiska resursen som representerar URI: N. Typen av objekt som returnerades är negotiable; implementeringen måste dock alltid stöd <xref:System.IO.Stream?displayProperty=fullName>.</xref:System.IO.Stream?displayProperty=fullName>       Den asynkrona versionen av den här metoden finns i <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > Tillämpningsprogrammet kan minimera minne DOS-tjänsten hot till metoden GetEntity genom att implementera en <xref:System.Runtime.InteropServices.ComTypes.IStream>som begränsar antalet lästa byte.</xref:System.Runtime.InteropServices.ComTypes.IStream> Detta skyddar mot situationer där skadlig kod som försöker skicka en oändlig byte-dataström till metoden GetEntity."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Den URI som returnerades från <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "För närvarande används inte."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ av objekt ska returnera. Den aktuella versionen returnerar endast System.IO.Stream-objekt."
    return:
      type: System.Object
      description: "Stream-objektet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om en annan typ än dataströmmen har angetts."
  overload: System.Xml.XmlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>är inte en <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> typen."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Angiven URI är inte en absolut URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Det finns ett körningsfel (till exempel en avbruten serveranslutning)."
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynkront mappar en URI till ett objekt som innehåller den faktiska resursen."
  remarks: "Det här är den asynkrona versionen av <xref:System.Xml.XmlResolver.GetEntity%2A>, med samma funktion.</xref:System.Xml.XmlResolver.GetEntity%2A> Om du vill använda den här metoden måste du ange den <xref:System.Xml.XmlReaderSettings.Async%2A>flaggan till `true`.</xref:System.Xml.XmlReaderSettings.Async%2A>"
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Den URI som returnerades från <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "För närvarande används inte."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ av objekt ska returnera. Den aktuella versionen returnerar bara <xref:System.IO.Stream>objekt.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Stream-objektet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om en annan typ än dataströmmen har angetts."
  overload: System.Xml.XmlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "När åsidosätts i en härledd klass löser absolut URI från bas och relativ URI."
  remarks: "Absolut URI kan användas som bas-URI för alla efterföljande förfrågningar för entiteter som är i förhållande till den här URI."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example that uses this method.
  syntax:
    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Bas-URI som används för att matcha relativa URI: N."
    - id: relativeUri
      type: System.String
      description: "URI som används för att lösa. URI: N kan vara absolut eller relativ. Om absolut värdet effektivt ersätter den `baseUri` värde. Om relativa kombineras med de `baseUri` att göra en absolut URI."
    return:
      type: System.Uri
      description: "Absolut URI eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om relativ URI kan inte lösas."
  overload: System.Xml.XmlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Aktiverar Konfliktlösare som returtyper än &lt;xref:System.IO.Stream?displayProperty=fullName&gt;."
  syntax:
    content: public virtual bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI: N."
    - id: type
      type: System.Type
      description: "Den typ som ska returneras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <code> type </code> är stöds, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlResolver.SupportsType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlResolver.#ctor
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
- uid: System.Xml.XmlResolver.Credentials
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlResolver.#ctor*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver.XmlResolver
- uid: System.Xml.XmlResolver.Credentials*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
- uid: System.Xml.XmlResolver.GetEntity*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlResolver.GetEntity
- uid: System.Xml.XmlResolver.GetEntityAsync*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlResolver.GetEntityAsync
- uid: System.Xml.XmlResolver.ResolveUri*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlResolver.ResolveUri
- uid: System.Xml.XmlResolver.SupportsType*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlResolver.SupportsType
