### YamlMime:ManagedReference
items:
- uid: System.Collections.ReadOnlyCollectionBase
  id: ReadOnlyCollectionBase
  children:
  - System.Collections.ReadOnlyCollectionBase.#ctor
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: ReadOnlyCollectionBase
  nameWithType: ReadOnlyCollectionBase
  fullName: System.Collections.ReadOnlyCollectionBase
  type: Class
  summary: "Innehåller den <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> basklassen för en strikt typkontroll icke-generisk skrivskyddad samling."
  remarks: "En instans av ReadOnlyCollectionBase är alltid skrivskyddad. Se <xref:System.Collections.CollectionBase>för en ändringsbar version av den här klassen.</xref:System.Collections.CollectionBase>"
  example:
  - "The following code example implements the ReadOnlyCollectionBase class.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/cpp/t-system.collections.rea_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/csharp/t-system.collections.rea_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/visualbasic/t-system.collections.rea_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class ReadOnlyCollectionBase : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: ReadOnlyCollectionBase()
  nameWithType: ReadOnlyCollectionBase.ReadOnlyCollectionBase()
  fullName: System.Collections.ReadOnlyCollectionBase.ReadOnlyCollectionBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> klass."
  remarks: "Den här konstruktorn är en O(1)-åtgärd."
  syntax:
    content: protected ReadOnlyCollectionBase ();
    parameters: []
  overload: System.Collections.ReadOnlyCollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.Count
  id: Count
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: Count
  nameWithType: ReadOnlyCollectionBase.Count
  fullName: System.Collections.ReadOnlyCollectionBase.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar antalet element som ingår i den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> instans."
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/cpp/p-system.collections.rea_1_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/csharp/p-system.collections.rea_1_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/visualbasic/p-system.collections.rea_1_1.vb)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "Antalet element i den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> instans.       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  overload: System.Collections.ReadOnlyCollectionBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ReadOnlyCollectionBase.GetEnumerator()
  fullName: System.Collections.ReadOnlyCollectionBase.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Returnerar en uppräknare går igenom den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> instans."
  remarks: "Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare.  Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. <xref:System.Collections.IEnumerator.Reset%2A>medför också uppräknaren tillbaka till den här positionen.</xref:System.Collections.IEnumerator.Reset%2A>  I den här positionen <xref:System.Collections.IEnumerator.Current%2A>är odefinierad.</xref:System.Collections.IEnumerator.Current%2A> Därför måste du anropa <xref:System.Collections.IEnumerator.MoveNext%2A>att avancera uppräknaren till det första elementet i mängden innan du läser värdet för <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kallas.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Anger <xref:System.Collections.IEnumerator.Current%2A>till nästa element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Om <xref:System.Collections.IEnumerator.MoveNext%2A>passerar slutet på mängden uppräknaren är placerad efter det sista elementet i mängden och <xref:System.Collections.IEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> När uppräknaren är på denna position efterföljande anrop till <xref:System.Collections.IEnumerator.MoveNext%2A>också returnera `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Collections.IEnumerator.MoveNext%2A>returnerade `false`, <xref:System.Collections.IEnumerator.Current%2A>är odefinierad.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Ange <xref:System.Collections.IEnumerator.Current%2A>att det första elementet i mängden igen, kan du anropa <xref:System.Collections.IEnumerator.Reset%2A>följt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren blir inaktuella och sitt beteende är odefinierad.       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en trådsäker procedur.  Om du vill garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkningen.  Om du vill tillåta en samling som ska användas av flera trådar för läsning och skrivning, måste du implementera ditt eget synkronisering.       Den här metoden är en O(1)-åtgärd."
  example:
  - "The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/cpp/m-system.collections.rea_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/csharp/m-system.collections.rea_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/visualbasic/m-system.collections.rea_1.vb)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>för den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> instans.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.ReadOnlyCollectionBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.InnerList
  id: InnerList
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: InnerList
  nameWithType: ReadOnlyCollectionBase.InnerList
  fullName: System.Collections.ReadOnlyCollectionBase.InnerList
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar listan över element som ingår i den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> instans."
  remarks: "Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  example:
  - "The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/cpp/p-system.collections.rea_0_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/csharp/p-system.collections.rea_0_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/add/codesnippet/visualbasic/p-system.collections.rea_0_1.vb)]"
  syntax:
    content: protected System.Collections.ArrayList InnerList { get; }
    return:
      type: System.Collections.ArrayList
      description: "En <xref href=&quot;System.Collections.ArrayList&quot;> </xref> som representerar den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> instansen sig själv."
  overload: System.Collections.ReadOnlyCollectionBase.InnerList*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Kopierar hela <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> till en kompatibel endimensionell <xref:System.Array>början från det angivna indexet för Målmatrisen.</xref:System.Array>"
  remarks: "Den angivna matrisen måste vara kompatibelt med datatypen.       Den här metoden använder <xref:System.Array.Copy%2A?displayProperty=fullName>att kopiera element.</xref:System.Array.Copy%2A?displayProperty=fullName>       Den här metoden är en O (`n`) igen, där `n` är <xref:System.Collections.ReadOnlyCollectionBase.Count%2A>.</xref:System.Collections.ReadOnlyCollectionBase.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Den endimensionell <xref:System.Array>som är mål för element som kopieras från <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref>.</xref:System.Array> Den <xref:System.Array>måste ha Nollbaserad indexering.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet i `array` vilka kopiera börjar."
  overload: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>är multidimensionell.       - eller - antalet element i källan <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> är större än det tillgängliga utrymmet från <code>index</code> till slutet av destinationen <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ av källan <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> kan inte omvandlas automatiskt till typ av målet <code> array </code>."
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar ett värde som anger om åtkomst till en <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> objektet synkroniseras (trådsäkra)."
  remarks: "En <xref:System.Collections.ReadOnlyCollectionBase>objektet är inte synkroniserad.</xref:System.Collections.ReadOnlyCollectionBase> Härledda klasser kan tillhandahålla en synkroniserade version av den <xref:System.Collections.ReadOnlyCollectionBase>klassen med hjälp av den <xref:System.Collections.ICollection.SyncRoot%2A>egenskapen.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.ReadOnlyCollectionBase>       Uppräkning av en samling är är inte en trådsäker procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/cpp/b4b4a174-5e26-4494-90e3-_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/csharp/b4b4a174-5e26-4494-90e3-_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/visualbasic/b4b4a174-5e26-4494-90e3-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om åtkomst till den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> objektet synkroniseras (trådsäkra), annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.ReadOnlyCollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hämtar ett objekt som kan användas för att synkronisera åtkomst till en <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> objekt."
  remarks: "Härledda klasser kan ge sina egna synkroniserade versionen av den <xref:System.Collections.ReadOnlyCollectionBase>klassen med hjälp av den <xref:System.Collections.ICollection.SyncRoot%2A>egenskapen.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.ReadOnlyCollectionBase> Synkronisera kod måste utföra åtgärder på den <xref:System.Collections.ICollection.SyncRoot%2A>egenskapen för den <xref:System.Collections.ReadOnlyCollectionBase>objekt, inte direkt på den <xref:System.Collections.ReadOnlyCollectionBase>objekt.</xref:System.Collections.ReadOnlyCollectionBase> </xref:System.Collections.ReadOnlyCollectionBase> </xref:System.Collections.ICollection.SyncRoot%2A> Detta säkerställer att samlingar som är härledda från andra objekt ska fungera korrekt. Mer specifikt den upprätthåller rätt synkronisering med andra trådar samtidigt ändra den <xref:System.Collections.ReadOnlyCollectionBase>objekt.</xref:System.Collections.ReadOnlyCollectionBase>       Uppräkning av en samling är är inte en trådsäker procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/cpp/87c3d4a6-47b9-4735-a8a0-_1.cpp)]\n [!code-cs[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/csharp/87c3d4a6-47b9-4735-a8a0-_1.cs)]\n [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/add/codesnippet/visualbasic/87c3d4a6-47b9-4735-a8a0-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Ett objekt som kan användas för att synkronisera åtkomst till den <xref href=&quot;System.Collections.ReadOnlyCollectionBase&quot;> </xref> objekt."
  overload: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.ReadOnlyCollectionBase.#ctor
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: ReadOnlyCollectionBase()
  nameWithType: ReadOnlyCollectionBase.ReadOnlyCollectionBase()
  fullName: System.Collections.ReadOnlyCollectionBase.ReadOnlyCollectionBase()
- uid: System.Collections.ReadOnlyCollectionBase.Count
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: Count
  nameWithType: ReadOnlyCollectionBase.Count
  fullName: System.Collections.ReadOnlyCollectionBase.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: ReadOnlyCollectionBase.GetEnumerator()
  fullName: System.Collections.ReadOnlyCollectionBase.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.ReadOnlyCollectionBase.InnerList
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: InnerList
  nameWithType: ReadOnlyCollectionBase.InnerList
  fullName: System.Collections.ReadOnlyCollectionBase.InnerList
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.ReadOnlyCollectionBase.#ctor*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: ReadOnlyCollectionBase
  nameWithType: ReadOnlyCollectionBase.ReadOnlyCollectionBase
- uid: System.Collections.ReadOnlyCollectionBase.Count*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: Count
  nameWithType: ReadOnlyCollectionBase.Count
- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: GetEnumerator
  nameWithType: ReadOnlyCollectionBase.GetEnumerator
- uid: System.Collections.ReadOnlyCollectionBase.InnerList*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: InnerList
  nameWithType: ReadOnlyCollectionBase.InnerList
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase.System.Collections.ICollection.SyncRoot
