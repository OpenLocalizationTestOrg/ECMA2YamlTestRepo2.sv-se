### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageDigitalSignatureManager
  id: PackageDigitalSignatureManager
  children:
  - System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  - System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  - System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  - System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  - System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  - System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  - System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  - System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  - System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  - System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  - System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  - System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  - System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  - System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  - System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  - System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  langs:
  - csharp
  name: PackageDigitalSignatureManager
  nameWithType: PackageDigitalSignatureManager
  fullName: System.IO.Packaging.PackageDigitalSignatureManager
  type: Class
  summary: "Erbjuder en klass för verktyget för att skapa och verifiering av digitala signaturer i en <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>."
  remarks: "PackageDigitalSignatureManager bygger på arkitektur [!INCLUDE[TLA#tla_netframewk](~/add/includes/tlasharptla-netframewk-md.md)] digitala signatur klasserna och erbjuder en klass för verktyget för att utföra vanliga aktiviteter i med hjälp av digitala signaturer med <xref:System.IO.Packaging.Package>element.</xref:System.IO.Packaging.Package>       Mer information om paketet digitala signaturer finns i MSDN-artikeln Framework för Digital signering av Open Packaging Conventions finns på [http://go.microsoft.com/fwlink/?LinkId=74494](http://go.microsoft.com/fwlink/?LinkId=74494)."
  example:
  - "The following example shows how to use the PackageDigitalSignatureManager.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public sealed class PackageDigitalSignatureManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  id: '#ctor(System.IO.Packaging.Package)'
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: PackageDigitalSignatureManager(Package)
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Initierar en ny instans av den <xref href=&quot;System.IO.Packaging.PackageDigitalSignatureManager&quot;> </xref> klass för användning med en angiven <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>."
  remarks: "Paketets mål som är associerade med hanteraren för signaturen har angetts under initieringen. När du har angett kan inte det paket som är associerade med hanteraren signatur ändras. Skapa en ny signatur manager för varje paket."
  example:
  - "The following example shows how to use this constructor.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public PackageDigitalSignatureManager (System.IO.Packaging.Package package);
    parameters:
    - id: package
      type: System.IO.Packaging.Package
      description: "Det paket som är associerade med denna signatur manager."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  id: CertificateOption
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar eller anger X.509-certifikatet bädda in alternativ som används av den <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign*>metod för att signera paketdelar.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign*>"
  remarks: "Den här egenskapen anger där undertecknarens X.509-certifikat lagras när signera en del."
  example:
  - "The following example shows how to set this property in preparation to digitally sign the parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }
    return:
      type: System.IO.Packaging.CertificateEmbeddingOption
      description: "En av de <xref href=&quot;System.IO.Packaging.CertificateEmbeddingOption&quot;> </xref> värden."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  id: Countersign
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign()
  nameWithType: PackageDigitalSignatureManager.Countersign()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Countersigns alla signaturer i paket med en användarvalda X.509-certifikat."
  remarks: "Om inga X.509-certifikat har angetts i anropet öppnar den här metoden en certifikatet markeringen dialogruta som uppmanar användaren att välja ett certifikat ska användas för signering.       Ange fönsterreferensen i den <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>egenskapen innan du anropar kontrasignering så att dialogrutan för val av certifikat spärrad till angivet fönster.</xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Signaturen har lagts till som en kontrasignering; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om inget certifikat inte gick att hitta eller användaren avbröt dialogrutan för val av certifikat."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Countersigns alla signaturer i paket med en angiven X.509-certifikat."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X.509-certifikat ska läggas till som en kontrasignering signatur."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Signaturen som har lagts till som en kontrasignering."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>är<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  id: Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign(X509Certificate,IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Countersigns en lista över signaturer med ett visst X.509-certifikat."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<Uri> signatures);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X.509-certifikat att motsignera var och en av de angivna `signatures`."
    - id: signatures
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "Lista över signaturer för motsignera."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Den digitala signaturen som används för att motsignera var och en av de <code> signatures </code>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either the <code>certificate</code> or <code>signatures</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Paketet innehåller inga signerade <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objekt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Paketet innehåller inga <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> delar."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  id: DefaultHashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar en [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] sträng som identifierar den standard hash-algoritm som används för att skapa och verifiera signaturer."
  remarks: "Standard-hash-algoritmen för standard <xref:System.IO.Packaging.PackageDigitalSignatureManager>klass är <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>([!INCLUDE[TLA#tla_sha1](~/add/includes/ajax-current-ext-md.md)]).</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> </xref:System.IO.Packaging.PackageDigitalSignatureManager>       Den <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>egenskapen hämtar eller anger den faktiska hash-algoritm som används för att skapa och verifiera signaturer.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>       Egenskapen DefaultHashAlgorithm används vanligtvis för att återställa den <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>egenskapen tillbaka till standard efter en tillfällig ändring.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>"
  syntax:
    content: public static string DefaultHashAlgorithm { get; }
    return:
      type: System.String
      description: "En [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] sträng som identifierar den standard hash-algoritm som används för att skapa och verifiera signaturer."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  id: GetSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: GetSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.GetSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returnerar den digitala signaturen för en angiven signatur [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);
    parameters:
    - id: signatureUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] av den digitala signaturen som ska returneras."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Den digitala signaturen för den angivna <code> signatureUri </code>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om en signatur för den angivna <code> signatureUri </code> kan inte hittas."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  id: HashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar eller anger den [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] identifieraren för den <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> -instans som används för att skapa och verifiera signaturer."
  remarks: "Standard hash-algoritmen identifierare för hanteraren för digitala signatur som standard är <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>(<xref:System.Security.Cryptography.SHA1>– Secure Hash Algorithm version 1.0).</xref:System.Security.Cryptography.SHA1> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>       Om du inte uttryckligen ange annars den här egenskapen får samma värde som <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.</xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>       Egenskapen HashAlgorithm vanligtvis ändras inte från standard. Den här egenskapen måste ändras endast om en signatur som använder en annan känd och tillgängliga <xref:System.Security.Cryptography.HashAlgorithm>har påträffats.</xref:System.Security.Cryptography.HashAlgorithm>  När du är klar med signaturen som använder en annan hash-algoritm anropa <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>att återställa egenskapen HashAlgorithm till standard.</xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>"
  syntax:
    content: public string HashAlgorithm { get; set; }
    return:
      type: System.String
      description: "Den <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] identifieraren för den <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> -instans som används för att skapa och verifiera signaturer."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Strängen för den [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] ange är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Strängen för den [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] att ställa in är tom."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  id: InvalidSignatureEvent
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: InvalidSignatureEvent
  nameWithType: PackageDigitalSignatureManager.InvalidSignatureEvent
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Inträffar när <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*>påträffar en ogiltig signatur.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*>"
  syntax:
    content: public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;
    return:
      type: System.IO.Packaging.InvalidSignatureEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  id: IsSigned
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar ett värde som anger om paketet innehåller alla signaturer."
  remarks: "Egenskapen är signerad inte att utföra signaturverifieringar. Om signaturer finns och är signerad `true`, en eller flera signaturer kanske inte är giltig.  Anropa <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A>att bekräfta att signaturer är giltiga och har inte ändrats.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A>"
  example:
  - "The following example shows how to use the IsSigned property to determine if a package contains digital signatures.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigvalidate)]\n [!code-cs[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigvalidate)]"
  syntax:
    content: public bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om paketet innehåller signaturer. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  id: ParentWindow
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar eller anger en referens till det överordnade fönstret för att visa en dialogruta för val av certifikat."
  remarks: "En dialogruta för val av certifikat visas bara om en <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>anrop innehåller inga certifikat.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> Om inga certifikat anges, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>visas en dialogruta för certifikat-val som gör att användaren kan välja vilket certifikat som ska användas för signering.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>"
  syntax:
    content: public IntPtr ParentWindow { get; set; }
    return:
      type: System.IntPtr
      description: "Referensen till det överordnade fönstret för att visa dialogrutan för val av certifikat."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  id: RemoveAllSignatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: RemoveAllSignatures()
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Tar bort alla digitala signaturer från paketet."
  remarks: "Den här metoden tar också bort alla X.509-certifikat från paketet.  När du tar bort alla signaturer och certifikat, anropa <xref:System.IO.Packaging.Package.Flush%2A>att spara alla ändringar till arkivet.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: public void RemoveAllSignatures ();
    parameters: []
  overload: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  id: RemoveSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: RemoveSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.RemoveSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Tar bort den digitala signaturen med en angiven signatur [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  remarks: "Den här metoden tar också bort associerade X.509-certifikat om det inte refereras av digital signatur.       När du tar bort en signatur, anropa <xref:System.IO.Packaging.Package.Flush%2A>att spara ändringen till arkivet.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: public void RemoveSignature (Uri signatureUri);
    parameters:
    - id: signatureUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] av den <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> att ta bort."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Meddelanderuta för ett X.509-certifikat som används för att signera en angiven lista över paketdelar."
  remarks: "För att se dialogrutan för val av certifikat spärrad till ett visst fönster, ange den <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>egenskapen innan du anropar logga.</xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>       Logga uppmanas inte för certifikat om det inte finns några i certifikatarkivet standard."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "Listan över [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] för den <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> element att logga in."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Den digitala signaturen som används för att signera listan över <code> parts </code>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Loggar en lista över paketdelar med ett visst X.509-certifikat."
  remarks: ''
  example:
  - "The following example shows how to digitally sign a list of parts within a <xref:System.IO.Packaging.Package>.  For the complete example, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "Listan över [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] för den <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> element att logga in."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X.509-certifikat du använder för att signera var och en av de angivna `parts`."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Den digitala signaturen som används för att signera den givna listan över <code> parts </code>; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om inget certifikat kunde hittas eller användaren klickar på &quot;Avbryt&quot; i dialogrutan för val av certifikat."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Loggar en lista över paketdelar och paketet relationer med ett visst X.509-certifikat."
  remarks: "Mellan `parts` och `relationshipSelectors` det måste finnas minst ett element för att logga in."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "Listan över [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] för den <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objekt att logga in."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X.509-certifikat du använder för att signera var och en av de angivna delar och relationer."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "Listan över <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objekt att logga in."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Den digitala signaturen som används för att signera de element som anges i den <code> parts </code> och <code> relationshipSelectors </code> visas."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Varken <code> parts </code> eller <code> relationshipSelectors </code> ange alla objekt för att logga in."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Loggar en lista över paketdelar och paketet relationer med ett visst X.509-certifikat och [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "Den `parts` listan kan vara tom eller `null` om `relationshipSelectors` innehåller minst en post.       Den `relationshipSelectors` listan kan vara tom eller `null` om `parts` innehåller minst en post.       Mellan den `parts` lista och `relationshipSelectors` det måste finnas minst ett element för att logga in."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors, string signatureId);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "Listan över [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] för den <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objekt att logga in."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X.509-certifikat du använder för att signera var och en av de angivna delar och relationer."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "Listan över <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objekt att logga in."
    - id: signatureId
      type: System.String
      description: "En ID-sträng som ska associeras med signaturen."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Den digitala signaturen som används för att signera de element som anges i den <code> parts </code> och <code> relationshipSelectors </code> visas."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Varken <code> parts </code> eller <code> relationshipSelectors </code> ange alla element att logga in."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Loggar en lista över paketdelar, paketet relationer eller anpassade objekt med en angiven X.509-certifikat och denna signatur [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "Det måste finnas minst ett element för att logga in `parts`, `relationshipSelectors`, `signatureObjects`, eller `objectReferences`.      > [!NOTE] > Villkoren `Object`, `Manifest`, `Reference`, `SignatureProperties`, och `Transform` i följande två anmärkningar avser elementtyper och taggar som definierats i specifikationen W3C XML-signatur Syntax och bearbetning, se [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/).       Den här och andra <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>metoden överlagringar används aktuellt <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A>ordlista som definierar en `Transform` tillämpa baserat på paketdel <xref:System.IO.Packaging.PackagePart.ContentType%2A>.</xref:System.IO.Packaging.PackagePart.ContentType%2A> </xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> </xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>  Specifikationen Microsoft öppna paketering konventioner (OPC) för närvarande kan endast två giltiga `Transform` algoritmer: C14 och C14N.  W3C XML-signatur Syntax och bearbetning standard tillåter inte tomma `Manifest` taggar.  Specifikationen Open Packaging Conventions kräver också en <xref:System.IO.Packaging.Package>-specifika `Object` -tagg som innehåller både `Manifest` och `SignatureProperties` taggar.</xref:System.IO.Packaging.Package>  Varje `Manifest` tagga dessutom också innehålla minst en `Reference` tagg.  Dessa taggar kräver att varje signatur logga minst en <xref:System.IO.Packaging.PackagePart>(icke-tom delar tagg) eller <xref:System.IO.Packaging.PackageRelationship>(icke-tom `relationshipSelectors`) även om signatur krävs endast för att signera `signatureObjects` eller `objectReferences`.</xref:System.IO.Packaging.PackageRelationship> </xref:System.IO.Packaging.PackagePart>       Den här metoden logga ignorerar den <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>egenskap som är associerad med varje <xref:System.Security.Cryptography.Xml.Reference>definieras i `objectReferences`.</xref:System.Security.Cryptography.Xml.Reference> </xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>       Den här logga överlagring ger stöd för generering av [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] signaturer som kräver anpassade `Object` taggar.  För alla angivna `Object` taggen ska vara signerade en motsvarande `Reference` taggen måste anges med en [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] som anger den `Object` tagg i lokala fragment syntax.  Till exempel om den `Object` taggen har ett ID för &quot;myObject&quot;, URI: N i den `Reference` taggen skulle vara &quot;#myObject&quot;.  För osignerade objekt, inte `Reference` krävs."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.DataObject> signatureObjects, System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.Reference> objectReferences);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "Listan över [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] för den <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objekt att logga in."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X.509-certifikat du använder för att signera var och en av de angivna delar och relationer."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "Listan över <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objekt att logga in."
    - id: signatureId
      type: System.String
      description: "En ID-sträng som ska associeras med signaturen."
    - id: signatureObjects
      type: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject}
      description: "En lista över anpassade dataobjekt att logga in."
    - id: objectReferences
      type: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference}
      description: "En lista över referenser till anpassade objekt att logga in."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Den digitala signaturen som används för att signera de element som anges i den <code> parts </code> och <code> relationshipSelectors </code> visas."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Neither <code>parts</code>, <code>relationshipSelectors</code>, <code>signatureObjects</code>, nor <code>objectReferences</code> specify any elements to sign."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En <> </> *> för en del som signerade refererar till en tom <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eller odefinierat <> </> *>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>signatureId</code>är inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och är inte ett giltigt [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] schema-ID (till exempel börjar med en inledande numeriska siffra)."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  id: SignatureOrigin
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] delens signatur ursprung."
  remarks: "SignatureOrigin [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] kan variera av paketet eftersom namnet inte formellt har definierats. Den här implementeringen kommer normalt att använda samma standardvärde, visar värdet som returneras av den här egenskapen oavsett ursprung finns redan i aktuellt <xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package>"
  syntax:
    content: public Uri SignatureOrigin { get; }
    return:
      type: System.Uri
      description: "Den [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] delens signatur ursprung."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  id: SignatureOriginRelationshipType
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar standard signatur ursprung relationstypen."
  syntax:
    content: public static string SignatureOriginRelationshipType { get; }
    return:
      type: System.String
      description: "Typ av standard signatur ursprung relation."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  id: Signatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar en samling med alla signaturer som ingår i paketet."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature> Signatures { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageDigitalSignature}
      description: "En samling med alla de <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> objekt."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Signatures*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  id: TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar eller anger formatet för datum/tid som används för att skapa en signatur <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>"
  remarks: "Standard TimeFormat är &quot;Åååå-MM-DDThh:mm:ss.sTZD&quot;.       Tidsvärdet format följer syntaxen för &quot;W3C datum och tidsformat&quot;-specifikationen på [http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html). De komponenter som visas nedan måste finnas och syntax och skiljetecken som har definierats.      | TimeFormat | Beskrivning | Exempel |   |----------------|-----------------|-------------|   | ÅÅÅÅ | År | 2005 |   | ÅÅÅÅ-MM | År och månad | 2005-07 |   | ÅÅÅÅ-MM-DD | Slutfört datum | 2005-07-28 |   | ÅÅÅÅ-MM-DDThh:mmTZD | Slutföra datum plus timmar och minuter | 2005-07-28T19:20-01:00 |   | ÅÅÅÅ-MM-DDThh:mm:ssTZD | Slutföra datum plus timmar, minuter och sekunder | 2005-07-28T19:20:45-01:00 |   | ÅÅÅÅ-MM-DDThh:mm:ss.sTZD| Slutföra datum plus timmar, minuter och sekunder med ett decimaltal | 2005-07-28T19:20:45.75-01:00 |       där: |||   |-|-|   | ÅÅÅÅ | årtal (till exempel 2005) |   | MM | månad med två siffror (01 = januari) |   | DD | tvåsiffrig dagen i månaden (01 till och med 31) |   | Thh | tvåsiffrig timme (00 via 23 24-timmarsformat) |   | mm | två siffror minuter (00-59) |   | ss | två siffror sekunder (00-59) |   | s | en eller flera siffror som representerar en decimal fracion av en sekund |   | TZD | tidszon beteckning (Z eller + hh: mm eller -hh: mm) |"
  syntax:
    content: public string TimeFormat { get; set; }
    return:
      type: System.String
      description: "Datum/tid-formatet som används för att skapa en signatur <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>"
  overload: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  id: TransformMapping
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar en ordlista som innehåller varje definierat <> </> *> och dess associerade [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref>.<> </> *> identifierare."
  remarks: "Under en åtgärd logga tillhörande transformeringen algoritmen för varje innehållstyp används innan den <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>körs.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>       Standard-mappningar för innehåll och transformeringen innehålla: | Innehåll | ContentType | Algoritmen transformationsidentifierartypen |   |-------------|-----------------|------------------------------------|   | Relationen | &quot; application/vnd.openxmlformats-Package.Relationships+XML&quot;| <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|   | Digital signatur | &quot; application/vnd.openxmlformats-Package.Digital-Signature-xmlsignature+XML&quot;| <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl></xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public System.Collections.Generic.Dictionary<string,string> TransformMapping { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: "En ordlista som innehåller varje definierat <> </> *> och dess associerade [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref>.<> </> *> identifierare."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: VerifyCertificate(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Kontrollerar ett visst X.509-certifikat."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X.509-certifikat att verifiera."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509ChainStatusFlags&quot;></xref>(värdet 0) om certifikatet kontrollerats; Annars flaggor en bitvis uppräkning av fel."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  id: VerifySignatures(System.Boolean)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: VerifySignatures(Boolean)
  nameWithType: PackageDigitalSignatureManager.VerifySignatures(Boolean)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Verifierar signaturer på alla signerade delar i paketet."
  remarks: "Den här metoden verifierar endast digitala signaturer. den verifierar inte motsvarande X.509-certifikat.  Den <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A>metoden kan användas för att verifiera X.509-certifikat.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A>"
  example:
  - "The following example shows how to use this method to validate all signed parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigvalidate)]\n [!code-cs[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigvalidate)]"
  syntax:
    content: public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);
    parameters:
    - id: exitOnFailure
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Avsluta vid första misslyckande; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> och kontrollera alla signaturer."
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref>(värdet 0) om alla signaturer har kontrollerats; Annars en uppräkning som identifierar felet."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: PackageDigitalSignatureManager(Package)
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
- uid: System.IO.Packaging.CertificateEmbeddingOption
  parent: System.IO.Packaging
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: CertificateEmbeddingOption
  fullName: System.IO.Packaging.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign()
  nameWithType: PackageDigitalSignatureManager.Countersign()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign()
- uid: System.IO.Packaging.PackageDigitalSignature
  parent: System.IO.Packaging
  isExternal: false
  name: PackageDigitalSignature
  nameWithType: PackageDigitalSignature
  fullName: System.IO.Packaging.PackageDigitalSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign(X509Certificate,IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: GetSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.GetSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: InvalidSignatureEvent
  nameWithType: PackageDigitalSignatureManager.InvalidSignatureEvent
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
- uid: System.IO.Packaging.InvalidSignatureEventHandler
  parent: System.IO.Packaging
  isExternal: false
  name: InvalidSignatureEventHandler
  nameWithType: InvalidSignatureEventHandler
  fullName: System.IO.Packaging.InvalidSignatureEventHandler
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveAllSignatures()
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures()
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.RemoveSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(Uri)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
- uid: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PackageRelationshipSelector>
  nameWithType: IEnumerable<PackageRelationshipSelector>
  fullName: System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IO.Packaging.PackageRelationshipSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageRelationshipSelector
    name: PackageRelationshipSelector
    nameWithType: PackageRelationshipSelector
    fullName: PackageRelationshipSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DataObject>
  nameWithType: IEnumerable<DataObject>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.DataObject>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Cryptography.Xml.DataObject>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.DataObject
    name: DataObject
    nameWithType: DataObject
    fullName: DataObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Reference>
  nameWithType: IEnumerable<Reference>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.Reference>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Cryptography.Xml.Reference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.Reference
    name: Reference
    nameWithType: Reference
    fullName: Reference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageDigitalSignature}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PackageDigitalSignature>
  nameWithType: ReadOnlyCollection<PackageDigitalSignature>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageDigitalSignature
    name: PackageDigitalSignature
    nameWithType: PackageDigitalSignature
    fullName: PackageDigitalSignature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,String>
  nameWithType: Dictionary<String,String>
  fullName: System.Collections.Generic.Dictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifyCertificate(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainStatusFlags
  nameWithType: X509ChainStatusFlags
  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifySignatures(Boolean)
  nameWithType: PackageDigitalSignatureManager.VerifySignatures(Boolean)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(Boolean)
- uid: System.IO.Packaging.VerifyResult
  parent: System.IO.Packaging
  isExternal: false
  name: VerifyResult
  nameWithType: VerifyResult
  fullName: System.IO.Packaging.VerifyResult
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: PackageDigitalSignatureManager
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign
  nameWithType: PackageDigitalSignatureManager.Countersign
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: GetSignature
  nameWithType: PackageDigitalSignatureManager.GetSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveAllSignatures
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveSignature
  nameWithType: PackageDigitalSignatureManager.RemoveSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign
  nameWithType: PackageDigitalSignatureManager.Sign
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifyCertificate
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifySignatures
  nameWithType: PackageDigitalSignatureManager.VerifySignatures
