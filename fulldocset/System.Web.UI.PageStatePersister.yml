### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageStatePersister
  id: PageStatePersister
  children:
  - System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  - System.Web.UI.PageStatePersister.ControlState
  - System.Web.UI.PageStatePersister.Load
  - System.Web.UI.PageStatePersister.Page
  - System.Web.UI.PageStatePersister.Save
  - System.Web.UI.PageStatePersister.StateFormatter
  - System.Web.UI.PageStatePersister.ViewState
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
  type: Class
  summary: "Innehåller grundläggande funktioner för ASP.NET visa tillstånd beständiga mekanismer."
  remarks: "HTTP-begäranden och svar är natur tillståndslösa. Om du vill behålla statusinformation mellan HTTP-begäranden som ASP.NET server-sidor kan lagra <xref:System.Web.UI.Page>tillstånd.</xref:System.Web.UI.Page> Det här tillståndet kallas visningsstatus, består av sidan och styra inställningar och data som gör sidor och kontroller visas som om de är samma som användaren såg och har åtgärdat med på deras senaste onödig kommunikation till servern. Det finns mekanismer för att lagra visningsstatus mellan efterföljande förfrågningar till samma sida. Den abstrakta klassen PageStatePersister representerar basklass för dessa tillstånd mekanismer för lagring av information.       Visa tillstånd beständiga standardmekanism i ASP.NET är att tillståndsinformation som en Base64-kodad sträng i ett dolt HTML-element (ett element med den `type` -attributet inställt på `&quot;hidden&quot;`) på sidan. En ASP.NET-sida använder en <xref:System.Web.UI.HiddenFieldPageStatePersister>objekt att göra detta på fungera med hjälp av en <xref:System.Web.UI.IStateFormatter>instans serialisera och deserialisera objektet statusinformation.</xref:System.Web.UI.IStateFormatter> </xref:System.Web.UI.HiddenFieldPageStatePersister> Alternativt kan du lagra visningsstatus för sidorna i den <xref:System.Web.HttpContext.Session%2A>objekt på en server med hjälp av den <xref:System.Web.UI.SessionPageStatePersister>klass för mobila klienter med begränsad bandbredd och resurser.</xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.HttpContext.Session%2A> I vissa fall kan du inaktivera visa beständighet helt och hållet. Om du gör detta är resultatet att ibland sidor och kontroller som förlitar sig på beständighet inte fungerar korrekt. Mer information om tillstånd hantering och visa status för sidan finns [översikt över ASP.NET Management](~/add/includes/ajax-current-ext-md.md).       Om du skriver kontroller kan du lagra statusinformation för kontroller i den <xref:System.Web.UI.Control.ViewState%2A>ordlista, vilket är en <xref:System.Web.UI.StateBag>objektet.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> En utvecklare kan hämta kontrolltillstånd via den <xref:System.Web.UI.PageStatePersister.ControlState%2A>egenskapen.</xref:System.Web.UI.PageStatePersister.ControlState%2A> Du tilldelar nycklar och värden i den <xref:System.Web.UI.Control.ViewState%2A>egenskapen och <xref:System.Web.UI.Page>objektet Serialiserar tillståndsinformationen mellan begäranden.</xref:System.Web.UI.Page> </xref:System.Web.UI.Control.ViewState%2A> Om du vill utföra egna tillstånd hantering i kontrollen åsidosätta den <xref:System.Web.UI.Control.LoadViewState%2A>och <xref:System.Web.UI.Control.SaveViewState%2A>metoder.</xref:System.Web.UI.Control.SaveViewState%2A> </xref:System.Web.UI.Control.LoadViewState%2A> Ingen information om tillstånd som lagras i den här ordlistan går förlorad när visningsstatus har inaktiverats av en sida-utvecklare. Minimera det i ASP.NET version 2.0 som du kan lagra kritiskt tillståndsinformation i ett separat objekt kallas kontrollens status. Tillstånd kontrollobjekt påverkas inte om visningsstatus har inaktiverats av en sida-utvecklare. Lagra statusinformation i tillståndet kontrollobjekt kräver att kontrollen åsidosätta den <xref:System.Web.UI.Control.LoadControlState%2A>och <xref:System.Web.UI.Control.SaveControlState%2A>metoder och att kontrollen kan registreras för att lagra information om tillstånd i styra tillstånd varje gång kontrollen har initierats.</xref:System.Web.UI.Control.SaveControlState%2A> </xref:System.Web.UI.Control.LoadControlState%2A> Du kan registrera en kontroll om du vill använda kontrollens status genom att åsidosätta den <xref:System.Web.UI.Control.OnInit%2A>metoden och anropar den <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>metoden.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> </xref:System.Web.UI.Control.OnInit%2A> Mer information om hur du använder den <xref:System.Web.UI.Control.ViewState%2A>och kontroll tillstånd när du utvecklar kontroller, se [utveckla anpassade serverkontroller](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>       Du kan utöka klassen PageStatePersister för att införa egna visa tillstånd beständiga metoder för att visa tillståndet på klienter som inte stöder de befintliga beständiga mekanismerna för Visa tillstånd, och du kan använda sidan kort för att konfigurera din ASP.NET-program att använda en annan vy tillstånd beständiga mekanismer baserat på vilken typ av klient som en sida behandlas. Klasser som härleds från klassen PageStatePersister måste åsidosätta abstrakt <xref:System.Web.UI.PageStatePersister.Save%2A>metod för att lagra visningsstatus och styra tillstånd i beständiga-medium och åsidosätta <xref:System.Web.UI.PageStatePersister.Load%2A>metoden för att extrahera det.</xref:System.Web.UI.PageStatePersister.Load%2A> </xref:System.Web.UI.PageStatePersister.Save%2A> Om du behöver serialisera visningsstatus och status till en sträng, kan du använda den <xref:System.Web.UI.IStateFormatter>objekt som används av den <xref:System.Web.UI.PageStatePersister.StateFormatter%2A>egenskapen.</xref:System.Web.UI.PageStatePersister.StateFormatter%2A> </xref:System.Web.UI.IStateFormatter> Effektivt Serialiserar och deserializes objektet statusinformation till en Base64-kodad sträng. Du kan också åsidosätta den <xref:System.Web.UI.PageStatePersister.StateFormatter%2A>egenskapen för att ange egna objekt tillstånd serialiseringsmekanism.</xref:System.Web.UI.PageStatePersister.StateFormatter%2A>"
  example:
  - "The following code example demonstrates how to create a PageStatePersister object that saves view and control state on the Web server. The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information. Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application. Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/csharp/t-system.web.ui.pagestat_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_1.vb)]  \n  \n The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_2.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/csharp/t-system.web.ui.pagestat_2.cs)]  \n  \n Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line. Ensure that the compiled assembly is in the \\Bin directory underneath the ASP.NET application root.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_3.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/csharp/t-system.web.ui.pagestat_3.cs)]  \n  \n Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information. The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file. In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).  \n  \n```  \n<browsers>  \n    <browser refid=\"Default\" >  \n        <controlAdapters>  \n            <adapter   \n                controlType=\"System.Web.UI.Page\"                              \n                adapterType=\"Samples.AspNet.CS.MyPageAdapter\" />  \n        </controlAdapters>  \n    </browser>  \n</browsers>  \n```"
  syntax:
    content: public abstract class PageStatePersister
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  id: '#ctor(System.Web.UI.Page)'
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> klass."
  syntax:
    content: protected PageStatePersister (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "Den <xref href=&quot;System.Web.UI.Page&quot;> </xref> som mekanismen visa tillstånd beständiga har skapats för."
  overload: System.Web.UI.PageStatePersister.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>page</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ControlState
  id: ControlState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett objekt som representerar informationen som styr aktuella <xref href=&quot;System.Web.UI.Page&quot;> </xref> användning av objekt att bevara över HTTP-begäranden till webbservern."
  remarks: "Kontrollens status är ett objekt som består av kritiska data med visningsstatus som Web server kontroller behöver funktionen och som finns i ett separat objekt från normalläge statusinformation. Tillstånd kontrolldata påverkas inte om visningsstatus har inaktiverats på den <xref:System.Web.UI.Page>nivån, men kräver extra genomföra åtgärder för att använda.</xref:System.Web.UI.Page> Mer information om hur du använder den <xref:System.Web.UI.Control.ViewState%2A>och kontroll tillstånd när du utvecklar kontroller, se [utveckla anpassade serverkontroller](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ControlState property. In this example, the ControlState property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the ControlState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public object ControlState { get; set; }
    return:
      type: System.Object
      description: "Ett objekt som innehåller data med visningsstatus."
  overload: System.Web.UI.PageStatePersister.ControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Load
  id: Load
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Åsidosätts av härledda klasser för att deserialisera och läsa in information om sparade tillstånd när en <xref href=&quot;System.Web.UI.Page&quot;> </xref> objektet initierar kontrollen hierarkin."
  remarks: "Klasser som härleds från den <xref:System.Web.UI.PageStatePersister>klassen implementerar du metoden belastning för att initiera den <xref:System.Web.UI.PageStatePersister.ViewState%2A>och <xref:System.Web.UI.PageStatePersister.ControlState%2A>Egenskaper från vissa beständiga format.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Load method to load view state from a persistence medium. The `StreamPageStatePersister` attempts to read data from a stream. It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/m-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public abstract void Load ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Page
  id: Page
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt som mekanismen visa tillstånd beständiga skapas för."
  remarks: "Du kan använda egenskapen sida för att få åtkomst till aktuellt <xref:System.Web.HttpContext>objektet.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.UI.Page Page { get; set; }
    return:
      type: System.Web.UI.Page
      description: "Den <xref href=&quot;System.Web.UI.Page&quot;> </xref> som den <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> är associerad med."
  overload: System.Web.UI.PageStatePersister.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Save
  id: Save
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Åsidosätts av härledda klasser för att serialisera beständiga statusinformation om en <xref href=&quot;System.Web.UI.Page&quot;> </xref> objektet tas bort från minnet."
  remarks: "Klasser som härleds från den <xref:System.Web.UI.PageStatePersister>klassen implementerar du metoden Spara för att spara innehållet i den <xref:System.Web.UI.PageStatePersister.ViewState%2A>och <xref:System.Web.UI.PageStatePersister.ControlState%2A>egenskaper till ett medium beständiga.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Save method to persist view state to a persistence medium. The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/m-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public abstract void Save ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.StateFormatter
  id: StateFormatter
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en <xref href=&quot;System.Web.UI.IStateFormatter&quot;> </xref> objekt som används för att serialisera och deserialisera tillståndsinformationen i den <> </> *> och <> </> *> egenskaper under anrop till den <> </> *> och <> </> *> metoder."
  remarks: "Du kan åsidosätta egenskapen StateFormatter för att tillhandahålla egna visa tillstånd formateringen."
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the StateFormatter property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/p-system.web.ui.pagestat_2_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_2_1.vb)]"
  syntax:
    content: protected System.Web.UI.IStateFormatter StateFormatter { get; }
    return:
      type: System.Web.UI.IStateFormatter
      description: "En instans av <xref href=&quot;System.Web.UI.IStateFormatter&quot;> </xref> som används för att serialisera och deserialisera objekttillstånd."
  overload: System.Web.UI.PageStatePersister.StateFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ViewState
  id: ViewState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett objekt som representerar informationen som styr aktuella <xref href=&quot;System.Web.UI.Page&quot;> </xref> användning av objekt att bevara över HTTP-begäranden till webbservern."
  remarks: "Visa status är en dictionary med tillståndsdata som webbserverkontroller måste fungera och återge sig själva. Kontrollen utvecklare normalt kommer åt visa tillstånd objekt med den <xref:System.Web.UI.Control.ViewState%2A>egenskapen.</xref:System.Web.UI.Control.ViewState%2A> Visa status för påverkas när visningsstatus har inaktiverats på den <xref:System.Web.UI.Page>nivån och därför kontroller kan inte fungera korrekt i dessa scenarier.</xref:System.Web.UI.Page> Mer information om hur du använder <xref:System.Web.UI.Control.ViewState%2A>och styra tillstånd när du utvecklar kontroller, se [utveckla anpassade serverkontroller](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ViewState property. In this example, the ViewState property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the ViewState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public object ViewState { get; set; }
    return:
      type: System.Object
      description: "Ett objekt som innehåller data med visningsstatus."
  overload: System.Web.UI.PageStatePersister.ViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.PageStatePersister.ControlState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
- uid: System.Web.UI.PageStatePersister.Page
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
- uid: System.Web.UI.PageStatePersister.StateFormatter
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
- uid: System.Web.UI.IStateFormatter
  parent: System.Web.UI
  isExternal: false
  name: IStateFormatter
  nameWithType: IStateFormatter
  fullName: System.Web.UI.IStateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
- uid: System.Web.UI.PageStatePersister.#ctor*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister.PageStatePersister
- uid: System.Web.UI.PageStatePersister.ControlState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load
  nameWithType: PageStatePersister.Load
- uid: System.Web.UI.PageStatePersister.Page*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save
  nameWithType: PageStatePersister.Save
- uid: System.Web.UI.PageStatePersister.StateFormatter*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
