### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticationService
  id: AuthenticationService
  children:
  - System.Web.ApplicationServices.AuthenticationService.#ctor
  - System.Web.ApplicationServices.AuthenticationService.Authenticating
  - System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  - System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  - System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  - System.Web.ApplicationServices.AuthenticationService.Logout
  - System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  langs:
  - csharp
  name: AuthenticationService
  nameWithType: AuthenticationService
  fullName: System.Web.ApplicationServices.AuthenticationService
  type: Class
  summary: "Aktiverar åtkomst till ASP.NET-formulärautentisering som en webbtjänst."
  remarks: "Objektet AuthenticationService gör att du kan autentisera användare via ett [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] service. Du använder tjänsten WCF-autentisering när du måste autentisera användare via ASP.NET-medlemskap från ett program som är utanför webbprogrammet som lagrar användarens autentiseringsuppgifter. Programmet måste kunna skicka och använda meddelandet i SOAP-format. Via klassen AuthenticationService du användare logga in, användare loggas, verifiera autentiseringsuppgifterna, kontrollera autentiseringsstatus för, anpassa autentisering och ange autentiseringscookien.       Klassen AuthenticationService innehåller fyra metoder som du ska komma åt endast via en WCF-tjänst: den <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, och <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>metoder.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> </xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> För att anropa metoderna, aktivera Autentiseringstjänsten på en webbserver och anslut sedan ett klientprogram i WCF-kompatibel till webbtjänsten. Information om hur du konfigurerar Autentiseringstjänsten finns [så här: aktivera WCF-Autentiseringstjänsten](~/add/includes/ajax-current-ext-md.md).       För inloggning av användare som du skickar autentiseringsuppgifter för den <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>metoden.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Om autentiseringsuppgifterna är giltiga, skapas en autentiseringscookie AuthenticationService-klassen. Om cookien för autentisering inte har upphört att gälla, vet du att användarens autentiseringsuppgifter har autentiserats och du behöver inte verifiera autentiseringsuppgifterna igen. (Cookie mindre autentisering är inte tillgängliga via klassen AuthenticationService.)       AuthenticationService kan medföra två händelser: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>och <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Den <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>händelsen inträffar när användarens autentiseringsuppgifter verifieras.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Skapa en händelsehanterare för den <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>händelsen för att anpassa hur autentiseringsuppgifter valideras.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Den <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>händelsen inträffar när autentiseringscookien anges när autentiseringsuppgifter har verifierats.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Skapa en händelsehanterare för den <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>händelsen för att anpassa autentiseringscookien.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>       Den <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>metoden kontrollerar användarautentiseringsuppgifter för autentisering, men returnerar inte en autentiseringsbiljett.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Använd <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>när en användare har loggade in och du måste kontrollera att autentiseringsuppgifterna är giltiga i början av en ny session för programmet.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>       Ett exempel på hur WCF-tjänst från ett konsolprogram för autentisering, se [genomgång: med ASP.NET-programtjänster](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class AuthenticationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.ApplicationServices.AuthenticationService&quot;> </xref> klass."
  syntax:
    content: public AuthenticationService ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  id: Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Inträffar när användarautentiseringsuppgifter valideras."
  remarks: "Authenticating-händelsen utlöses när användarautentiseringsuppgifter valideras. Skapa en händelsehanterare för händelsen Authenticating för att anpassa hur autentiseringsuppgifter verifieras."
  example:
  - "The following example shows how to bind an event handler for the Authenticating event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/csharp/e-system.web.application_0_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/visualbasic/e-system.web.application_0_1.asax)]  \n  \n The following example shows an event handler for the Authenticating event in the Global.asax file. The event handler reads two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property and passes them together with the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/e-system.web.application_0_2.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/e-system.web.application_0_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs> Authenticating;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  id: CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Inträffar när autentiseringscookien anges."
  remarks: "CreatingCookie-händelsen utlöses när autentiseringscookien anges när autentiseringsuppgifter har verifierats. Skapa en händelsehanterare för händelsen CreatingCookie för att anpassa autentiseringscookien."
  example:
  - "The following example shows how to bind an event handler to the CreatingCookie event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/csharp/e-system.web.application_1_1.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.application_1_1.asax)]  \n  \n The following example shows an event handler for the CreatingCookie event in the Global.asax file. The event handler customizes the authentication cookie by adding the value in the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property to the <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> property. Store the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property in a cookie only if you know that the data in the property is not sensitive. Malicious users can access the values in the cookie.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/csharp/e-system.web.application_1_2.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/visualbasic/e-system.web.application_1_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs> CreatingCookie;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  id: IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Anger om den aktuella användaren har autentiserats."
  remarks: "Metoden IsLoggedIn kontrollerar om den aktuella användaren autentiseras genom att kontrollera den <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>      > [!NOTE] > Inte anropa metoden IsLoggedIn från kod som körs på webbservern. Du anropa metoden IsLoggedIn endast som en del av en WCF-tjänst."
  syntax:
    content: public bool IsLoggedIn ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren har autentiserats; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  id: Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Kontrollerar användarens autentiseringsuppgifter och skapar en autentiseringsbiljett (cookie) om autentiseringsuppgifterna är giltiga."
  remarks: "Metoden inloggningen verifierar autentiseringsuppgifter för användare via en medlemskapsprovider. Du kan använda standardprovider för medlemskap eller ange en anpassad medlemskapsprovider vid körning. Den <xref:System.Web.ApplicationServices.AuthenticationService>klassen överför `userName` och `password` till medlemskapsprovidern <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>metoden, men inte klarar `customCredential`.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService> Om <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>returnerar `true`, <xref:System.Web.ApplicationServices.AuthenticationService>skapar en autentiseringsbiljett som en cookie.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Ange den `isPersistent` parameter till `true` att skapa en autentiseringsbiljett varar utanför den aktuella sessionen.      > [!NOTE] > Alltid använda Autentiseringstjänsten tillsammans med secure sockets layer (SSL med hjälp av HTTPS) att skydda känsliga data.       Metoden inloggningen genererar den <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>händelse och <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>händelse.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Skapa en händelsehanterare för <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>att anpassa autentisering, till exempel Kontrollera värdena `customCredential` eller validering av autentiseringsuppgifter via en icke-förvalt medlemskapsprovider.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Värdena i `customCredential` verifieras inte av standardprovider för medlemskap. Om du vill anpassa cookien för autentisering, skapar du en händelsehanterare för <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>      > [!NOTE] > Inte anropa metoden inloggningen från kod som körs på webbservern. Du anropa metoden inloggning endast som en del av en WCF-tjänst. Mer information finns i [ASP.NET-autentisering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool Login (string username, string password, string customCredential, bool isPersistent);
    parameters:
    - id: username
      type: System.String
      description: "Användarnamn som ska verifieras."
    - id: password
      type: System.String
      description: "Lösenordet för den angivna användaren."
    - id: customCredential
      type: System.String
      description: "Värden för att verifiera förutom `userName` och `password`, om sådana finns."
    - id: isPersistent
      type: System.Boolean
      description: "Ett värde som anger om autentiseringsbiljetten förblir giltig mellan sessioner."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användarens autentiseringsuppgifter är giltiga. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.Login*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  id: Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Rensar autentiseringsbiljetten (cookie) i webbläsaren."
  remarks: "Metoden logga ut raderar autentiseringscookien från webbläsarens cookie-samlingen. Användaren måste logga in igen ska autentiseras.       Den <xref:System.Web.ApplicationServices.AuthenticationService>klassen inte lagra informationen på servern om vilken autentiseringsmetod biljetter har avmarkerats.</xref:System.Web.ApplicationServices.AuthenticationService>      > [!NOTE] > Inte anropa metoden logga ut från kod som körs på webbservern. Du anropa metoden logga ut som en del av en WCF-tjänst. Mer information finns i [ASP.NET-autentisering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Logout ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.Logout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  id: ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Verifierar autentiseringsuppgifter för användare utan att utfärda en autentiseringsbiljett."
  remarks: "Metoden ValidateUser autentiserar autentiseringsuppgifter, men anger inte en autentiseringscookie. Utan en autentiseringscookie loggas användaren inte även om autentiseringsuppgifterna är giltiga.       Använd ValidateUser-metoden när du måste kontrollera om en användares autentiseringsuppgifter är giltiga utan att få en autentiseringscookie. Du kan till exempel göra detta om autentiseringscookien lagras redan i ett klientprogram, men du vill kontrollera att användarens autentiseringsuppgifter är giltiga när en ny session startar.       TheValidateUser metoden genererar den <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>händelse, men inte öka den <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>händelse.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>      > [!NOTE] > Inte anropa metoden ValidateUser från kod som körs på webbservern. Du anropa metoden ValidateUser endast som en del av en WCF-tjänst. Mer information finns i [ASP.NET-autentisering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidateUser (string username, string password, string customCredential);
    parameters:
    - id: username
      type: System.String
      description: "Användarnamn som ska verifieras."
    - id: password
      type: System.String
      description: "Lösenordet för den angivna användaren."
    - id: customCredential
      type: System.String
      description: "Värden för att verifiera förutom `userName` och `password`, om sådana finns."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användarens autentiseringsuppgifter är giltiga. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
- uid: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AuthenticatingEventArgs>
  nameWithType: EventHandler<AuthenticatingEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.AuthenticatingEventArgs
    name: AuthenticatingEventArgs
    nameWithType: AuthenticatingEventArgs
    fullName: AuthenticatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
- uid: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CreatingCookieEventArgs>
  nameWithType: EventHandler<CreatingCookieEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.CreatingCookieEventArgs
    name: CreatingCookieEventArgs
    nameWithType: CreatingCookieEventArgs
    fullName: CreatingCookieEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService
  nameWithType: AuthenticationService.AuthenticationService
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn
  nameWithType: AuthenticationService.IsLoggedIn
- uid: System.Web.ApplicationServices.AuthenticationService.Login*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login
  nameWithType: AuthenticationService.Login
- uid: System.Web.ApplicationServices.AuthenticationService.Logout*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout
  nameWithType: AuthenticationService.Logout
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser
  nameWithType: AuthenticationService.ValidateUser
