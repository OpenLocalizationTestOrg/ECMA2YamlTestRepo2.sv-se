### YamlMime:ManagedReference
items:
- uid: System.Globalization.ChineseLunisolarCalendar
  id: ChineseLunisolarCalendar
  children:
  - System.Globalization.ChineseLunisolarCalendar.#ctor
  - System.Globalization.ChineseLunisolarCalendar.ChineseEra
  - System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.ChineseLunisolarCalendar.Eras
  - System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  - System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  - System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  langs:
  - csharp
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar
  fullName: System.Globalization.ChineseLunisolarCalendar
  type: Class
  summary: "Representerar tid i avdelningar, till exempel månader, dagar och år. År beräknas med hjälp av kalendern kinesiska medan dagar och månader beräknas med hjälp av sol-och månkalender kalendern."
  remarks: "ChineseLunisolarCalendar klassen härleds från den <xref:System.Globalization.EastAsianLunisolarCalendar>klass som representerar sol-och månkalender kalendern.</xref:System.Globalization.EastAsianLunisolarCalendar> Den <xref:System.Globalization.EastAsianLunisolarCalendar>klassen stöder sexagenary år cykeln (som upprepas var 60 år) utöver kryssrutan år och månkalender månader.</xref:System.Globalization.EastAsianLunisolarCalendar> Varje år kryssrutan i kalendern är associerad med ett Sexagenary år, Celestial stam och en land gren och dessa kalendrar kan ha leap månader efter varje månad. Klassen ChineseLunisolarCalendar beräknar år baserat på sol beräkningar och månader och dagar baserat på månkalender beräkningar.      > [!NOTE] > Information om hur du använder klassen ChineseLunisolarCalendar och andra klasser i kalendern i .NET Framework finns [arbeta med kalendrar](~/add/includes/ajax-current-ext-md.md).       En månad leap kan inträffa efter en månad i ett år. Till exempel den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar ett tal mellan 1 och 13 som anger den månad som är associerad med ett visst datum.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Om det finns en leap månad mellan åttonde och nionde månader år, den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar 8 för den åttonde månaden, 9 för leap åttonde månad och 10 för den nionde månaden.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       För närvarande används ChineseLunisolarCalendar inte av någon av kulturer som stöds av <xref:System.Globalization.CultureInfo>klass.</xref:System.Globalization.CultureInfo> Den här klassen kan därför användas endast för att beräkna ett datum i kalendern för kinesiska sol-och månkalender.       Varje <xref:System.Globalization.CultureInfo>objekt stöder en uppsättning kalendrar.</xref:System.Globalization.CultureInfo> Den <xref:System.Globalization.CultureInfo.Calendar%2A>-egenskap returnerar standardkalender för kulturen, och <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>egenskapen returnerar en matris som innehåller alla kalendrar som stöds av kulturen.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Så här ändrar du den kalender som används av en <xref:System.Globalization.CultureInfo>genom att programmet ska ange <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>egenskapen för <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>till en ny <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: 'public class ChineseLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'
  inheritance:
  - System.Globalization.Calendar
  - System.Globalization.EastAsianLunisolarCalendar
  implements: []
  inheritedMembers:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initierar en ny instans av den <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> klass."
  syntax:
    content: public ChineseLunisolarCalendar ();
    parameters: []
  overload: System.Globalization.ChineseLunisolarCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  id: ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger era som motsvarar aktuellt <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> objekt."
  remarks: "Värdet för det här fältet är 1.       Den <xref:System.Globalization.ChineseLunisolarCalendar>klassen identifierar endast den aktuella era.</xref:System.Globalization.ChineseLunisolarCalendar>"
  syntax:
    content: public const int ChineseEra = 1;
    return:
      type: System.Int32
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar antalet dagar under året som föregår det år som anges av den <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>egenskapen.</xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>"
  remarks: "Den här egenskapen returnerar ett konstantvärde av 384."
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "Antalet dagar under året som föregår det angivna <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>.</xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> året"
  overload: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  id: Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar epoker som motsvarar en uppsättning datum och tidpunkter som stöds av aktuellt <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> objekt."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "En matris med signerat 32-bitars heltal som anger de relevanta epoker. Returvärdet för en <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> objekt alltid är en matris som innehåller ett element som är lika med den <xref href=&quot;System.Globalization.ChineseLunisolarCalendar.ChineseEra&quot;> </xref> värde."
  overload: System.Globalization.ChineseLunisolarCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar era som motsvarar det angivna <xref:System.DateTime>typ.</xref:System.DateTime>"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>typen att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal som representerar era i den <code> time </code> parameter."
  overload: System.Globalization.ChineseLunisolarCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>är mindre än <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> eller större än <xref:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar det maximala datum och tidpunkt som stöds av den <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> klass."
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "En &lt;xref:System.DateTime?displayProperty=fullName&gt; typen som representerar den senaste tidpunkten på 28 januari 2101 i gregoriansk kalender, vilket motsvarar cirka konstruktorn `DateTime(2101, 1, 28, 23, 59, 59, 999)`."
  overload: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar minsta datum och tid som stöds av den <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> klass."
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "En &lt;xref:System.DateTime?displayProperty=fullName&gt; typen som representerar den 19 februari 1901 i gregoriansk kalender som motsvarar konstruktorn, `DateTime(1901, 2, 19)`."
  overload: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: System.Globalization.EastAsianLunisolarCalendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.ChineseLunisolarCalendar.Eras*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra
  nameWithType: ChineseLunisolarCalendar.GetEra
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
