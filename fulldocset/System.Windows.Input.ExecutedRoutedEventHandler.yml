### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  id: ExecutedRoutedEventHandler
  langs:
  - csharp
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
  type: Delegate
  summary: "Representerar den metod som hanterar den <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> och <xref href=&quot;System.Windows.Input.CommandBinding.PreviewExecuted&quot;> </xref> dirigerade händelser samt relaterade bifogade händelser."
  remarks: "Det här ombudet innehåller implementering logik för <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand>  Avgränsa implementering logiken från kommandot gör att kommandot ska anropas från olika källor och typer och möjliggör centralisering av kommandot logik.       Det här ombudet används också för <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>och <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>, som är bifogade händelser på den <xref:System.Windows.Input.CommandManager>klassen som implementerar en stor del av infrastrukturen som kommandoenheten.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Men mest praktiskt hanterare hanterar den <xref:System.Windows.Input.CommandBinding.Executed>händelser från en viss <xref:System.Windows.Input.CommandBinding>, snarare än fungerar på den <xref:System.Windows.Input.CommandManager>nivå.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       Inom <xref:System.Windows.Input.ExecutedRoutedEventArgs>, följande egenskaper är vanligtvis av intresse när du skriver en händelsehanterare för en routade händelse som resultat av en körda kommandots:- <xref:System.Windows.RoutedEventArgs.Source%2A>rapporterar mål där kommandot utfördes.</xref:System.Windows.RoutedEventArgs.Source%2A> </xref:System.Windows.Input.ExecutedRoutedEventArgs> När kommandot kördes, du kan också se den <xref:System.Windows.RoutedEventArgs.Source%2A>mer vanligtvis i dirigeras händelse villkor som det objekt som aktiverade dirigeras händelse.</xref:System.Windows.RoutedEventArgs.Source%2A>      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>rapporterar kommandot som kördes.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> Den här egenskapen är användbar om du använder kommandot bindningar och om du skriver hanterare som kan hanterar flera kommandon.      - <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>rapporterar kommando-specifika parametrar som skickades av kommandot körs.</xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> Inte alla kommandon använda eller förväntar dig kommando-specifika parametrar.      - <xref:System.Windows.RoutedEventArgs.Handled%2A>rapporterar om händelsen routade som härrör från det körda kommandot hanterades redan av ett annat element längs vägen.</xref:System.Windows.RoutedEventArgs.Handled%2A> Routade händelsehanterare, är det rekommenderas att ha hanterare som arbetar med meningsfull vid hantering av händelsen för att ange <xref:System.Windows.RoutedEventArgs.Handled%2A>till `true`.</xref:System.Windows.RoutedEventArgs.Handled%2A> Detta förhindrar hantering händelsen igen ytterligare längs vägen vanliga hanterare för händelsen. Mer information om hur du hanterar dirigerade händelser finns [märkning dirigerade händelser som hanterade och hantering av klassen](~/add/includes/ajax-current-ext-md.md).       Det här ombudet representerar också hanterare för <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName>och <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName>, som är bifogade händelser på den <xref:System.Windows.Input.CommandManager>klassen som implementerar en stor del av infrastrukturen som kommandoenheten.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=fullName> </xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> Men mest praktiskt hanterare hanterar den <xref:System.Windows.Input.CommandBinding.Executed>händelser från en viss <xref:System.Windows.Input.CommandBinding>, snarare än fungerar på den <xref:System.Windows.Input.CommandManager>nivå.</xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.Executed>       Mer information om drar till sig finns [drar till sig översikt](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example creates an ExecutedRoutedEventHandler that sets a visual property on the target when the command is executed. The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.  \n  \n [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/visualbasic/custom_routedcommand/window1.xaml.vb#custom_routedcommandhandlers)]\n [!code-cs[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/add/codesnippet/csharp/Custom_RoutedCommand/Window1.xaml.cs#custom_routedcommandhandlers)]"
  syntax:
    content: public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
