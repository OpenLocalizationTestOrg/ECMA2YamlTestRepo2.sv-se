### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngKey
  id: CngKey
  children:
  - System.Security.Cryptography.CngKey.Algorithm
  - System.Security.Cryptography.CngKey.AlgorithmGroup
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  - System.Security.Cryptography.CngKey.Delete
  - System.Security.Cryptography.CngKey.Dispose
  - System.Security.Cryptography.CngKey.Exists(System.String)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.ExportPolicy
  - System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Handle
  - System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.IsEphemeral
  - System.Security.Cryptography.CngKey.IsMachineKey
  - System.Security.Cryptography.CngKey.KeyName
  - System.Security.Cryptography.CngKey.KeySize
  - System.Security.Cryptography.CngKey.KeyUsage
  - System.Security.Cryptography.CngKey.Open(System.String)
  - System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.ParentWindowHandle
  - System.Security.Cryptography.CngKey.Provider
  - System.Security.Cryptography.CngKey.ProviderHandle
  - System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngKey.UIPolicy
  - System.Security.Cryptography.CngKey.UniqueName
  langs:
  - csharp
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
  type: Class
  summary: "Definierar grundläggande funktioner för nycklar som används med kryptering nästa Generations objekt."
  remarks: "Den här klassen radbryts ryptera nycklar, inte BCrypt nycklar. Ryptera är en delmängd av CNG som innehåller funktioner för lagring av nycklar. BCrypt är en delmängd som tillhandahåller grundläggande kryptografiska tjänster, till exempel slumpmässigt generera nummer, hash-funktioner, signaturer och krypteringsnycklar."
  syntax:
    content: 'public sealed class CngKey : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Algorithm
  nameWithType: CngKey.Algorithm
  fullName: System.Security.Cryptography.CngKey.Algorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar den algoritm som används av nyckeln."
  syntax:
    content: public System.Security.Cryptography.CngAlgorithm Algorithm { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Ett objekt som anger namnet på en krypteringsalgoritm."
  overload: System.Security.Cryptography.CngKey.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
  fullName: System.Security.Cryptography.CngKey.AlgorithmGroup
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar algoritmgruppen som används av nyckeln."
  syntax:
    content: public System.Security.Cryptography.CngAlgorithmGroup AlgorithmGroup { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Ett objekt som anger namnet på en algoritmgrupp för kryptering."
  overload: System.Security.Cryptography.CngKey.AlgorithmGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  id: Create(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Create(CngAlgorithm)
  nameWithType: CngKey.Create(CngAlgorithm)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objekt som kan användas med den angivna algoritmen."
  remarks: "Den här överlagring skapar en nyckel utan ett namn, vilket innebär att nyckeln är tillfälliga (det vill säga den sparas inte). Det skapar också en standard <xref:System.Security.Cryptography.CngKeyCreationParameters>objekt som anger ett standardvärde <xref:System.Security.Cryptography.CngProvider>och andra avancerade parametrar för nyckeln.</xref:System.Security.Cryptography.CngProvider> </xref:System.Security.Cryptography.CngKeyCreationParameters>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: "Den algoritm som nyckeln kommer att användas med."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En tillfällig nyckel."
  overload: System.Security.Cryptography.CngKey.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>algorithm</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Create(CngAlgorithm,String)
  nameWithType: CngKey.Create(CngAlgorithm,String)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en namngiven <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objekt som innehåller den angivna algoritmen."
  remarks: "Om `keyName` har angetts i denna överlagring skapar en beständiga nyckel. Om `keyName` har inte angetts nyckeln kan vara tillfälliga. Den här överlagring skapar även en standard <xref:System.Security.Cryptography.CngKeyCreationParameters>objekt som anger ett standardvärde <xref:System.Security.Cryptography.CngProvider>och andra avancerade parametrar för nyckeln.</xref:System.Security.Cryptography.CngProvider> </xref:System.Security.Cryptography.CngKeyCreationParameters>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: "Den algoritm som nyckeln kommer att användas med."
    - id: keyName
      type: System.String
      description: "Nyckelnamnet. Om ett namn inte tillhandahålls, kommer inte nyckeln sparas."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En sparad eller tillfälliga nyckel som innehåller den angivna algoritmen."
  overload: System.Security.Cryptography.CngKey.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>algorithm</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Create(CngAlgorithm,String,CngKeyCreationParameters)
  nameWithType: CngKey.Create(CngAlgorithm,String,CngKeyCreationParameters)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm,String,CngKeyCreationParameters)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en namngiven <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objekt som innehåller den angivna algoritmen med angivna nycklarna skapandeparametrarna."
  remarks: "Om `keyName` har angetts i denna överlagring skapar en beständiga nyckel. Om `keyName` har inte angetts nyckeln kan vara tillfälliga."
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName, System.Security.Cryptography.CngKeyCreationParameters creationParameters);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: "Den algoritm som nyckeln kommer att användas med."
    - id: keyName
      type: System.String
      description: "Nyckelnamnet. Om ett namn inte tillhandahålls, kommer inte nyckeln sparas."
    - id: creationParameters
      type: System.Security.Cryptography.CngKeyCreationParameters
      description: "Ett objekt som anger avancerade parametrar för metoden, inklusive den <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref>."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En sparad eller tillfälliga nyckel som innehåller den angivna algoritmen."
  overload: System.Security.Cryptography.CngKey.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>algorithm</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Delete
  id: Delete
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Delete()
  nameWithType: CngKey.Delete()
  fullName: System.Security.Cryptography.CngKey.Delete()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Tar bort den nyckel som är associerad med objektet."
  remarks: "-   När du anropar metoden Delete på en tillfällig nyckel, stänger referensen till nyckeln.       När du anropar metoden Delete på en namngiven nyckel i <xref:System.Security.Cryptography.CngKey>objekt kan inte längre användas när den namngivna nyckeln har tagits bort.</xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Security.Cryptography.CngKey.Delete*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ett försök gjordes att komma åt en nyckel som tagits bort."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Dispose
  id: Dispose
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Dispose()
  nameWithType: CngKey.Dispose()
  fullName: System.Security.Cryptography.CngKey.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Frigör alla resurser som används av den aktuella instansen av den <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> klass."
  remarks: "Anropa Dispose när du är klar med hjälp av <xref:System.Security.Cryptography.CngKey>.</xref:System.Security.Cryptography.CngKey> Metoden Dispose lämnar den <xref:System.Security.Cryptography.CngKey>oanvändbar.</xref:System.Security.Cryptography.CngKey> När du anropar Dispose, måste du släppa alla referenser till den <xref:System.Security.Cryptography.CngKey>så skräpinsamlingen kan frigöra minne som den <xref:System.Security.Cryptography.CngKey>var upptar.</xref:System.Security.Cryptography.CngKey> </xref:System.Security.Cryptography.CngKey> Mer information finns i [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md) och [implementera en metod för ta bort](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid anropet avyttra innan du släpper senaste referens till <xref:System.Security.Cryptography.CngKey>.</xref:System.Security.Cryptography.CngKey> De resurser som den använder frigörs annars inte förrän skräpinsamlingen anrop av <xref:System.Security.Cryptography.CngKey>objektets `Finalize` metod.</xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.CngKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Exists(System.String)
  id: Exists(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Exists(String)
  nameWithType: CngKey.Exists(String)
  fullName: System.Security.Cryptography.CngKey.Exists(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerar om det finns en namngiven nyckel i standard nyckellagringsprovider (KSP)."
  remarks: "Standard KSP är <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>"
  syntax:
    content: public static bool Exists (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "Nyckelnamnet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den namngivna nyckeln finns i standard KSP; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  id: Exists(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Exists(String,CngProvider)
  nameWithType: CngKey.Exists(String,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Exists(String,CngProvider)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerar om det finns en namngiven nyckel i angivna nyckellagringsprovider (KSP)."
  remarks: "Använd den här överlagring för att kontrollera om finns en nyckel i en KSP än standardvärdet KSP som är <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>"
  syntax:
    content: public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: "Nyckelnamnet."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "KSP att söka efter nyckeln."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den namngivna nyckeln finns i den angivna providern; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Exists(String,CngProvider,CngKeyOpenOptions)
  nameWithType: CngKey.Exists(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Exists(String,CngProvider,CngKeyOpenOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerar om det finns en namngiven nyckel i angivna nyckellagringsprovider (KSP), enligt de angivna alternativen."
  remarks: "Använd denna överlagring för att kontrollera om finns en nyckel i en KSP än standardvärdet <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>, och ange alternativ för öppen.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>"
  syntax:
    content: public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions options);
    parameters:
    - id: keyName
      type: System.String
      description: "Nyckelnamnet."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "KSP att söka efter nyckeln."
    - id: options
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: "En binär kombination av uppräkningsvärdena som anger alternativ för att öppna en nyckel."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den namngivna nyckeln finns i den angivna providern; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  id: Export(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Export(CngKeyBlobFormat)
  nameWithType: CngKey.Export(CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Export(CngKeyBlobFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Exporterar nyckelmaterialet till en BLOBB i det angivna formatet."
  remarks: "Kryptografi nästa Generations tillåter export i valfritt format som har stöd för underliggande nyckellagringsprovider (KSP). Till exempel på Windows Vista, standard KSP (vilket är <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>) kan bara export av privata nycklar i den <xref:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob%2A>, <xref:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob%2A>, och <xref:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob%2A>format.</xref:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob%2A> </xref:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob%2A> </xref:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob%2A> </xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> Den här begränsningen styrs av den underliggande KSP. Om du använder en annan KSP, tillämpa andra format."
  syntax:
    content: public byte[] Export (System.Security.Cryptography.CngKeyBlobFormat format);
    parameters:
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "Ett objekt som anger formatet för nyckel-BLOB."
    return:
      type: System.Byte[]
      description: "En BLOB som innehåller nyckelmaterial i angivet format."
  overload: System.Security.Cryptography.CngKey.Export*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel. Normalt den <xref:System.Security.Cryptography.CngKey.ExportPolicy*>tillåter inte nyckeln exporteras.</xref:System.Security.Cryptography.CngKey.ExportPolicy*>"
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.ExportPolicy
  id: ExportPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
  fullName: System.Security.Cryptography.CngKey.ExportPolicy
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar export-principen som används av nyckeln."
  remarks: "Exportera princip styr export frekvens och format för nyckel."
  syntax:
    content: public System.Security.Cryptography.CngExportPolicies ExportPolicy { get; }
    return:
      type: System.Security.Cryptography.CngExportPolicies
      description: "Ett objekt som anger principen för export av nyckeln."
  overload: System.Security.Cryptography.CngKey.ExportPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: GetProperty(String,CngPropertyOptions)
  nameWithType: CngKey.GetProperty(String,CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.GetProperty(String,CngPropertyOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar en egenskap, ges ett namn och en uppsättning alternativ för egenskap."
  remarks: "Syftet med den här metoden är att returnera värdet för en godtycklig egenskap av nyckeln. Vanliga sätt att hämta egenskaper är med hjälp av egenskaps-accessorer som tillhandahålls av <xref:System.Security.Cryptography.CngKey>klassen.</xref:System.Security.Cryptography.CngKey> <xref:System.Security.Cryptography.CngKey>tillhandahåller omslutningar för flera, men inte alla egenskaper.</xref:System.Security.Cryptography.CngKey> Metoden GetProperty används huvudsakligen för åtkomst till värdet för en egenskap som inte är omslutna.       Den här metoden är användbar i följande fall:-en ny version av operativsystemet har stöd för en ny kryptografi nästa Generations nyckelegenskap som inte har en wrapper.      -Du lägga till en anpassad egenskap i nyckeln.       Den `options` specifikt används för att ange följande: – oavsett om egenskapen är inbyggt eller anpassat.      – Om egenskapen ska vara beständig med nyckel.       Dessa alternativ måste matcha det värde som egenskapen har angetts med och kommer inte att hitta egenskapen.       <xref:System.Security.Cryptography.CryptographicException>genereras om egenskapen inte kan hittas.</xref:System.Security.Cryptography.CryptographicException> Du bör kontakta den <xref:System.Security.Cryptography.CngKey.HasProperty%2A>först för att undvika undantag i stället för wrapping metoden anrop en `try/catch` block.</xref:System.Security.Cryptography.CngKey.HasProperty%2A>"
  syntax:
    content: public System.Security.Cryptography.CngProperty GetProperty (string name, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på egenskapen önskade."
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "En binär kombination av uppräkningsvärdena som anger alternativ för egenskapen med namnet."
    return:
      type: System.Security.Cryptography.CngProperty
      description: "Ett objekt som innehåller det oformaterade värdet för den angivna egenskapen."
  overload: System.Security.Cryptography.CngKey.GetProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Handle
  id: Handle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Handle
  nameWithType: CngKey.Handle
  fullName: System.Security.Cryptography.CngKey.Handle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar en safe-referensen som representerar en intern nyckel (NCRYPT_KEY_HANDLE)."
  remarks: "Den returnerade referensen är en dubblett av referensen i aktuellt <xref:System.Security.Cryptography.CngKey>objektet.</xref:System.Security.Cryptography.CngKey> Det finns kvar även om aktuellt <xref:System.Security.Cryptography.CngKey>har tagits bort och måste tas bort av separat.</xref:System.Security.Cryptography.CngKey>       Du kan släppa det aktuella objektet och referensen i vilken ordning som helst utan några negativa effekter."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle Handle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
      description: "En safe-referensen som representerar nyckeln."
  overload: System.Security.Cryptography.CngKey.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: HasProperty(String,CngPropertyOptions)
  nameWithType: CngKey.HasProperty(String,CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.HasProperty(String,CngPropertyOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerar om den angivna egenskapen finns på nyckeln."
  remarks: "Den `options` specifikt används för att ange följande: – oavsett om egenskapen är inbyggt eller anpassat.      – Om egenskapen ska vara beständig med nyckel.       Dessa alternativ måste matcha det värde som egenskapen har angetts med och kommer inte att hitta egenskapen.       Den här metoden fungerar korrekt även om egenskapen anges till `false` eller noll."
  syntax:
    content: public bool HasProperty (string name, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "Egenskapsnamn för att kontrollera."
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "En binär kombination av uppräkningsvärdena som anger alternativ för egenskapen med namnet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna egenskapen hittas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.HasProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Import(Byte[],CngKeyBlobFormat)
  nameWithType: CngKey.Import(Byte[],CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Import(Byte[],CngKeyBlobFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en ny nyckel genom att importera det angivna nyckelmaterialet till standard nyckellagringsprovider (KSP) och använda det angivna formatet."
  remarks: "Standard KSP är <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>      > [!IMPORTANT] > På Windows-operativsystem före Windows 7 och Windows Server 2008 R2, vissa CNG key binärt stort objekt (BLOB)-format stöds inte."
  syntax:
    content: public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "En matris som innehåller viktig information."
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "Ett objekt som anger formatet för den `keyBlob` matris."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En ny nyckel."
  overload: System.Security.Cryptography.CngKey.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyBlob</code>or <code>format</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Import(Byte[],CngKeyBlobFormat,CngProvider)
  nameWithType: CngKey.Import(Byte[],CngKeyBlobFormat,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Import(Byte[],CngKeyBlobFormat,CngProvider)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en ny nyckel genom att importera den angivna nyckelmaterial i angivna nyckellagringsprovider (KSP) med det angivna formatet."
  remarks: >-
    > [!IMPORTANT]

    >  On Windows operating systems before Windows 7 and Windows Server 2008 R2, some CNG key binary large object (BLOB) formats are not supported.
  syntax:
    content: public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "En matris som innehåller viktig information."
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "Ett objekt som anger formatet för den `keyBlob` matris."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "KSP."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En ny nyckel."
  overload: System.Security.Cryptography.CngKey.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyBlob</code>, <code>format</code>, or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.IsEphemeral
  id: IsEphemeral
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
  fullName: System.Security.Cryptography.CngKey.IsEphemeral
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar det beständiga tillståndet för nyckeln."
  remarks: "Den här egenskapen anger om nyckeln är tillfälliga (det vill säga nyckeln finns bara för livslängden för referensen), eller bevarats (det vill säga nyckeln finns oberoende av referensen).       Det returnera värdet beror på vilken metod som används för att hämta nyckeln: – Om nyckeln inte har öppnats med den <xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29>metodöverlagringen common language runtime (CLR) hanterar nyckeln och kan avgöra om det är tillfälliga.</xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29>      – Om nyckeln har öppnats av den <xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29>metoden överlagring CLR kan inte avgöra om den är tillfälliga.</xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29> Därför antas nyckeln ska sparas. Men om den här metoden används för att öppna en referens till en nyckel som skapas av CLR, kommer CLR att kunna avgöra om den är tillfälliga.       Den här egenskapen har inte en offentlig set; Det är skrivskyddat."
  syntax:
    content: public bool IsEphemeral { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om nyckeln är tillfälliga; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.IsEphemeral*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.IsMachineKey
  id: IsMachineKey
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
  fullName: System.Security.Cryptography.CngKey.IsMachineKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar omfattning (dator eller användare) nyckeln."
  syntax:
    content: public bool IsMachineKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om nyckeln är tillgänglig på grundval av datoromfattande; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om nyckeln är endast för den aktuella användaren."
  overload: System.Security.Cryptography.CngKey.IsMachineKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.KeyName
  id: KeyName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: KeyName
  nameWithType: CngKey.KeyName
  fullName: System.Security.Cryptography.CngKey.KeyName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar namnet på nyckeln."
  syntax:
    content: public string KeyName { get; }
    return:
      type: System.String
      description: "Namnet på nyckeln. Om nyckeln är tillfälliga värdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.KeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.KeySize
  id: KeySize
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: KeySize
  nameWithType: CngKey.KeySize
  fullName: System.Security.Cryptography.CngKey.KeySize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar storleken på nyckeln i bitar."
  syntax:
    content: public int KeySize { get; }
    return:
      type: System.Int32
      description: "Nyckelns storlek i bitar."
  overload: System.Security.Cryptography.CngKey.KeySize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.KeyUsage
  id: KeyUsage
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
  fullName: System.Security.Cryptography.CngKey.KeyUsage
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar de kryptografiska åtgärder som anges av nyckeln."
  syntax:
    content: public System.Security.Cryptography.CngKeyUsages KeyUsage { get; }
    return:
      type: System.Security.Cryptography.CngKeyUsages
      description: "En binär kombination av uppräkningsvärdena som anger användningsområden som tillåts för nyckeln."
  overload: System.Security.Cryptography.CngKey.KeyUsage*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Open(System.String)
  id: Open(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Open(String)
  nameWithType: CngKey.Open(String)
  fullName: System.Security.Cryptography.CngKey.Open(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av en <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objekt som representerar en befintlig med namnet nyckel."
  remarks: "Den här överlagring använder följande standardvärden:-nyckellagringsprovider (KSP): <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> Använd den <xref:System.Security.Cryptography.CngKey.Open%28System.String%2CSystem.Security.Cryptography.CngProvider%29>överlagra om du vill ange en annan KSP.</xref:System.Security.Cryptography.CngKey.Open%28System.String%2CSystem.Security.Cryptography.CngProvider%29>      -Nyckeln öppna alternativ: <xref:System.Security.Cryptography.CngKeyOpenOptions?displayProperty=fullName>.</xref:System.Security.Cryptography.CngKeyOpenOptions?displayProperty=fullName>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "Namnet på nyckeln."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En befintlig nyckel."
  overload: System.Security.Cryptography.CngKey.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  id: Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  nameWithType: CngKey.Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av en <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objektet med hjälp av en referens till en befintlig nyckel."
  remarks: "Den här överlagring gör det möjligt för avancerade användare till att använda CNG-klasser även om de utnyttjar plattformen anropa eller hanterade interop möjligheterna för C++. Till exempel om du har en inbyggd bibliotek som returnerar nyckeln som en NCRYPT_KEY_HANDLE kan denna överlagring du skapa en hanterad wrapper runt nyckeln och använda CNG-klasser för att ändra den.       När du öppnar en nyckel med dess handtag kan inte fastställa nyckelns tillfälliga tillstånd och måste ange den själv. Flera egenskaper för den <xref:System.Security.Cryptography.CngKey>klass är beroende av det här värdet ska vara giltig.</xref:System.Security.Cryptography.CngKey> Se därför till att du skickar flaggan värdet till den <xref:System.Security.Cryptography.CngKey.Open%2A>metoder.</xref:System.Security.Cryptography.CngKey.Open%2A>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle keyHandle, System.Security.Cryptography.CngKeyHandleOpenOptions keyHandleOpenOptions);
    parameters:
    - id: keyHandle
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
      description: "En referens till en befintlig nyckel."
    - id: keyHandleOpenOptions
      type: System.Security.Cryptography.CngKeyHandleOpenOptions
      description: "Ett värde för uppräkning som anger om `keyHandle` representerar en tillfällig nyckel eller en namngiven nyckel."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En befintlig nyckel."
  overload: System.Security.Cryptography.CngKey.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyHandle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyHandle</code>är ogiltig eller felformaterad, eller den redan är stängd. Detta undantag genereras även om nyckeln är en tillfällig nyckel som skapas av common language runtime (CLR), men <xref href=&quot;System.Security.Cryptography.CngKeyHandleOpenOptions&quot;> </xref> värdet inte anges."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  id: Open(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Open(String,CngProvider)
  nameWithType: CngKey.Open(String,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Open(String,CngProvider)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av en <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objekt som representerar en befintlig med namnet nyckeln, med hjälp av angivna nyckellagringsprovider (KSP)."
  remarks: "Till skillnad från den <xref:System.Security.Cryptography.CngKey.Open%28System.String%29>metoden överlagring denna överlagring kan du ange providern.</xref:System.Security.Cryptography.CngKey.Open%28System.String%29> Dessutom standard <xref:System.Security.Cryptography.CngKeyOpenOptions>värdet för <xref:System.Security.Cryptography.CngKeyOpenOptions>skapas och bunden till nyckeln.</xref:System.Security.Cryptography.CngKeyOpenOptions> </xref:System.Security.Cryptography.CngKeyOpenOptions>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: "Namnet på nyckeln."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "KSP som innehåller nyckeln."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En befintlig nyckel."
  overload: System.Security.Cryptography.CngKey.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Open(String,CngProvider,CngKeyOpenOptions)
  nameWithType: CngKey.Open(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(String,CngProvider,CngKeyOpenOptions)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av en <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objekt som representerar en befintlig med namnet nyckeln med hjälp av angivna nyckellagringsprovider (KSP) och öppna alternativen."
  remarks: "Till skillnad från den <xref:System.Security.Cryptography.CngKey.Open%28System.String%29>metoden överlagring denna överlagring kan du ange både providern och nyckeln öppna alternativ.</xref:System.Security.Cryptography.CngKey.Open%28System.String%29>"
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);
    parameters:
    - id: keyName
      type: System.String
      description: "Namnet på nyckeln."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "KSP som innehåller nyckeln."
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: "En binär kombination av uppräkningsvärdena som anger alternativ för att öppna nyckeln, till exempel där nyckeln öppnas från (dator eller användare lagring) och om du vill ignorera UI-fråga."
    return:
      type: System.Security.Cryptography.CngKey
      description: "En befintlig nyckel."
  overload: System.Security.Cryptography.CngKey.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>or <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Kryptografi nästa Generations stöds inte på systemet."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Andra fel."
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
  fullName: System.Security.Cryptography.CngKey.ParentWindowHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar eller anger Fönsterreferensen (HWND) som ska användas för användargränssnittet (UI) användarprompter på grund av att få åtkomst till nyckeln."
  remarks: "Överordnad fönsterreferensen för nyckeln används i Användargränssnittet frågor, till exempel smartkort PIN-kod uppmanar. Det här värdet är inte beständiga med beständiga nycklar.       Vi rekommenderar att du alltid använda den här egenskapen för nycklar som visar ett användargränssnitt. Använd inte standardvärdet `null` för sådana nycklar."
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    return:
      type: System.IntPtr
      description: "Överordnad fönsterreferensen för nyckeln."
  overload: System.Security.Cryptography.CngKey.ParentWindowHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.Provider
  id: Provider
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: Provider
  nameWithType: CngKey.Provider
  fullName: System.Security.Cryptography.CngKey.Provider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar nyckellagringsprovider (KSP) som hanterar nyckeln."
  syntax:
    content: public System.Security.Cryptography.CngProvider Provider { get; }
    return:
      type: System.Security.Cryptography.CngProvider
      description: "KSP som hanterar nyckeln."
  overload: System.Security.Cryptography.CngKey.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.ProviderHandle
  id: ProviderHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
  fullName: System.Security.Cryptography.CngKey.ProviderHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar en egna referensen (en NCRYPT_PROV_HANDLE) till nyckellagring (KSP)."
  remarks: "Den returnerade referensen är en dubblett av referensen i aktuellt <xref:System.Security.Cryptography.CngKey>objektet.</xref:System.Security.Cryptography.CngKey> Det finns kvar även om aktuellt <xref:System.Security.Cryptography.CngKey>har tagits bort och måste tas bort av separat.</xref:System.Security.Cryptography.CngKey>       Du kan släppa det aktuella objektet och referensen i vilken ordning som helst utan några negativa effekter."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle ProviderHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
      description: "En referens till KSP."
  overload: System.Security.Cryptography.CngKey.ProviderHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  id: SetProperty(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: SetProperty(CngProperty)
  nameWithType: CngKey.SetProperty(CngProperty)
  fullName: System.Security.Cryptography.CngKey.SetProperty(CngProperty)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Anger en namngiven egenskap för nyckeln."
  remarks: "Den här metoden kan du lägga till en ny anpassad egenskap i en befintlig nyckel med hjälp av en <xref:System.Security.Cryptography.CngProperty>objektet.</xref:System.Security.Cryptography.CngProperty> Alternativen som anges på den <xref:System.Security.Cryptography.CngProperty>objekt måste exakt matcha alternativen i den <xref:System.Security.Cryptography.CngKey.GetProperty%2A>anropa.</xref:System.Security.Cryptography.CngKey.GetProperty%2A> </xref:System.Security.Cryptography.CngProperty> Egenskapen kommer annars inte hittas."
  syntax:
    content: public void SetProperty (System.Security.Cryptography.CngProperty property);
    parameters:
    - id: property
      type: System.Security.Cryptography.CngProperty
      description: "Ange nyckelegenskap."
  overload: System.Security.Cryptography.CngKey.SetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.UIPolicy
  id: UIPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
  fullName: System.Security.Cryptography.CngKey.UIPolicy
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar parametrar som styr användargränssnittet (UI) för att få åtkomst till nyckeln."
  remarks: "Viktiga UI-principen används med Användargränssnittet frågar som smartkort uppmanar PIN-kod. Den här principen styr även lösenord dialogrutor för skyddade nycklar."
  syntax:
    content: public System.Security.Cryptography.CngUIPolicy UIPolicy { get; }
    return:
      type: System.Security.Cryptography.CngUIPolicy
      description: "Ett objekt som innehåller konfigurationsparametrar för att visa Användargränssnittet."
  overload: System.Security.Cryptography.CngKey.UIPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKey.UniqueName
  id: UniqueName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  name: UniqueName
  nameWithType: CngKey.UniqueName
  fullName: System.Security.Cryptography.CngKey.UniqueName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar det unika namnet för nyckeln."
  remarks: "Den här egenskapen hämtar ett alternativt namn som kan användas vid åtkomst till nyckeln. Du kan använda den här egenskapen om ursprungliga nyckelnamnet inte identifierar beständiga nyckeln. Den <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>egenskapen returnerar namnet på nyckeln som den här egenskapen.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> Namnet som returneras av den <xref:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider%2A>är implementeringen-beroende.</xref:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider%2A>"
  syntax:
    content: public string UniqueName { get; }
    return:
      type: System.String
      description: "Ett alternativt namn för nyckeln. Om nyckeln är tillfälliga värdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngKey.UniqueName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngKey.Algorithm
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Algorithm
  nameWithType: CngKey.Algorithm
  fullName: System.Security.Cryptography.CngKey.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
  fullName: System.Security.Cryptography.CngKey.AlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create(CngAlgorithm)
  nameWithType: CngKey.Create(CngAlgorithm)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create(CngAlgorithm,String)
  nameWithType: CngKey.Create(CngAlgorithm,String)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create(CngAlgorithm,String,CngKeyCreationParameters)
  nameWithType: CngKey.Create(CngAlgorithm,String,CngKeyCreationParameters)
  fullName: System.Security.Cryptography.CngKey.Create(CngAlgorithm,String,CngKeyCreationParameters)
- uid: System.Security.Cryptography.CngKeyCreationParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyCreationParameters
  nameWithType: CngKeyCreationParameters
  fullName: System.Security.Cryptography.CngKeyCreationParameters
- uid: System.Security.Cryptography.CngKey.Delete
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Delete()
  nameWithType: CngKey.Delete()
  fullName: System.Security.Cryptography.CngKey.Delete()
- uid: System.Security.Cryptography.CngKey.Dispose
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Dispose()
  nameWithType: CngKey.Dispose()
  fullName: System.Security.Cryptography.CngKey.Dispose()
- uid: System.Security.Cryptography.CngKey.Exists(System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists(String)
  nameWithType: CngKey.Exists(String)
  fullName: System.Security.Cryptography.CngKey.Exists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists(String,CngProvider)
  nameWithType: CngKey.Exists(String,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Exists(String,CngProvider)
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists(String,CngProvider,CngKeyOpenOptions)
  nameWithType: CngKey.Exists(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Exists(String,CngProvider,CngKeyOpenOptions)
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Export(CngKeyBlobFormat)
  nameWithType: CngKey.Export(CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Export(CngKeyBlobFormat)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CngKeyBlobFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
- uid: System.Security.Cryptography.CngKey.ExportPolicy
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
  fullName: System.Security.Cryptography.CngKey.ExportPolicy
- uid: System.Security.Cryptography.CngExportPolicies
  parent: System.Security.Cryptography
  isExternal: false
  name: CngExportPolicies
  nameWithType: CngExportPolicies
  fullName: System.Security.Cryptography.CngExportPolicies
- uid: System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: GetProperty(String,CngPropertyOptions)
  nameWithType: CngKey.GetProperty(String,CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.GetProperty(String,CngPropertyOptions)
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngKey.Handle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Handle
  nameWithType: CngKey.Handle
  fullName: System.Security.Cryptography.CngKey.Handle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptKeyHandle
  nameWithType: SafeNCryptKeyHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
- uid: System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: HasProperty(String,CngPropertyOptions)
  nameWithType: CngKey.HasProperty(String,CngPropertyOptions)
  fullName: System.Security.Cryptography.CngKey.HasProperty(String,CngPropertyOptions)
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import(Byte[],CngKeyBlobFormat)
  nameWithType: CngKey.Import(Byte[],CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKey.Import(Byte[],CngKeyBlobFormat)
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import(Byte[],CngKeyBlobFormat,CngProvider)
  nameWithType: CngKey.Import(Byte[],CngKeyBlobFormat,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Import(Byte[],CngKeyBlobFormat,CngProvider)
- uid: System.Security.Cryptography.CngKey.IsEphemeral
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
  fullName: System.Security.Cryptography.CngKey.IsEphemeral
- uid: System.Security.Cryptography.CngKey.IsMachineKey
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
  fullName: System.Security.Cryptography.CngKey.IsMachineKey
- uid: System.Security.Cryptography.CngKey.KeyName
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyName
  nameWithType: CngKey.KeyName
  fullName: System.Security.Cryptography.CngKey.KeyName
- uid: System.Security.Cryptography.CngKey.KeySize
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeySize
  nameWithType: CngKey.KeySize
  fullName: System.Security.Cryptography.CngKey.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngKey.KeyUsage
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
  fullName: System.Security.Cryptography.CngKey.KeyUsage
- uid: System.Security.Cryptography.CngKeyUsages
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyUsages
  nameWithType: CngKeyUsages
  fullName: System.Security.Cryptography.CngKeyUsages
- uid: System.Security.Cryptography.CngKey.Open(System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open(String)
  nameWithType: CngKey.Open(String)
  fullName: System.Security.Cryptography.CngKey.Open(String)
- uid: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  nameWithType: CngKey.Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
- uid: System.Security.Cryptography.CngKeyHandleOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyHandleOpenOptions
  nameWithType: CngKeyHandleOpenOptions
  fullName: System.Security.Cryptography.CngKeyHandleOpenOptions
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open(String,CngProvider)
  nameWithType: CngKey.Open(String,CngProvider)
  fullName: System.Security.Cryptography.CngKey.Open(String,CngProvider)
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open(String,CngProvider,CngKeyOpenOptions)
  nameWithType: CngKey.Open(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.CngKey.Open(String,CngProvider,CngKeyOpenOptions)
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
  fullName: System.Security.Cryptography.CngKey.ParentWindowHandle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CngKey.Provider
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Provider
  nameWithType: CngKey.Provider
  fullName: System.Security.Cryptography.CngKey.Provider
- uid: System.Security.Cryptography.CngKey.ProviderHandle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
  fullName: System.Security.Cryptography.CngKey.ProviderHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptProviderHandle
  nameWithType: SafeNCryptProviderHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
- uid: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: SetProperty(CngProperty)
  nameWithType: CngKey.SetProperty(CngProperty)
  fullName: System.Security.Cryptography.CngKey.SetProperty(CngProperty)
- uid: System.Security.Cryptography.CngKey.UIPolicy
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
  fullName: System.Security.Cryptography.CngKey.UIPolicy
- uid: System.Security.Cryptography.CngUIPolicy
  parent: System.Security.Cryptography
  isExternal: false
  name: CngUIPolicy
  nameWithType: CngUIPolicy
  fullName: System.Security.Cryptography.CngUIPolicy
- uid: System.Security.Cryptography.CngKey.UniqueName
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UniqueName
  nameWithType: CngKey.UniqueName
  fullName: System.Security.Cryptography.CngKey.UniqueName
- uid: System.Security.Cryptography.CngKey.Algorithm*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Algorithm
  nameWithType: CngKey.Algorithm
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
- uid: System.Security.Cryptography.CngKey.Create*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create
  nameWithType: CngKey.Create
- uid: System.Security.Cryptography.CngKey.Delete*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Delete
  nameWithType: CngKey.Delete
- uid: System.Security.Cryptography.CngKey.Dispose*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Dispose
  nameWithType: CngKey.Dispose
- uid: System.Security.Cryptography.CngKey.Exists*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists
  nameWithType: CngKey.Exists
- uid: System.Security.Cryptography.CngKey.Export*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Export
  nameWithType: CngKey.Export
- uid: System.Security.Cryptography.CngKey.ExportPolicy*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
- uid: System.Security.Cryptography.CngKey.GetProperty*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: GetProperty
  nameWithType: CngKey.GetProperty
- uid: System.Security.Cryptography.CngKey.Handle*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Handle
  nameWithType: CngKey.Handle
- uid: System.Security.Cryptography.CngKey.HasProperty*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: HasProperty
  nameWithType: CngKey.HasProperty
- uid: System.Security.Cryptography.CngKey.Import*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import
  nameWithType: CngKey.Import
- uid: System.Security.Cryptography.CngKey.IsEphemeral*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
- uid: System.Security.Cryptography.CngKey.IsMachineKey*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
- uid: System.Security.Cryptography.CngKey.KeyName*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyName
  nameWithType: CngKey.KeyName
- uid: System.Security.Cryptography.CngKey.KeySize*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeySize
  nameWithType: CngKey.KeySize
- uid: System.Security.Cryptography.CngKey.KeyUsage*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
- uid: System.Security.Cryptography.CngKey.Open*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open
  nameWithType: CngKey.Open
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
- uid: System.Security.Cryptography.CngKey.Provider*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Provider
  nameWithType: CngKey.Provider
- uid: System.Security.Cryptography.CngKey.ProviderHandle*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
- uid: System.Security.Cryptography.CngKey.SetProperty*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: SetProperty
  nameWithType: CngKey.SetProperty
- uid: System.Security.Cryptography.CngKey.UIPolicy*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
- uid: System.Security.Cryptography.CngKey.UniqueName*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UniqueName
  nameWithType: CngKey.UniqueName
