### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.SignedXml
  id: SignedXml
  children:
  - System.Security.Cryptography.Xml.SignedXml.#ctor
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  - System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  - System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  - System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  - System.Security.Cryptography.Xml.SignedXml.GetXml
  - System.Security.Cryptography.Xml.SignedXml.KeyInfo
  - System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.m_signature
  - System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.Resolver
  - System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  - System.Security.Cryptography.Xml.SignedXml.Signature
  - System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  - System.Security.Cryptography.Xml.SignedXml.SignatureLength
  - System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  - System.Security.Cryptography.Xml.SignedXml.SignatureValue
  - System.Security.Cryptography.Xml.SignedXml.SignedInfo
  - System.Security.Cryptography.Xml.SignedXml.SigningKey
  - System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  langs:
  - csharp
  name: SignedXml
  nameWithType: SignedXml
  fullName: System.Security.Cryptography.Xml.SignedXml
  type: Class
  summary: "Tillhandahåller ett gränssnitt på en core XML-signatur objekt att underlätta skapar XML-signaturer."
  remarks: "Klassen SignedXml är .NET Framework-implementering av World Wide Web Consortium (W3C) [XML-signatur Syntax och bearbetning av specifikationen](http://www.w3.org/TR/xmldsig-core/), även kallad XMLDSIG (XML-signatur).  XMLDSIG är en standardbaserad och samverkande sätt att logga in och kontrollera hela eller delar av ett XML-dokument eller andra data som är adresserbara från en identifierare URI (Uniform Resource).       Använd klassen SignedXml när du behöver dela signerade XML-data mellan program eller organisationer på ett standardiserat sätt.  Alla data som har signerats med den här klassen kan verifieras av någon förväntad implementering av W3C-specifikationen för XMLDSIG.       Klassen SignedXml kan du skapa följande tre typer av XML-signaturer: | Signaturen typen | Beskrivning |   |--------------------|-----------------|   | Förslutna signatur | Signaturen ingår i XML-elementet som signeras. |   | Omgivande signatur | Signerad XML ingår i den `Signature`> element. |   | Internt frånkopplad signatur | Signatur och signerad XML finns i samma dokument, men varken elementet innehåller den andra. |       Det finns en fjärde typ av signatur som kallas en extern frånkopplad signatur som när data och signaturen finns i flera XML-dokument. Externa frånkopplat signaturer stöds inte av klassen SignedXml.      ## Strukturen för en XML-signatur XMLDSIG skapar en `Signature`> element som innehåller en digital signatur för ett XML-dokument eller andra data som är adresserbara från en URI.  Den `Signature`> element kan alternativt innehåller information om var du hittar en nyckel som verifierar signaturen, och vilken krypteringsalgoritm som användes för signering. Den grundläggande strukturen är följande: ```xml      <Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;>       <SignedInfo>         <CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;/>         <SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;/>         <Reference URI=&quot;&quot;>           <Transforms>             <Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/>           </Transforms>           <DigestMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;/>           <DigestValue>Base64EncodedValue==</DigestValue>         </Reference>       </SignedInfo>       <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>     </Signature>      ``` de viktigaste delarna av den här strukturen är: den `CanonicalizationMethod`> element anger regler för att skriva om den `Signature` element från XML-texten i byte för signaturverifiering. Standardvärdet i .NET Framework är http://www.w3.org/TR/2001/REC-xml-c14n-20010315 som identifierar en tillförlitlig algoritm. Det här elementet representeras av den <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>egenskapen.</xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>       Den `SignatureMethod`> elementet anger vilken algoritm som används för att generera signaturen och verifiering, som tillämpades på den `Signature`> element för att skapa värdet i `SignatureValue`>. I exemplet ovan identifierar värdet http://www.w3.org/2000/09/xmldsig#rsa-sha1 en RSA PKCS1 SHA-1-signatur. Det här elementet representeras av den <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>egenskapen.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>       Den `SignatureValue`> element anger den kryptografiska signaturen för den `Signature`> element. Om signaturen inte verifieras, sedan en del av den `Signature`> block har manipulerats och dokumentet är ogiltiga. Så länge den `CanonicalizationMethod`> värde är tillförlitliga är det här värdet hög motståndskraftiga mot angrepp. Det här elementet representeras av den <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>egenskapen.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>       Den `URI` attribut för den `Reference`> element anger ett dataobjekt med en URI-referens. Det här attributet representeras av den <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>egenskapen.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>      -Inte att ange den `URI` attribut, det vill säga ange den <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>egenskapen `null`, innebär att det mottagande programmet förväntas känner till identiteten för objektet.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> I de flesta fall en `null` URI resulterar i ett undantag som genereras. Använd inte en `null` URI, såvida inte programmet samverkan med ett protokoll som kräver detta.      -Ange det `URI` attributet till en tom sträng som anger att rotelementet för dokumentet som signeras en form av förslutna signatur.      -Om värdet för `URI` attributet börjar med # och värdet måste matcha ett element i det aktuella dokumentet. Det här formuläret kan användas med någon av typerna som stöds signatur (förslutna signatur, omsluter signaturen och/eller interna frånkopplad signatur).      -Någonting annat anses vara en extern resurs oberoende signatur och stöds inte av klassen SignedXml.       Den `Transforms`> elementet innehåller en sorterad lista över `Transform`> element som beskriver hur undertecknarens skaffat dataobjekt som har ned. Påminner om en algoritm för omvandling till metoden auktorisering, men i stället för att skriva om den `Signature`> element, skriver det om det innehåll som identifieras av den `URI` attribut för den `Reference`> element. Den `Transforms`> element representeras av <xref:System.Security.Cryptography.Xml.TransformChain>klass.</xref:System.Security.Cryptography.Xml.TransformChain>      -Varje transform-algoritmen definieras som tar XML (en XPath noduppsättning) eller byte som indata. Om formatet för det aktuella skiljer sig från transformera inkommande krav, tillämpas konverteringsregler.      -Varje transform-algoritmen definieras som producerar XML eller byte som utdata.      -Om utdata från den senaste transform-algoritmen inte har definierats i byte (eller inga transformeringar har angetts), auktorisering metoden http://www.w3.org/TR/2001/REC-xml-c14n-20010315 används som en implicit transformering (även om en annan algoritm har angetts i den `CanonicalizationMethod`> elementet).      -Värdet http://www.w3.org/2000/09/xmldsig#enveloped-signature för transform-algoritmen kodar en regel som tolkas som att ta bort den `Signature`> element i dokumentet. Annars kommer verifierar en förslutna signatur sammanfattad dokument, inklusive signatur, men undertecknarens skulle ha ned dokumentet innan signaturen tillämpades, vilket leder till olika svar.       Den `DigestMethod`> element som identifierar sammanfattad (kryptografisk hash)-metod för att tillämpa på omvandlade innehåll som identifieras av den `URI` attribut för den `Reference`> element. Denna representeras av den <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>egenskapen.</xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>      ## Att välja en kanonikaliseringmetod om samverkan med en specifikation som kräver användning av ett annat värde, rekommenderar vi att du använder standardmetoden för auktorisering i .NET Framework som är XML-C14N 1.0-algoritmen, vars värde är http://www.w3.org/TR/2001/REC-xml-c14n-20010315. C14N XML 1.0-algoritmen måste stödjas av alla implementeringar av XMLDSIG, särskilt eftersom det är en implicit slutliga transformering som ska användas.       Det finns versioner av auktorisering algoritmer som stöder bevara kommentarer. Kommentar bevara kanonikaliseringen metoder rekommenderas inte eftersom de bryter mot principen &quot;signera vad visas&quot;. Det vill säga kommentarer i en `Signature`> element kommer inte att ändra standardbearbetningslogiken för hur signaturen utförs är bara vilka signatur värdet. När den kombineras med en svag signaturalgoritm och tillåter kommentarer ska inkluderas ger en angripare onödiga friheten att tvinga en hash-kollisioner upprättar en ändrad dokumentet ser laglig.  I .NET Framework stöds endast inbyggda canonicalizers som standard. För att stödja ytterligare eller anpassade canonicalizers, finns det <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>egenskap.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> Om dokumentet använder en kanonikaliseringmetod som inte finns i samlingen som representeras av den <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>egenskapen sedan <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>returnerar metoden `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      > [!NOTE] > Ett mycket defensiva program kan ta bort alla värden som den inte förväntar sig undertecknare ska användas från den <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>samling.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      ## Referens-värden är från obehörig åtkomst?    Ja, den `Reference`> värden är från obehörig åtkomst.  .NET framework verifierar den `SignatureValue`> beräkning innan bearbetning av någon av de `Reference`> värden och deras associerade omvandlar och kommer att avbryta tidigt för att undvika potentiell skadlig bearbetningsinstruktioner.      ## Att välja de element som ska logga rekommenderar vi att du använder värdet för &quot;&quot; för den `URI` attribut (eller ange den <xref:System.Security.Cryptography.Xml.Reference.Uri%2A>egenskapen till en tom sträng), om möjligt.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A> Det innebär att hela dokumentet anses för digest-beräkning, vilket innebär att hela dokumentet är skyddat från obehörig åtkomst.       Det är mycket vanligt att `URI` värden i form av ankare, till exempel #foo, refererar till ett element vars ID-attributet är &quot;foo&quot;. Tyvärr är det enkelt för detta för att kunna manipuleras eftersom det innehåller endast innehållet i målelementet inte i kontexten. Missbruka – denna skillnad är känd som XML-signatur Wrapping (XSW).       Om ditt program anser kommentarer ska semantiska (vilket är inte vanligt när behandlar XML), bör du använda &quot;#xpointer(/)&quot; i stället för &quot;&quot;, och &quot;#xpointer(id(&quot;foo&quot;))&quot; i stället för &quot;#foo&quot;. #Xpointer versioner tolkas som inklusive kommentarer, medan formulären kort filnamn är exklusive kommentarer.       Om du måste acceptera dokument som skyddas endast delvis och du vill se till att du läser samma innehåll som skyddas av signaturen, använder den <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>metoden.</xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>      ## Säkerhetsinformation om KeyInfo-element data i den valfria `KeyInfo`> element (det vill säga den <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>egenskapen), som innehåller en nyckel för att verifiera signaturen, får inte vara betrodda.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>       Särskilt, i den <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>värdet representerar en bare RSA, DSA och ECDSA offentlig nyckel, dokumentet kan ha manipulerats, trots de <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metoden reporting att signaturen är giltig.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>  Detta kan inträffa eftersom entiteten gör manipulation bara måste skapa en ny nyckel och signera ändrad dokumentet med den nya nyckeln. Så om ditt program kontrollerar du att den offentliga nyckeln är ett förväntat värde, dokumentet ska behandlas som om den har manipulerats. Detta kräver att tillämpningsprogrammet undersöka den offentliga nyckeln som är inbäddad i dokumentet och verifiera den mot en lista över kända värden för dokumentkontext. Om dokumentet kunde tolkas utfärdas av en känd användare, skulle du till exempel kontrollera nyckeln mot en lista över kända nycklar som används av användaren.       Du kan också kontrollera nyckeln efter bearbetning dokumentet med hjälp av den <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A>metoden istället för att använda den <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metoden.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> Men för bästa säkerhet bör du kontrollera nyckeln i förväg.       Alternativt kan överväga försök användarens registrerade offentliga nycklar i stället läsa vad som finns den `KeyInfo`> element.      ## Säkerhetsinformation om den valfria X509Data elementet `X509Data`> element är underordnad den `KeyInfo`> element och innehåller en eller flera X509 certifikat eller identifierare för X509 certifikat. Data i den `X509Data`> element ska inte heller sin natur betrodda.       När du verifierar ett dokument med den inbäddade `X509Data`> element, .NET Framework verifierar endast data motsvarar X509 certifikat vars offentliga nyckel har kan användas för att verifiera signaturen för dokumentet. Till skillnad från anropar den <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metod med den `verifySignatureOnly` parametern `false`, återkallade utförs ingen, utan kedja förtroende är markerad och utan slutdatum har verifierats.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Även om programmet extraherar certifikatet och skickar det till den <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metod med den `verifySignatureOnly` parametern `false`, som fortfarande inte tillräckligt mycket verifieringen att förhindra manipulation av dokumentet.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Certifikatet måste fortfarande verifieras som passar för dokumentet som signeras.       Ett inbäddat signeringscertifikat ger användbar viktiga rotation strategier om i det `X509Data`> avsnittet eller i innehållet i dokumentet. När du använder den här metoden ett program bör extrahera certifikatet manuellt och utföra verifiering som liknar: - certifikatet har utfärdats direkt eller via en kedja av en certifikatutfärdare (CA) vars offentliga certifikat är inbäddad i programmet.           Listan över angivna OS betrodda utan ytterligare kontroller, till exempel ett känt ämnesnamn är inte tillräckliga för att förhindra manipulation i SignedXml.      -Certifikatet verifieras att har inte upphört att gälla vid tidpunkten för dokumentsignering (eller &quot;nu&quot; för nära realtid Dokumentbearbetning).      -Verifiera certifikatet inte återkallats för långlivade certifikat som utfärdats av en Certifikatutfärdare som har stöd för återkallade certifikat.      -Certifikatets ämne har verifierats som motsvarar det aktuella dokumentet.      ## Välja transformeringen algoritm om du samverkan med en specifikation som har anges specifika värden (till exempel XrML), måste du följa specifikationen.  Om du har en förslutna signatur (t.ex när hela dokumentet signerades), måste du använda http://www.w3.org/2000/09/xmldsig#enveloped-signature (representeras av den <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>klassen).</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Du kan ange implicit C14N XML-transformeringen samt, men det är inte nödvändigt.  Inga transformeringar krävs för en omgivande eller frånkopplat signatur. Implicit C14N XML-transformeringen hand tar om allt.       Med säkerhet uppdateras introducerades av den [Microsoft Security Bulletin MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), .NET Framework har begränsat transformeringar kan vara används i dokumentverifiering som standard med obetrodda transformeringar orsakar <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>alltid returnera `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> I synnerhet är transformeringar som kräver ytterligare indata (anges som underordnade element i XML) inte längre tillåtna på grund av deras känsligheten missbruk av obehöriga användare. W3C om undvika XPath och XSLT-transformeringar, vilka är de två huvudsakliga transformeringar som påverkas av dessa begränsningar.      ## Problem med externa referenser om ett program inte verifiera att externa referenser verkar vara lämplig för den aktuella kontexten, de kan missbrukas på sätt som ger för många säkerhetsrisker (inklusive Denial of Service, distribuerade reflektion Denial of Service, avslöjande av Information, signaturen kringgå och fjärrkörning av kod). Även om ett program att verifiera referensen till externa URI, det är problem med resursen som läses in två gånger: när när programmet läser det och en gång när SignedXml läser den. Eftersom det är inte säkert att programmet Läs- och dokumenttjänster Kontrollera steg har samma innehåll, saknar signaturen trovärdighet.       Angivna riskerna med externa referenser genereras SignedXml ett undantagsfel när en extern referens har påträffats.  Mer information om det här problemet finns [KB-artikel 3148821](https://support.microsoft.com/en-us/kb/3148821)."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/t-system.security.crypto_96_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/t-system.security.crypto_96_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_1.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/t-system.security.crypto_96_2.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/t-system.security.crypto_96_2.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_2.vb)]"
  syntax:
    content: public class SignedXml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> klass."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_88_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_88_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_88_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_88_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_88_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_88_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_3.vb)]"
  syntax:
    content: public SignedXml ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> klass från det angivna XML-dokumentet."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_111_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_111_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_111_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_111_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_111_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_111_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_3.vb)]"
  syntax:
    content: public SignedXml (System.Xml.XmlDocument document);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "Den <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objekt som ska användas för att starta den nya instansen av <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>document</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code> document </code> parametern innehåller ett null-värde <xref:System.Xml.XmlDocument.DocumentElement*>egenskap.</xref:System.Xml.XmlDocument.DocumentElement*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  id: '#ctor(System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> klass från den angivna <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objekt."
  syntax:
    content: public SignedXml (System.Xml.XmlElement elem);
    parameters:
    - id: elem
      type: System.Xml.XmlElement
      description: "Den <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objekt som ska användas för att starta den nya instansen av <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>elem</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  id: AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Lägger till en <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objekt i listan över objekt som ska vara signerade."
  remarks: "Metoden AddObject lägger till en `Object`> element som representerar ett objekt som ska signeras till den `Signature`> element i en XML-digital signatur.       Metoden AddObject internt anropar den <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>metod för den <xref:System.Security.Cryptography.Xml.Signature>objektet inkapslad av den <xref:System.Security.Cryptography.Xml.SignedXml>objekt.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>  Du kan också lägga till en <xref:System.Security.Cryptography.Xml.DataObject>objekt genom att anropa direkt i <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>metod från den <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>egenskapen.</xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> </xref:System.Security.Cryptography.Xml.DataObject>       Mer information om XML-signaturer finns i specifikationen XMLDSIG finns på www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example computes and XML signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/csharp/cc2302c9-707b-486f-888b-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/cpp/cc2302c9-707b-486f-888b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/visualbasic/cc2302c9-707b-486f-888b-_1.vb)]"
  syntax:
    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);
    parameters:
    - id: dataObject
      type: System.Security.Cryptography.Xml.DataObject
      description: "Den <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objekt att lägga till i listan över objekt som ska signeras."
  overload: System.Security.Cryptography.Xml.SignedXml.AddObject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  id: AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Lägger till en <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> objekt till den <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> -objektet som beskriver en kondensatmetod och kondensatvärdet transformering som ska användas för att skapa en XML-digital signatur."
  remarks: "Metoden AddReference lägger till en `Reference`> elementet så att den <xref:System.Security.Cryptography.Xml.SignedXml>-objektet som beskriver en kondensatmetod och kondensatvärdet transformering som ska användas för att skapa en XML-digital signatur.</xref:System.Security.Cryptography.Xml.SignedXml>  Den `Reference`> elementet är ett underelement av den `SignedInfo`> element.       Metoden AddReference internt anropar den <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>metod för den <xref:System.Security.Cryptography.Xml.SignedInfo>objektet inkapslad av den <xref:System.Security.Cryptography.Xml.SignedXml>objekt.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>  Du kan också lägga till en <xref:System.Security.Cryptography.Xml.Reference>objekt genom att anropa direkt i <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>metod från den <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>egenskapen.</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> </xref:System.Security.Cryptography.Xml.Reference>       Mer information om XML-signaturer finns i specifikationen XMLDSIG finns på www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_3.vb)]"
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.Reference reference);
    parameters:
    - id: reference
      type: System.Security.Cryptography.Xml.Reference
      description: "Den <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> -objektet som beskriver en kondensatmetod och kondensatvärdet transformering som ska användas för att skapa en XML-digital signatur."
  overload: System.Security.Cryptography.Xml.SignedXml.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  id: CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Anger om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar med hjälp av den offentliga nyckeln i signaturen.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Den här metoden beräknar även sammanfattad referenser och värdet för signaturen.       Om ett XML-dokument har signerats med ett X.509-signatur söker metoden CheckSignature &quot;Adressboken&quot; store för certifikat som är lämpliga för verifiering. Om certifikatet refereras av ett ämne nyckeln identifierare (SKI), till exempel den <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metoden kommer Välj certifikat med den här SKI och försök dem efter varandra tills den kan verifiera certifikatet.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>"
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_17_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_17_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_17_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_17_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_17_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_17_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_3.vb)]"
  syntax:
    content: public bool CheckSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <> </> *>-egenskapen för den offentliga nyckeln i signaturen matchar inte den <> </> *> egenskapen.       - eller - signatur beskrivning kunde inte skapas.       - eller gick inte att skapa hash-algoritmen."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Anger om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar för den angivna nyckeln.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_1.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_1.cs)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Implementeringen av den <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> egenskap som äger nyckeln som används för att verifiera den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar för den angivna nyckeln, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <> </> *>-egenskapen för den <code> key </code> parametern matchar inte den <> </> *> egenskapen.       - eller - signatur beskrivning kunde inte skapas.       - eller gick inte att skapa hash-algoritmen."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Anger om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar för algoritmen angivna message authentication code (MAC).</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "Implementeringen av <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> som innehåller MAC som används för att verifiera den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar för den angivna MAC; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <> </> *>-egenskapen för den angivna <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objektet är inte giltigt.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - kryptografitransformationen som används för att kontrollera signaturen kunde inte skapas."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Anger om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar för den angivna <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objekt och eventuellt om certifikatet är giltigt.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "X.509-certifikatet verifieras inte i version 1.1 av .NET Framework.  I version 2.0 och senare verifieras X.509-certifikatet.       I version 2.0 och senare av .NET Framework söker metoden CheckSignature &quot;Adressboken&quot; store för certifikat som är lämpliga för verifiering. Till exempel om certifikatet som refereras av ett ämne nyckeln identifierare (SKI), kommer metoden CheckSignature Välj certifikat med den här SKI och försök dem efter varandra tills den kan verifiera certifikatet."
  example:
  - "The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.  \n  \n [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/visualbasic/e51a3b72-eabb-4d0b-b51a-_1.vb)]\n [!code-cs[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/csharp/e51a3b72-eabb-4d0b-b51a-_1.cs)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objekt som ska användas för att verifiera den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att verifiera signaturen. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> vilka signatur och ett certifikat."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om signaturen är ogiltig. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - eller - <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om signatur och certifikatet är giltigt, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Gick inte att skapa en signatur beskrivning för den <code> certificate </code> parameter."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  id: CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Anger om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar med hjälp av den offentliga nyckeln i signaturen.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_1.vb)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_2.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_2.vb)]"
  syntax:
    content: public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);
    parameters:
    - id: signingKey
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "När den här metoden returnerar innehåller implementeringen av <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> som innehåller den offentliga nyckeln i signaturen. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen verifierar med hjälp av offentligt nyckeln i signaturen, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> signingKey </code> -parametern är null."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <> </> *>-egenskapen för den offentliga nyckeln i signaturen matchar inte den <> </> *> egenskapen.       - eller - signatur beskrivning kunde inte skapas.       - eller gick inte att skapa hash-algoritmen."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Beräknar en XML-digital signatur."
  remarks: "Metoden ComputeSignature skapar en XML-digital signatur och konstruktioner många av de XML-element som behövs.       Du måste ange data som ska signeras och <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>egenskapen innan denna metod anropas.</xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>"
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_74_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_74_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_74_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_74_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_2.vb)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <> </> *>-egenskapen är inte en <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> objekt eller <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> objekt.       - eller - nyckeln kunde inte läsas."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Beräknar en XML-digital signatur med algoritmen angivna message authentication code (MAC)."
  remarks: "Metoden ComputeSignature skapar en XML-digital signatur med hjälp av den angivna MAC-algoritmen och skapar många av de XML-element som behövs.       Du måste ange data som ska signeras innan denna metod anropas."
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_2.vb)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "En <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objekt som innehåller MAC som används för att beräkna värdet för den <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>egenskapen.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objekt som angetts av den <code> macAlg </code> parametern är inte en instans av <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>.       - eller - <xref:System.Security.Cryptography.HashAlgorithm.HashSize*>-egenskapen för den angivna <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> objektet är inte giltigt.</xref:System.Security.Cryptography.HashAlgorithm.HashSize*>       - eller - kryptografitransformationen som används för att kontrollera signaturen kunde inte skapas."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  id: EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar eller anger en <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> objekt som definierar bearbetningsregler XML-kryptering."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptedXml
      description: "En <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> objekt som definierar bearbetningsregler XML-kryptering."
  overload: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  id: GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returnerar den <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objektet med angivet ID från den angivna <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objekt."
  syntax:
    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "Den <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> datorobjektet för att hämta den <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objekt från."
    - id: idValue
      type: System.String
      description: "ID för den <xref href=&quot;System.Xml.XmlElement&quot;> </xref> datorobjektet för att hämta från den <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objekt."
    return:
      type: System.Xml.XmlElement
      description: "Den <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objektet med angivet ID från den angivna <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> objektet, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om den inte kunde hittas."
  overload: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returnerar den offentliga nyckeln för en signatur."
  remarks: "Metoden GetPublicKey returnerar ett <xref:System.Security.Cryptography.AsymmetricAlgorithm>objekt som innehåller en offentlig nyckel som används för att verifiera en digital signatur för XML.</xref:System.Security.Cryptography.AsymmetricAlgorithm>       Nyckeln måste vara antingen en <xref:System.Security.Cryptography.DSA>eller en <xref:System.Security.Cryptography.RSA>nyckel.</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.DSA>"
  syntax:
    content: protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();
    parameters: []
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "En <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> objekt som innehåller den offentliga nyckeln för signatur, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om nyckeln inte kan hittas."
  overload: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returnerar XML-representation av en <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML-representation av den <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar eller anger den <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> objekt av aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  remarks: "KeyInfo-egenskapen representerar den `KeyInfo`> element i en XML-digital signatur med hjälp av en <xref:System.Security.Cryptography.Xml.KeyInfo>objekt som ingår i egenskapen.</xref:System.Security.Cryptography.Xml.KeyInfo>  Den `KeyInfo`> elementet är ett underelement av den `Signature`> element.       Använd egenskapen KeyInfo att bädda in nyckeln-relaterad information som är avsedda att hjälpa dig att identifiera nyckeln som behövs för att validera ett XML-dokument.       Mer information om den `<KeyInfo>` element, se XMLDSIG-specifikationen som finns på www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_31_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_31_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_31_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_31_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "Den <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> objekt av aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Belastningar en <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> tillstånd från ett XML-element."
  remarks: ''
  example:
  - "The following code example shows how to use the LoadXml method to verify an XML document.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/csharp/m-system.security.crypto_14_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/visualbasic/m-system.security.crypto_14_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/cpp/m-system.security.crypto_14_1.cpp)]"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "XML-elementet för att läsa in den <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> tillstånd från."
  overload: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <code> value </code> parametern innehåller inte en giltig <> </> *> egenskapen.       - eller - <code> value </code> parametern innehåller inte en giltig <> </> *> egenskapen."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  id: m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objekt av aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  syntax:
    content: protected System.Security.Cryptography.Xml.Signature m_signature;
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  id: m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar namnet på den installera nyckeln som ska användas för signering av <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  syntax:
    content: protected string m_strSigningKeyName;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Anger aktuellt <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objekt."
  remarks: "Den <xref:System.Xml.XmlResolver>klassen löser externa XML-resurser med namnet med en identifierare URI (Uniform Resource).</xref:System.Xml.XmlResolver> Om du inte litar källan för XML-filen kan du inte vill tillåta XML-filen att få åtkomst till datorresurser som namnges av URI: N. Du kan använda egenskapen matcharen för att styra åtkomstnivån som XML-filer måste datorresurser genom att ange olika <xref:System.Xml.XmlResolver>objekt.</xref:System.Xml.XmlResolver> Om du inte vill tillåta åtkomst kan du ange egenskapen `null` (`Nothing` i Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Aktuellt <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objekt. Standardvärdena är en <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  id: SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "[Stöds i .NET Framework 4.5.1 och senare versioner]       Hämtar namnen på de metoder som vars kanonikaliseringen algoritmer som uttryckligen ska tillåtas."
  remarks: "Kanonisering metoder att konvertera ett XML-dokument till sin kanoniska form. Mer information om kanoniska XML finns [kanoniska XML](http://www.w3.org/TR/xml-c14n) på W3C-webbplatsen."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> SafeCanonicalizationMethods { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "En samling av namnen på de metoder som på ett säkert sätt skapar kanoniska XML."
  overload: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  id: Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar den <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objekt av aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  remarks: "Signaturen egenskapen representerar den `Signature`> element i en XML-digital signatur med hjälp av en <xref:System.Security.Cryptography.Xml.Signature>objekt som ingår i egenskapen.</xref:System.Security.Cryptography.Xml.Signature>  Den `Signature`> elementet har rotelementet som används för att skapa en XML-signatur och verifiering.       Använd egenskapen signatur för att hämta den <xref:System.Security.Cryptography.Xml.Signature>objekt som används av den <xref:System.Security.Cryptography.Xml.SignedXml>objekt.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature>       Mer information om den `<Signature>` element, se XMLDSIG-specifikationen som finns på www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the Signature property to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_9_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_9_1.cpp)]  \n  \n The following code example uses the Signature property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_9_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_9_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "Den <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> objekt av aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.Signature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  id: SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar en delegat som ska användas för att validera format (inte kryptografiska säkerhet) för en XML-signatur."
  remarks: "Den här metoden kan användas för att säkerställa att bara vissa transformeringar används eller att signaturen använder en viss hash-algoritmen och så vidare.       Egenskapen `null` tar bort alla verifieringen av signaturformat från den <xref:System.Security.Cryptography.Xml.SignedXml>objekt.</xref:System.Security.Cryptography.Xml.SignedXml>       Du kan också läsa objektets aktuella ombud och kedja till den om du vill.       Om du ställer in en formatverifieraren får det ombud som du anger som indataparameter den <xref:System.Security.Cryptography.Xml.SignedXml>objekt som verifieras och returnerar ett booleskt värde – `true` om formatet är acceptabla, `false` om den inte.</xref:System.Security.Cryptography.Xml.SignedXml> Om delegaten returnerar `false` av någon anledning den <xref:System.Security.Cryptography.Xml.SignedXml>objektet rapporterar XML-signatur inte är giltig.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public Func<System.Security.Cryptography.Xml.SignedXml,bool> SignatureFormatValidator { get; set; }
    return:
      type: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om formatet är godtagbara. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  id: SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar längden för signaturen för aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  syntax:
    content: public string SignatureLength { get; }
    return:
      type: System.String
      description: "Längden för signaturen för aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  id: SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar metoden signatur i aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  remarks: "SignatureMethod egenskap representerar den `SignatureMethod`> element i en XML-digital signatur med en identifierare URI (Uniform Resource) sträng som finns i egenskapen. Den `SignatureMethod`> elementet är ett underelement av den `SignedInfo`> element.       Använd egenskapen SignatureMethod för att hämta den `SignatureMethod`> URI som används av den <xref:System.Security.Cryptography.Xml.SignedXml>objekt.</xref:System.Security.Cryptography.Xml.SignedXml> Den här egenskapen är skrivskyddad. Mer information om hur du anger en URI för programmässigt den `SignatureMethod`> element, finns det <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>egenskap.</xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>       Mer information om den `<SignatureMethod>` element, se XMLDSIG-specifikationen som finns på www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public string SignatureMethod { get; }
    return:
      type: System.String
      description: "Metoden signatur i aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  id: SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar värdet för signaturen för aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  remarks: "SignatureValue egenskap representerar den `SignatureValue`> element i en XML-digital signatur med hjälp av en matris med byte som finns i egenskapen.  Den `SignatureValue`> elementet är ett underelement av den `Signature>` element.       Använd egenskapen SignatureValue för att hämta värdet för XML-signatur.  Den här egenskapen fylls i automatiskt när du gör en lyckade anrop till den <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>metoden.</xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>       Mer information om den `<SignatureValue>` element, se XMLDSIG-specifikationen som finns på www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "En bytematris som innehåller värdet signaturen för aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  id: SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar den <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> objekt av aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  remarks: "SignedInfo egenskap representerar den `SignedInfo`> element i en XML-digital signatur med hjälp av en matris med byte som finns i egenskapen.  Den `SignedInfo`> elementet är ett underelement av den `Signature>` element.       Använd egenskapen SignedInfo för att hämta den <xref:System.Security.Cryptography.Xml.SignedInfo>objekt som används av den <xref:System.Security.Cryptography.Xml.SignedXml>objekt för att skapa en XML-digital signatur.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo>       Mer information om den `<SignedInfo>` element, se XMLDSIG-specifikationen som finns på www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }
    return:
      type: System.Security.Cryptography.Xml.SignedInfo
      description: "Den <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> objekt av aktuellt <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  id: SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar eller anger den asymmetriska algoritm nyckel som används för att signera en <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  remarks: "Använd egenskapen SigningKey för att ange den asymmetriska nyckeln som du vill använda för att skapa en XML-digital signatur."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_40_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_40_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_40_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_40_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/p-system.security.crypto_40_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/p-system.security.crypto_40_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_3.vb)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Den asymmetriska algoritm nyckel som används för att signera de <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  id: SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Hämtar eller anger namnet på den installera nyckeln som ska användas för signering av <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  syntax:
    content: public string SigningKeyName { get; set; }
    return:
      type: System.String
      description: "Namnet på den installera nyckeln som ska användas för signering av <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> objekt."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  id: XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för XML-läge dekryptering omvandling. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDecryptionTransformUrl är &quot;http://www.w3.org/2002/07/decrypt#XML&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2002/07/decrypt#XML."
  syntax:
    content: public const string XmlDecryptionTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  id: XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för base 64 omvandling. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigBase64TransformUrl är &quot;http://www.w3.org/2000/09/xmldsig#base64&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>klassen implementerar transformeringen beskrivs av fältet XmlDsigBase64TransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2000/09/xmldsig#base64."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/csharp/f-system.security.crypto_0_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_0_1.vb)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/cpp/f-system.security.crypto_0_1.cpp)]"
  syntax:
    content: public const string XmlDsigBase64TransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  id: XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för den kanoniska XML-omvandlingen. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigC14NTransformUrl är &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       Det här fältet har samma värde som den <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>fält.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>"
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_4_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_4_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_4_1.vb)]"
  syntax:
    content: public const string XmlDsigC14NTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  id: XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för den kanoniska XML-transformeringen med kommentarer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigC14NWithCommentsTransformUrl är &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       Det här fältet har samma värde som den <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>fält.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>"
  syntax:
    content: public const string XmlDsigC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  id: XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard kanoniseringsalgoritm för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigCanonicalizationUrl är &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigCanonicalizationUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       Det här fältet har samma värde som den <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>fält.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  id: XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard kanoniseringsalgoritm för XML-digitala signaturer och inkluderar kommentarer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigCanonicalizationWithCommentsUrl är &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigCanonicalizationWithCommentsUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       Det här fältet har samma värde som den <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>fält.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationWithCommentsUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  id: XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> algoritmen för XML-signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigDSAUrl är &quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2000/09/xmldsig#dsa-sha1."
  syntax:
    content: public const string XmlDsigDSAUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  id: XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för förslutna signatur omvandling. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigEnvelopedSignatureTransformUrl är &quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigEnvelopedSignatureTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2000/09/xmldsig#enveloped-signature."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/csharp/62dc9f7e-cdc8-4569-bf73-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/cpp/62dc9f7e-cdc8-4569-bf73-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/visualbasic/62dc9f7e-cdc8-4569-bf73-_1.vb)]"
  syntax:
    content: public const string XmlDsigEnvelopedSignatureTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  id: XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för exklusiv XML-auktorisering. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigExcC14NTransformUrl är &quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigExcC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2001/10/xml-exc-c14n#."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/csharp/f-system.security.crypto_9_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/cpp/f-system.security.crypto_9_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/visualbasic/f-system.security.crypto_9_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  id: XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för exklusiv XML-auktorisering med kommentarer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigExcC14NWithCommentsTransformUrl är &quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigExcC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2001/10/xml-exc-c14n#WithComments."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/csharp/15045a8f-c740-45e0-8c9c-_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/cpp/15045a8f-c740-45e0-8c9c-_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/visualbasic/15045a8f-c740-45e0-8c9c-_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  id: XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref> algoritmen för XML-signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigHMACSHA1Url är &quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2000/09/xmldsig#hmac-sha1."
  syntax:
    content: public const string XmlDsigHMACSHA1Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  id: XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard minimal kanoniseringsalgoritm för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigMinimalCanonicalizationUrl är &quot;http://www.w3.org/2000/09/xmldsig#minimal&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2000/09/xmldsig#minimal."
  syntax:
    content: public const string XmlDsigMinimalCanonicalizationUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  id: XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard namnområdet för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigNamespaceUrl är &quot;http://www.w3.org/2000/09/xmldsig#&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2000/09/xmldsig#."
  syntax:
    content: public const string XmlDsigNamespaceUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  id: XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> signaturmetod för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigRSASHA1Url är &quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2000/09/xmldsig#rsa-sha1."
  syntax:
    content: public const string XmlDsigRSASHA1Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  id: XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar Uniform Resource Identifier (URI) för den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> SHA-256 signatur metoden variation för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigRSASHA256Url är &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more)."
  syntax:
    content: public const string XmlDsigRSASHA256Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  id: XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar Uniform Resource Identifier (URI) för den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> SHA-384 signatur metoden variation för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigRSASHA384Url är &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)."
  syntax:
    content: public const string XmlDsigRSASHA384Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  id: XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar Uniform Resource Identifier (URI) för den <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> SHA-512 signatur metoden variation för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigRSASHA512Url är &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)."
  syntax:
    content: public const string XmlDsigRSASHA512Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  id: XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> kondensatmetoden för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigSHA1Url är &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/2000/09/xmldsig#sha1."
  syntax:
    content: public const string XmlDsigSHA1Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  id: XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> kondensatmetoden för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigSHA256Url är &quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256)."
  syntax:
    content: public const string XmlDsigSHA256Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  id: XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> kondensatmetoden för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigSHA384Url är &quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384)."
  syntax:
    content: public const string XmlDsigSHA384Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  id: XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för standard <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> kondensatmetoden för XML-digitala signaturer. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigSHA512Url är &quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512)."
  syntax:
    content: public const string XmlDsigSHA512Url;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  id: XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar Uniform Resource Identifier (URI) för XML Path Language (XPath). Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigXPathTransformUrl är &quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigXPathTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/TR/1999/REC-xpath-19991116."
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.  \n  \n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_1_1.vb)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_1_1.cs)]"
  syntax:
    content: public const string XmlDsigXPathTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  id: XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för XSLT-transformeringar. Det här fältet är konstant."
  remarks: "Värdet för fältet XmlDsigXsltTransformUrl är &quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;.       Använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>klassen implementerar transformeringen beskrivs av fältet XmlDsigXsltTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>       Mer information finns i World Wide Web Consortium (W3C)-specifikationen på http://www.w3.org/TR/1999/REC-xslt-19991116."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_3_1.cpp)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_3_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_3_1.vb)]"
  syntax:
    content: public const string XmlDsigXsltTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  id: XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Representerar den identifierare URI (Uniform Resource) för licens transformeringen algoritmen som används för att normalisera XrML licenser för signaturer."
  remarks: "Värdet för fältet XmlLicenseTransformUrl är &quot;urn: mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform&quot; använda fältet för att ange ett värde till en URI-attribut för ett element som används för XMLDSIG enkelt.       Den <xref:System.Security.Cryptography.Xml.XmlLicenseTransform>klassen implementerar transformeringen beskrivs av fältet XmlLicenseTransformUrl.</xref:System.Security.Cryptography.Xml.XmlLicenseTransform>"
  syntax:
    content: public const string XmlLicenseTransformUrl;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
- uid: System.Security.Cryptography.Xml.DataObject
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
- uid: System.Security.Cryptography.Xml.Reference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
- uid: System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
- uid: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
  parent: System
  isExternal: true
  name: Func<SignedXml,Boolean>
  nameWithType: Func<SignedXml,Boolean>
  fullName: System.Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.SignedXml
    name: SignedXml
    nameWithType: SignedXml
    fullName: SignedXml
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml
  nameWithType: SignedXml.SignedXml
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject
  nameWithType: SignedXml.AddObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference
  nameWithType: SignedXml.AddReference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature
  nameWithType: SignedXml.CheckSignature
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey
  nameWithType: SignedXml.CheckSignatureReturningKey
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedXml.ComputeSignature
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement
  nameWithType: SignedXml.GetIdElement
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey
  nameWithType: SignedXml.GetPublicKey
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml
  nameWithType: SignedXml.GetXml
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml
  nameWithType: SignedXml.LoadXml
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
- uid: System.Security.Cryptography.Xml.SignedXml.Signature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
