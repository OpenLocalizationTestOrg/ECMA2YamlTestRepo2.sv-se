### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeDescriptor
  id: TypeDescriptor
  children:
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  - System.ComponentModel.TypeDescriptor.ComObjectType
  - System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptor.InterfaceType
  - System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  - System.ComponentModel.TypeDescriptor.Refreshed
  - System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  langs:
  - csharp
  name: TypeDescriptor
  nameWithType: TypeDescriptor
  fullName: System.ComponentModel.TypeDescriptor
  type: Class
  summary: "Innehåller information om egenskaperna för en komponent som attribut, egenskaper och händelser. Den här klassen kan inte ärvas."
  remarks: ".NET Framework ger dig två sätt att komma åt metadata i en typ: reflektion API som angetts i <xref:System.Reflection?displayProperty=fullName>namnområdet, och TypeDescriptor klassen.</xref:System.Reflection?displayProperty=fullName> Reflektion är en allmän mekanism som är tillgängliga för alla typer eftersom dess foundation upprättas i <xref:System.Object.GetType%2A>metoden för rot- <xref:System.Object>klass.</xref:System.Object> </xref:System.Object.GetType%2A> Den information som returneras för en typ är inte utökningsbar, eftersom den inte kan ändras efter kompilering av måltypen. Mer information finns i [reflektion](~/add/includes/ajax-current-ext-md.md).       Däremot TypeDescriptor är en utökningsbar inspektion mekanism för komponenter: de klasser som implementera den <xref:System.ComponentModel.IComponent>gränssnitt.</xref:System.ComponentModel.IComponent> Till skillnad från reflektion, den inte inspektera för metoder. TypeDescriptor kan utökas dynamiskt genom flera tjänster som är tillgängliga via mål komponentens <xref:System.ComponentModel.Component.Site%2A>.</xref:System.ComponentModel.Component.Site%2A> I följande tabell visas dessa tjänster.      | Tjänstens namn | Beskrivning |   |------------------|-----------------|   | <xref:System.ComponentModel.IExtenderProvider>| Gör att en annan klass, till exempel <xref:System.Windows.Forms.ToolTip>, kan ge extra egenskaper till en komponent. |   | <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>| Gör att ett annat objekt att ändra standard metadata som exponeras av en komponent. |   | <xref:System.ComponentModel.ICustomTypeDescriptor>| Gör en klass för att helt och dynamiskt ange egen metadata, ersätter den standard inspektion mekanismen för TypeDescriptor. |       Utbyggbarhet som tillhandahålls av TypeDescriptor kan designläge representation av en komponent som ska skilja sig från dess faktiska körning representation, vilket gör TypeDescriptor användbart för att bygga designläge infrastruktur.</xref:System.ComponentModel.ICustomTypeDescriptor> </xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.Windows.Forms.ToolTip> </xref:System.ComponentModel.IExtenderProvider>       Alla metoder i TypeDescriptor `static`. Du kan inte skapa en instans av den här klassen och denna klass kan inte ärvas.       Du kan ange egenskapen och händelsen värden två olika sätt: ange dem i component-klassen eller ändra dem vid designtillfället. Eftersom du kan ange dessa värden på två sätt, överlagrade metoder för TypeDescriptor ta två olika typer av parametrar: en klasstyp eller en objektinstans.       När du vill komma åt TypeDescriptor information och du har en instans av objektet, kan du använda metoden som anropar en komponent. Använd metoden som anropar för klasstypen endast när du inte har en instans av objektet.       Egenskaper och händelser cachelagras av TypeDescriptor för hastighet. De normalt konstant för livslängden för ett objekt. Utökare providers och designers kan dock ändra uppsättningen egenskaper för ett objekt. Om så är fallet, sedan <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>metoden måste anropas för att uppdatera cachen.</xref:System.ComponentModel.TypeDescriptor.Refresh%2A>"
  syntax:
    content: public sealed class TypeDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  id: AddAttributes(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddAttributes(Object,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till klassnivå attribut till komponenten målinstansen."
  remarks: "Metoden AddAttributes lägger till klassnivå attribut till den angivna instansen för en komponent. Eftersom detta är ett vanligt krav av program som använder den [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer och egenskaper för den här metoden är en genväg genom att skapa en Typbeskrivarprovidern som slår samman de angivna attributen med attribut som redan finns på klassen. Det returnera värdet är Typbeskrivarprovidern som användes för att lägga till attribut. Den här providern kan senare skickas till den <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metoden när tillagda attribut inte längre behövs.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, Attribute[] attributes);
    parameters:
    - id: instance
      type: System.Object
      description: "En instans av komponenten som mål."
    - id: attributes
      type: System.Attribute[]
      description: "En matris med <xref:System.Attribute>objekt som ska läggas till komponentens klass.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Den nyligen skapade <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> som användes för att lägga till de angivna attributen."
  overload: System.ComponentModel.TypeDescriptor.AddAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  id: AddAttributes(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddAttributes(Type,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till klassnivå attribut till komponenten måltypen."
  remarks: "Metoden AddAttributes lägger till klassnivå attribut till den angivna typen för en komponent. Eftersom detta är ett vanligt krav av program som använder den [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer och egenskaper för den här metoden är en genväg genom att skapa en Typbeskrivarprovidern som slår samman de angivna attributen med attribut som redan finns på klassen. Det returnera värdet är Typbeskrivarprovidern som användes för att lägga till attribut. Den här providern kan senare skickas till den <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metoden när tillagda attribut inte längre behövs.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, Attribute[] attributes);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "En matris med <xref:System.Attribute>objekt som ska läggas till komponentens klass.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Den nyligen skapade <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> som användes för att lägga till de angivna attributen."
  overload: System.ComponentModel.TypeDescriptor.AddAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  id: AddEditorTable(System.Type,System.Collections.Hashtable)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddEditorTable(Type,Hashtable)
  nameWithType: TypeDescriptor.AddEditorTable(Type,Hashtable)
  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(Type,Hashtable)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till en tabell för Redigeraren för den angivna redigeraren bastypen."
  remarks: "Metoden AddEditorTable lägger till en tabell för Redigeraren för den angivna redigeraren bastypen. Redigerare anges vanligtvis som metadata på en komponent. Men om inga metadata för en grundläggande begärda redigerare typ kan hittas på komponenten den associerade <xref:System.ComponentModel.TypeDescriptor>söker en tabell för Redigeraren för redigerartypen, om en hittas.</xref:System.ComponentModel.TypeDescriptor> När en redigerare tabell har lagts till en typbeskrivning som, kan inte tas bort och ägs av typen beskrivningen. Typen säkerhetsbeskrivning kan fritt göra ändringar i den här tabellen.       Formatet för en tabell med redigeraren använder datatyper som nycklar och redigerare som värden. Värdet del av en post i tabellen representerar en instans i redigeraren. Den kan ha ett av tre värden. Om den innehåller en sträng antar beskrivningen typ är ett fullständigt kvalificerade namnet på en typ och sedan läsa in typen för objektet. Om den innehåller en typ, skapas en instans av den här typen för att erhålla en redigerare. Slutligen kan innehålla värdet del en faktiska editor-instans. Om typen descriptor matchar en redigerare till en instans, lagras den instans tillbaka till tabellen för framtida användning."
  syntax:
    content: public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "Redigeraren för bastypen att lägga till tabellen Redigeraren för. Om det finns redan en tabell för den här typen, kommer den här metoden gör ingenting."
    - id: table
      type: System.Collections.Hashtable
      description: "The <xref href=&quot;System.Collections.Hashtable&quot;></xref> to add."
  overload: System.ComponentModel.TypeDescriptor.AddEditorTable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till en Typbeskrivarprovidern för en instans av en komponent."
  remarks: "Metoden AddProvider lägger till en Typbeskrivarprovidern att leveranser typinformation för en instans av en komponent. Om en provider har lagts till av den här metoden, providern <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>metoden inte anropas eftersom instansen fanns redan.</xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>       Den här metoden har inte en hård referens till komponenten, så att det inte förhindrar komponenten slutförs.       Det är möjligt att lägga till flera typ beskrivning providers för samma typ eller objekt. Om detta inträffar används första Typbeskrivarprovidern påträffade som ger information om exklusivt. Eftersom typen information providers lagras i en grupp, blir den sista providern som lagts till den första som efterfrågas. Detta medför att AddProvider och <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>metoder som används för att push- och pop skriver beskrivning providers som krävs för särskilda scenarier.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>       Om autentiseringen lyckas kan den här metoden anropar den <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>metoden på den `instance` parameter.</xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>      > [!NOTE] > De två versionerna av den här metoden ger resultat med olika omfång. Den <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>metod som tar en <xref:System.Object>parameter påverkar bara den instansen av komponenten som har angetts.</xref:System.Object> </xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Däremot en annan överlagring, som tar en <xref:System.Type>parameter, påverkar alla instanser av den komponent som beskrivs av den typen.</xref:System.Type>       Använd den <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metoden om du behöver anropas från delvis betrodd kod.</xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: instance
      type: System.Object
      description: "En instans av komponenten som mål."
  overload: System.ComponentModel.TypeDescriptor.AddProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till en Typbeskrivarprovidern för en komponentklass."
  remarks: "Metoden AddProvider lägger till en Typbeskrivarprovidern som tillhandahåller typen information för den angivna klassen och härledda klasser alla instanser av dessa typer.      > [!NOTE] > Den `type` parametern kan vara någon typ, inklusive ett gränssnitt. Till exempel för att ge anpassad typ och instansinformation för alla komponenter, anger du `typeof(IComponent)`. Skicka `typeof(object)` ringer providern att tillhandahålla typinformation för alla typer.       Den här metoden har inte en hård referens till ett objekt så att den inte att objekt slutförs.       Det är möjligt att lägga till flera typ beskrivning providers för samma typ eller objekt. Om detta inträffar används första Typbeskrivarprovidern påträffade som ger information om exklusivt. Eftersom typen information providers lagras i en grupp, blir den sista providern som lagts till den första som efterfrågas. Detta medför att AddProvider och <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>metoder som används för att push- och pop skriver beskrivning providers som krävs för särskilda scenarier.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>       Om autentiseringen lyckas kan den här metoden anropar den <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>metoden på den `type` parameter.</xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>      > [!NOTE] > De två versionerna av den här metoden ger resultat med olika omfång. Den <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>metod som tar en <xref:System.Object>parameter påverkar bara den instansen av komponenten som har angetts.</xref:System.Object> </xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Däremot en annan överlagring, som tar en <xref:System.Type>parameter, påverkar alla instanser av den komponent som beskrivs av den typen.</xref:System.Type>       Använd den <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metoden om du behöver anropas från delvis betrodd kod.</xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.AddProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till en Typbeskrivarprovidern för en instans av en komponent."
  remarks: "Den här metoden kan anropas från delvis betrodd kod. Om <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>är definierad anroparen kan du registrera en provider för den angivna instansen om dess typ är också delvis betrodd.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Använd den <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metoden om du inte behöver anropas från delvis betrodd kod.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: instance
      type: System.Object
      description: "En instans av komponenten som mål."
  overload: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till en Typbeskrivarprovidern för en komponentklass."
  remarks: "Den här metoden kan anropas från delvis betrodd kod. Om <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>är definierad anroparen kan du registrera en provider för den angivna typen om det är också delvis betrodd.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Använd den <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metoden om du inte behöver anropas från delvis betrodd kod.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  id: ComNativeDescriptorHandler
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
  fullName: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar eller anger provider för COM Component Object Model ()-typinformation för mål-komponent."
  remarks: "Egenskapen ComNativeDescriptorHandler och <xref:System.ComponentModel.IComNativeDescriptorHandler>gränssnittet är föråldrat.</xref:System.ComponentModel.IComNativeDescriptorHandler> Mer information finns i <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>egenskap.</xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>"
  syntax:
    content: public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }
    return:
      type: System.ComponentModel.IComNativeDescriptorHandler
      description: "En <xref href=&quot;System.ComponentModel.IComNativeDescriptorHandler&quot;> </xref> förekomst som representerar COM typen information provider."
  overload: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.ComObjectType
  id: ComObjectType
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
  fullName: System.ComponentModel.TypeDescriptor.ComObjectType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar typ av modellen COM (Component Object)-objektet som representeras av komponenten som mål."
  remarks: "Egenskapen ComObjectType returnerar en typ som kan skickas till den <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metod för att definiera en Typbeskrivarprovidern för COM-typer.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>       Egenskapen ComObjectType och andra medlemmar i den här klassen ersätter funktionerna i den föråldrade <xref:System.ComponentModel.IComNativeDescriptorHandler>gränssnitt.</xref:System.ComponentModel.IComNativeDescriptorHandler> Att implementera ett lager för mappning mellan ett COM-objekt och <xref:System.ComponentModel.TypeDescriptor>, lägga till en <xref:System.ComponentModel.TypeDescriptionProvider>att hantera typ ComObjectType.</xref:System.ComponentModel.TypeDescriptionProvider> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static Type ComObjectType { get; }
    return:
      type: System.Type
      description: "Den <xref:System.Type>av COM-objektet som representeras av den här komponenten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> för icke-COM-objekt.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.ComObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  id: CreateAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateAssociation(Object,Object)
  nameWithType: TypeDescriptor.CreateAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Skapar en association primära sekundära mellan två objekt."
  remarks: "Metoden CreateAssociation skapar en association mellan en primär och sekundär objekt. När en association skapas en designer eller andra filtreringsmekanism kan lägga till egenskaper som dirigerar till objekt i det primära objektet egenskapsuppsättning. När egenskapen-anropet görs mot objektet primära den <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>metoden anropas för att lösa verkliga objektinstansen som är relaterade till dess parameter av typen.</xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>       En <xref:System.WeakReference>används för att underhålla kopplingen mellan det primära och sekundära objektet; därför kan den här metoden förhindrar inte att objekt som slutförd och frigöras vid en skräpinsamling.</xref:System.WeakReference>"
  syntax:
    content: public static void CreateAssociation (object primary, object secondary);
    parameters:
    - id: primary
      type: System.Object
      description: "Primärt <xref:System.Object>.</xref:System.Object>"
    - id: secondary
      type: System.Object
      description: "Sekundärt <xref:System.Object>.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.CreateAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>primary</code>är lika med <code>secondary</code>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  id: CreateDesigner(System.ComponentModel.IComponent,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateDesigner(IComponent,Type)
  nameWithType: TypeDescriptor.CreateDesigner(IComponent,Type)
  fullName: System.ComponentModel.TypeDescriptor.CreateDesigner(IComponent,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Skapar en instans av designer som är associerade med den angivna komponenten och för den angivna typen av designer."
  remarks: "Om den här metoden inte kan hitta en giltig <xref:System.ComponentModel.DesignerAttribute>, söker upp klasshierarkin för en designer.</xref:System.ComponentModel.DesignerAttribute> Om den inte kan hitta en designer i klasshierarkin, returnerar `null`."
  syntax:
    content: public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "En <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> som anger komponenten som ska associeras med designern."
    - id: designerBaseType
      type: System.Type
      description: "En <xref:System.Type>som motsvarar typ av designer för att skapa.</xref:System.Type>"
    return:
      type: System.ComponentModel.Design.IDesigner
      description: "En <xref href=&quot;System.ComponentModel.Design.IDesigner&quot;> </xref> som är en instans av designern för komponenten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om ingen designer kan hittas."
  overload: System.ComponentModel.TypeDescriptor.CreateDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  id: CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateEvent(Type,EventDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Skapar en ny händelse beskrivning som är identisk med en befintlig händelse descriptor när passerat den befintliga <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>."
  syntax:
    content: public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Typ av komponent som du vill skapa en ny händelse."
    - id: oldEventDescriptor
      type: System.ComponentModel.EventDescriptor
      description: "Befintliga händelseinformation."
    - id: attributes
      type: System.Attribute[]
      description: "Nya attribut."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "En ny <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> som har slagits samman angivna metadata-attribut med befintliga metadataattribut."
  overload: System.ComponentModel.TypeDescriptor.CreateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateEvent(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Skapar en ny händelse beskrivning som är identisk med en befintlig händelse descriptor genom att dynamiskt generera informationen för säkerhetsbeskrivningen från angivna händelser i en typ."
  syntax:
    content: public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Typ av komponenten händelsen finns."
    - id: name
      type: System.String
      description: "Namnet på händelsen."
    - id: type
      type: System.Type
      description: "Typ av det ombud som hanterar händelsen."
    - id: attributes
      type: System.Attribute[]
      description: "Attribut för den här händelsen."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> som är bunden till en typ."
  overload: System.ComponentModel.TypeDescriptor.CreateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Skapar ett objekt som kan ersätta en annan datatyp."
  remarks: "Metoden CreateInstance söker efter en <xref:System.ComponentModel.TypeDescriptionProvider>som är associerade med det angivna `objectType` datatyp.</xref:System.ComponentModel.TypeDescriptionProvider> Den här metoden försöker hämta en Typbeskrivarprovidern från den `provider` parameter. Om detta misslyckas söker programmet sin egen interna register för en provider (dessa poster har skapats via tidigare anrop till <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Om den hittar en leverantör, kommer den här metoden delegera skapa-anrop till det aktuella objektet."
  syntax:
    content: public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "-Leverantör som erbjuder en <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> service. Den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: objectType
      type: System.Type
      description: "Den <xref:System.Type>av objekt som ska skapas.</xref:System.Type>"
    - id: argTypes
      type: System.Type[]
      description: "En valfri matris med parametertyper som ska skickas till objektets konstruktor. Den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en matris med längden noll."
    - id: args
      type: System.Object[]
      description: "En valfri matris med parametervärden som ska skicka till objektets konstruktor. Om inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, antalet element måste vara samma som `argTypes`."
    return:
      type: System.Object
      description: "En instans av datatypen substitute om en associerad <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> är hittas, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeDescriptor.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, or <code>args</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when <code>argTypes</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argTypes</code>och <code>args</code> har olika antal element."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  id: CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateProperty(Type,PropertyDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Skapar en ny egenskapsbeskrivaren från en befintlig egenskapsbeskrivaren med hjälp av den angivna befintliga <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> och attributet matrisen."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Den <xref:System.Type>för den komponent som egenskapen är medlem i.</xref:System.Type>"
    - id: oldPropertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "Den befintliga egenskapsbeskrivaren."
    - id: attributes
      type: System.Attribute[]
      description: "Nya attribut för den här egenskapen."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "En ny <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> som har de angivna metadataattribut samman med de befintliga metadataattribut."
  overload: System.ComponentModel.TypeDescriptor.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateProperty(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Skapar och Binder en egenskapsbeskrivaren dynamiskt till en typ som använder det angivna egenskapsnamnet, typ och attributet matris."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Den <xref:System.Type>för den komponent som egenskapen är medlem i.</xref:System.Type>"
    - id: name
      type: System.String
      description: "Namnet på egenskapen."
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för egenskapen.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "Nya attribut för den här egenskapen."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> som är bunden till den angivna typen och som har de angivna metadataattribut samman med de befintliga metadataattribut."
  overload: System.ComponentModel.TypeDescriptor.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  id: GetAssociation(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAssociation(Type,Object)
  nameWithType: TypeDescriptor.GetAssociation(Type,Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en instans av typen som associeras med det angivna primära objektet."
  remarks: "Om en tidigare association har gjorts av den `type` parameter med hjälp av den <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>metoden och sedan metoden GetAssociation returnerar rätt sekundära objekt ska startas för den begärda typen.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> Annars GetAssociation söker efter en kompatibel designer för `type` och returnerar designern om en sådan finns. Den här metoden returnerar aldrig `null`.       En <xref:System.WeakReference>används för att underhålla kopplingen mellan det primära och sekundära objektet; därför den här metoden förhindrar inte det primära eller sekundära objektet som slutförd och frigöras vid en skräpinsamling.</xref:System.WeakReference>"
  syntax:
    content: public static object GetAssociation (Type type, object primary);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    - id: primary
      type: System.Object
      description: "Det primära objektet av associationen."
    return:
      type: System.Object
      description: "En instans av den sekundära typen som har associerats med det primära objektet, om det finns en association; Annars <code> primary </code> om inget värde anges associationen finns."
  overload: System.ComponentModel.TypeDescriptor.GetAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  id: GetAttributes(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Object)
  nameWithType: TypeDescriptor.GetAttributes(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden med attribut för den angivna komponenten."
  remarks: "De attribut som returneras av den <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>metod kan ändras dynamiskt från den ursprungliga komponenten källa lista av utökare-providers (<xref:System.ComponentModel.IExtenderProvider>), filtrera tjänster (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), och attributet filter.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.ComponentModel.IExtenderProvider> </xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>       När du definierar ett anpassat attribut med <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>inställd på `true`, måste du åsidosätta den <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskap som gör det unikt.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Om alla instanser av attributet är unika åsidosätta <xref:System.Attribute.TypeId%2A?displayProperty=fullName>returnera objektidentitet för din attributet.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Om endast vissa instanser av attributet är unika, returnera ett värde från <xref:System.Attribute.TypeId%2A?displayProperty=fullName>igen lika i de fallen.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Till exempel har vissa attribut en konstruktor-parameter som fungerar som en unik nyckel. Returnerar värdet för konstruktorparametern från för dessa attribut i <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskap.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Standardimplementering av <xref:System.Attribute.TypeId%2A?displayProperty=fullName>returnerar typen identiteten oavsett värdet för den <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>egenskapen.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> För att returnera flera instanser av en <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>-attributet från den <xref:System.ComponentModel.AttributeCollection>, attributet måste åsidosätta den <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskapen.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  example:
  - For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Den komponent som du vill hämta attribut."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "En <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> som innehåller attribut för komponenten. Om <code> component </code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, den här metoden returnerar en tom samling."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  id: GetAttributes(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Type)
  nameWithType: TypeDescriptor.GetAttributes(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en mängd med attribut för den här komponenten."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet.       För attribut med <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>inställd på `true`, samlingen attributet tar bort Dubblettinstanser.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Dessa är instanser där den <xref:System.Attribute.TypeId%2A?displayProperty=fullName>-egenskap returnerar lika värden.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>       När du definierar ett anpassat attribut med <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>inställd på `true`, måste du åsidosätta den <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskap som gör det unikt.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Om alla instanser av attributet är unika åsidosätta <xref:System.Attribute.TypeId%2A?displayProperty=fullName>returnera objektidentitet för din attributet.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Om endast vissa instanser av attributet är unika, returnera ett värde från <xref:System.Attribute.TypeId%2A?displayProperty=fullName>igen lika i de fallen.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Till exempel har vissa attribut en konstruktor-parameter som fungerar som en unik nyckel. Returnerar värdet för konstruktorparametern från för dessa attribut i <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskap.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Standardimplementering av <xref:System.Attribute.TypeId%2A?displayProperty=fullName>returnerar typen identiteten oavsett värdet för den <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>egenskapen.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> För att returnera flera instanser av en <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>-attributet från den <xref:System.ComponentModel.AttributeCollection>, attributet måste åsidosätta den <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskapen.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    return:
      type: System.ComponentModel.AttributeCollection
      description: "En <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> med attribut för typ av komponenten. Om komponenten <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, den här metoden returnerar en tom samling."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  id: GetAttributes(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Object,Boolean)
  nameWithType: TypeDescriptor.GetAttributes(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en mängd med attribut för den angivna komponenten och ett booleskt värde som anger att en anpassad typbeskrivning har skapats."
  remarks: "De attribut som returneras av den <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>metod kan ändras dynamiskt från den ursprungliga källan för komponenter lista av utökare-providers (<xref:System.ComponentModel.IExtenderProvider>), filtrera tjänster (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), och attributet filter.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.ComponentModel.IExtenderProvider> </xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>       När du definierar ett anpassat attribut med <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>inställd på `true`, måste du åsidosätta den <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskap som gör det unikt.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Om alla instanser av attributet är unika åsidosätta <xref:System.Attribute.TypeId%2A?displayProperty=fullName>returnera objektidentitet för din attributet.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Om endast vissa instanser av attributet är unika, returnera ett värde från <xref:System.Attribute.TypeId%2A?displayProperty=fullName>igen lika i de fallen.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Till exempel har vissa attribut en konstruktor-parameter som fungerar som en unik nyckel. Returnerar värdet för konstruktorparametern från för dessa attribut i <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskap.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Standardimplementering av <xref:System.Attribute.TypeId%2A?displayProperty=fullName>returnerar typen identiteten oavsett värdet för den <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>egenskapen.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> För att returnera flera instanser av en <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>-attributet från den <xref:System.ComponentModel.AttributeCollection>, attributet måste åsidosätta den <xref:System.Attribute.TypeId%2A?displayProperty=fullName>egenskapen.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Den komponent som du vill hämta attribut."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att använda en grundläggande uppsättning attribut från anpassad typbeskrivning om `component` är av typen <xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "En <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> med attribut för komponenten. Om komponenten <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, den här metoden returnerar en tom samling."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  id: GetClassName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Object)
  nameWithType: TypeDescriptor.GetClassName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar namnet på klassen för den angivna komponenten med hjälp av standard typbeskrivning."
  remarks: "Vanligtvis den här metoden returnerar hela <xref:System.Type>namn för den `component` parametertyp.</xref:System.Type> Klassnamnet för en knapp är till exempel &quot;System.Windows.Forms.Button&quot;. Om `component` implementerar <xref:System.ComponentModel.ICustomTypeDescriptor>, den kan returnera ett alternativt namn.</xref:System.ComponentModel.ICustomTypeDescriptor>       Den här metoden motsvarar den överlagrade <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>metod med en andra parameter av `false`.</xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>"
  syntax:
    content: public static string GetClassName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Den <xref:System.Object>som du vill ha klassnamnet.</xref:System.Object>"
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller namnet på klassen för den angivna komponenten.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  id: GetClassName(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Type)
  nameWithType: TypeDescriptor.GetClassName(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar namnet på klassen för den angivna typen."
  remarks: "Den här metoden använder cachelagrade anpassad typ beskrivningen för den angivna typen för att identifiera det associera klassnamnet."
  syntax:
    content: public static string GetClassName (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller namnet på klassen för den angivna komponenten.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>componentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  id: GetClassName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Object,Boolean)
  nameWithType: TypeDescriptor.GetClassName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar namnet på klassen för den angivna komponenten med hjälp av en anpassad typbeskrivning."
  remarks: "Vanligtvis den här metoden returnerar hela <xref:System.Type>namn för den `component` parametertyp.</xref:System.Type> Klassnamnet för en knapp är till exempel &quot;System.Windows.Forms.Button&quot;. Om den `component` parametern implementerar <xref:System.ComponentModel.ICustomTypeDescriptor>, den kan returnera ett alternativt namn.</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public static string GetClassName (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Den <xref:System.Object>som du vill ha klassnamnet.</xref:System.Object>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att tänka på anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller namnet på klassen för den angivna komponenten.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  id: GetComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetComponentName(Object)
  nameWithType: TypeDescriptor.GetComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar namnet på den angivna komponenten med hjälp av standard typbeskrivning."
  remarks: "Den här metoden returnerar vanligtvis namnet för plats för komponenten, om sådan finns. Klassnamnet för en knapp är till exempel &quot;System.Windows.Forms.Button&quot;.       Den här metoden motsvarar den överlagrade <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>metod med en andra parameter av `false`.</xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>       Den här metoden används vid designtillfället för att hämta namnet på en instans av en komponent."
  syntax:
    content: public static string GetComponentName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Den <xref:System.Object>som du vill ha klassnamnet.</xref:System.Object>"
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller namnet på den angivna komponenten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det inte finns några komponentnamnet.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  id: GetComponentName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetComponentName(Object,Boolean)
  nameWithType: TypeDescriptor.GetComponentName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar namnet på den angivna komponenten med hjälp av en anpassad typbeskrivning."
  remarks: "Den här metoden används vid designtillfället för att hämta namnet på en instans av en komponent. Den här metoden returnerar vanligtvis namnet för plats för komponenten, om sådan finns. Klassnamnet för en knapp är till exempel &quot;System.Windows.Forms.Button&quot;. Om komponenten som implementerar det <xref:System.ComponentModel.ICustomTypeDescriptor>gränssnitt, kan den returnera ett alternativt namn.</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public static string GetComponentName (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Den <xref:System.Object>som du vill ha klassnamnet.</xref:System.Object>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att tänka på anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Namnet på klassen för den angivna komponenten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns ingen component-namn."
  overload: System.ComponentModel.TypeDescriptor.GetComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  id: GetConverter(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Object)
  nameWithType: TypeDescriptor.GetConverter(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en typkonverterare för typ av den angivna komponenten."
  remarks: "Den här metoden hittar en lämplig typkonverterare genom att söka efter en <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Om det går inte att hitta en <xref:System.ComponentModel.TypeConverterAttribute>, den passerar basklass hierarkin för klassen tills den hittar en primitiv typ.</xref:System.ComponentModel.TypeConverterAttribute>       Den här metoden motsvarar den överlagrade <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>metod med en andra parameter av `false`.</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>"
  example:
  - For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (object component);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta konverteraren för."
    return:
      type: System.ComponentModel.TypeConverter
      description: "En <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> för den angivna komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  id: GetConverter(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Type)
  nameWithType: TypeDescriptor.GetConverter(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en typkonverterare för den angivna typen."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet.       Den här metoden söker efter lämpliga typkonverterare genom att söka efter en <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Om det går inte att hitta en <xref:System.ComponentModel.TypeConverterAttribute>, den passerar basklass hierarkin för klassen tills den hittar en primitiv typ.</xref:System.ComponentModel.TypeConverterAttribute>"
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    return:
      type: System.ComponentModel.TypeConverter
      description: "En <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> för den angivna typen."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  id: GetConverter(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Object,Boolean)
  nameWithType: TypeDescriptor.GetConverter(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en typkonverterare för typ av den angivna komponenten med en anpassad typbeskrivning."
  remarks: "Den här metoden söker efter lämpliga typkonverterare genom att försöka hitta en <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Om det går inte att hitta en <xref:System.ComponentModel.TypeConverterAttribute>, den passerar basklass hierarkin för klassen tills den hittar en primitiv typ.</xref:System.ComponentModel.TypeConverterAttribute>"
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta konverteraren för."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att tänka på anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter
      description: "En <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> för den angivna komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  id: GetDefaultEvent(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Object)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar den standardhändelsen för den angivna komponenten."
  remarks: "Den här metoden motsvarar den överlagrade <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>metod med en andra parameter av `false`.</xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>"
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Hämta händelse för komponenten."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> med standardhändelsen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns inga händelser."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  id: GetDefaultEvent(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Type)
  nameWithType: TypeDescriptor.GetDefaultEvent(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar den standardhändelsen för den här komponenten."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet."
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    return:
      type: System.ComponentModel.EventDescriptor
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> med standardhändelsen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns inga händelser."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  id: GetDefaultEvent(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar standardhändelsen för en komponent med en anpassad typbeskrivning."
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Hämta händelse för komponenten."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att tänka på anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> med standardhändelsen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns inga händelser."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  id: GetDefaultProperty(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Object)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar standardegenskapen för den angivna komponenten."
  remarks: "Om den `component` parametern är `null`, den här metoden returnerar `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Att hämta standardegenskapen för komponenten."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> med standardegenskapen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns inga egenskaper."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  id: GetDefaultProperty(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Type)
  nameWithType: TypeDescriptor.GetDefaultProperty(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar standardegenskapen för den här komponenten."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet.       Om den `componentType` parametern är `null`, den här metoden returnerar `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "En <xref:System.Type>som representerar klassen för att hämta den egenskap efter.</xref:System.Type>"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> med standardegenskapen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns inga egenskaper."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  id: GetDefaultProperty(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar standardegenskapen för den angivna komponenten med en anpassad typbeskrivning."
  remarks: "Om den `component` parametern är `null`, den här metoden returnerar `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Att hämta standardegenskapen för komponenten."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att tänka på anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> med standardegenskapen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns inga egenskaper."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  id: GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Object,Type)
  nameWithType: TypeDescriptor.GetEditor(Object,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar en redigerare med angiven bastyp för den angivna komponenten."
  remarks: "Typ av `editorBaseType` är vanligtvis <xref:System.Drawing.Design.UITypeEditor>, men du kan också använda andra typer (till exempel <xref:System.ComponentModel.ComponentEditor>och <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       Du kan definiera flera redigerare för en egenskap. Du kan använda den här metoden för att välja redigerare som du vill använda."
  syntax:
    content: public static object GetEditor (object component, Type editorBaseType);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten få redigerare."
    - id: editorBaseType
      type: System.Type
      description: "En <xref:System.Type>som representerar bastypen för redigerare som du vill söka efter.</xref:System.Type>"
    return:
      type: System.Object
      description: "En instans av redigerare som kan omvandlas till den angivna redigerartypen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns ingen redigerare av den begärda typen."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  id: GetEditor(System.Type,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Type,Type)
  nameWithType: TypeDescriptor.GetEditor(Type,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Type,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en redigerare med den angivna bastypen för den angivna typen."
  remarks: "Typ av `editorBaseType` är vanligtvis <xref:System.Drawing.Design.UITypeEditor>, men du kan också använda andra typer (till exempel <xref:System.ComponentModel.ComponentEditor>och <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       Du kan definiera flera redigerare för typen. Du kan använda den här metoden för att välja den du vill använda.       Anropa den här versionen av den här metoden bara när du inte har en instans av objektet."
  syntax:
    content: public static object GetEditor (Type type, Type editorBaseType);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    - id: editorBaseType
      type: System.Type
      description: "En <xref:System.Type>som representerar bastypen för redigerare som du försöker hitta.</xref:System.Type>"
    return:
      type: System.Object
      description: "En instans av editor-objekt som kan omvandlas till den angivna bastypen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns ingen redigerare av den begärda typen."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  id: GetEditor(System.Object,System.Type,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Object,Type,Boolean)
  nameWithType: TypeDescriptor.GetEditor(Object,Type,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en redigerare med den angivna bastypen och med en anpassad typbeskrivning för den angivna komponenten."
  remarks: "Typ av `editorBaseType` är vanligtvis <xref:System.Drawing.Design.UITypeEditor>, men du kan också använda andra typer (till exempel <xref:System.ComponentModel.ComponentEditor>och <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       Du kan definiera flera redigerare för en egenskap. Du kan använda den här metoden för att välja redigerare som du vill använda."
  syntax:
    content: public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Komponenten få redigerare."
    - id: editorBaseType
      type: System.Type
      description: "En <xref:System.Type>som representerar bastypen för redigerare som du vill söka efter.</xref:System.Type>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "En flagga som anger om anpassade beskrivning typinformation bör övervägas."
    return:
      type: System.Object
      description: "En instans av redigerare som kan omvandlas till den angivna redigerartypen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns ingen redigerare av den begärda typen."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  id: GetEvents(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object)
  nameWithType: TypeDescriptor.GetEvents(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden händelser för den angivna komponenten."
  remarks: "Hämtar en samling av händelser som den angivna `component` parametern instans innehåller. Den här samlingen kan skilja sig från uppsättningen av händelser-klassen innehåller. Om den `component` parameter är placerad, platsen kan lägga till eller ta bort ytterligare händelser.       Om `component` är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  example:
  - For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta händelser för."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> med händelser för den här komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  id: GetEvents(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Type)
  nameWithType: TypeDescriptor.GetEvents(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden händelser för en viss typ av komponenten."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet.       Om den `componentType` parametern är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> med händelser för den här komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  id: GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden händelser för en angiven komponent med en angiven uppsättning attribut som ett filter."
  remarks: "Händelser för den `component` parameter kan skilja sig från händelserna av en klass, eftersom platsen kan lägga till eller ta bort händelser om det `component` parameter är placerad.       Den `attributes` matris kan ha en blandning av <xref:System.Type>och <xref:System.Attribute>objekt.</xref:System.Attribute> </xref:System.Type> Filtrering definieras av följande regler: – en <xref:System.Type>behandlas som ett jokertecken, den matchar alla händelser som har den <xref:System.Type>i dess attributuppsättning.</xref:System.Type> </xref:System.Type>      – Om en händelse inte har en <xref:System.Attribute>av samma klass händelsen inte ingår i den returnerade matrisen.</xref:System.Attribute>      -Om attributet är en instans av den <xref:System.Attribute>klass, händelsen måste vara en exakt matchning eller ingår inte i den returnerade matrisen.</xref:System.Attribute>      -Om en <xref:System.Attribute>instans har angetts och det är standardhändelse, den ingår i den returnerade matrisen även om det finns ingen instans av den <xref:System.Attribute>i händelseloggen.</xref:System.Attribute> </xref:System.Attribute>       Om `component` är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta händelser för."
    - id: attributes
      type: System.Attribute[]
      description: "En matris av typen <xref:System.Attribute>som du kan använda som ett filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> med händelser som matchar de angivna attributen för den här komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  id: GetEvents(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden händelser för en angiven komponent med en anpassad typbeskrivning."
  remarks: "Den här metoden hämtar en samling av händelser som den angivna `component` parametern instans innehåller. Detta kan skilja sig från uppsättningen av händelser-klassen innehåller. Om den `component` parameter är placerad, platsen kan lägga till eller ta bort ytterligare händelser.       Om `component` är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta händelser för."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att tänka på anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> med händelser för den här komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  id: GetEvents(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Type,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden händelser för en viss typ av komponenten med hjälp av en angiven uppsättning attribut som ett filter."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet.       Den `attributes` parametermatris kan ha en blandning av <xref:System.Type>och <xref:System.Attribute>objekt.</xref:System.Attribute> </xref:System.Type> Filtrering definieras av följande regler: – en <xref:System.Type>behandlas som ett jokertecken, den matchar alla händelser som har den <xref:System.Type>i dess attributuppsättning.</xref:System.Type> </xref:System.Type>      – Om en händelse inte har en <xref:System.Attribute>av samma klass händelsen inte ingår i den returnerade matrisen.</xref:System.Attribute>      -Om attributet är en instans av den <xref:System.Attribute>klass, händelsen måste vara en exakt matchning eller ingår inte i den returnerade matrisen.</xref:System.Attribute>      -Om en <xref:System.Attribute>instans har angetts och det är standardhändelse, den ingår i den returnerade matrisen även om det finns ingen instans av den <xref:System.Attribute>i händelseloggen.</xref:System.Attribute> </xref:System.Attribute>       Om den `componentType` parametern är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "En matris av typen <xref:System.Attribute>som du kan använda som ett filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> med händelser som matchar de angivna attributen för den här komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  id: GetEvents(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden händelser för en angiven komponent med en angiven uppsättning attribut som ett filter och använder en anpassad typbeskrivning."
  remarks: "Händelser för den `component` parameter kan skilja sig från händelserna av en klass, eftersom platsen kan lägga till eller ta bort händelser om det `component` parameter är placerad.       Den `attributes` parametermatris kan ha en blandning av <xref:System.Type>och <xref:System.Attribute>objekt.</xref:System.Attribute> </xref:System.Type> Filtrering definieras av följande regler: – en <xref:System.Type>behandlas som ett jokertecken, den matchar alla händelser som har den <xref:System.Type>i dess attributuppsättning.</xref:System.Type> </xref:System.Type>      – Om en händelse inte har en <xref:System.Attribute>av samma klass händelsen inte ingår i den returnerade matrisen.</xref:System.Attribute>      -Om attributet är en instans av den <xref:System.Attribute>klass, händelsen måste vara en exakt matchning eller ingår inte i den returnerade matrisen.</xref:System.Attribute>      -Om en <xref:System.Attribute>instans har angetts och det är standardhändelse, den ingår i den returnerade matrisen även om det finns ingen instans av den <xref:System.Attribute>i händelseloggen.</xref:System.Attribute> </xref:System.Attribute>       Om `component` är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta händelser för."
    - id: attributes
      type: System.Attribute[]
      description: "En matris av typen <xref:System.Attribute>ska användas som ett filter.</xref:System.Attribute>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att tänka på anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> med händelser som matchar de angivna attributen för den här komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptor.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar det fullständigt kvalificerade namnet på komponenten."
  remarks: "I många fall GetFullComponentName-metoden returnerar samma värde som den <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A>metoden.</xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> Om den här komponenten finns i en kapslad behållare eller innehåller andra kapslade semantik, kan den returnera ett annat fullständigt kvalificerat namn."
  syntax:
    content: public static string GetFullComponentName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Den <xref href=&quot;System.ComponentModel.Component&quot;> </xref> att hitta namnet."
    return:
      type: System.String
      description: "Det fullständigt kvalificerade namnet för den angivna komponenten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om komponenten inte har något namn."
  overload: System.ComponentModel.TypeDescriptor.GetFullComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object)
  nameWithType: TypeDescriptor.GetProperties(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar insamlingen av egenskaper för en angiven komponent."
  remarks: "Egenskaperna för en komponent kan skilja sig från egenskaperna för en klass, eftersom platsen kan lägga till eller ta bort egenskaper om komponenten är placerad.       Om den `component` parametern är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  example:
  - "The following code example demonstrates the use of the GetProperties method to access the properties of a control. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.  \n  \n [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/add/codesnippet/visualbasic/m-system.componentmodel._38_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerServices#8](~/add/codesnippet/csharp/m-system.componentmodel._38_1.cs)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta egenskaperna för."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> med egenskaperna för den angivna komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  id: GetProperties(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Type)
  nameWithType: TypeDescriptor.GetProperties(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden egenskaperna för en viss typ av komponenten."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet.       Om den `componentType` parametern är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "En <xref:System.Type>som representerar komponenten att hämta egenskaper efter.</xref:System.Type>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> med egenskaperna för en viss typ av komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  id: GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar insamlingen av egenskaper för en angiven komponent med en angiven uppsättning attribut som ett filter."
  remarks: "Egenskaperna för den `component` parameter kan skilja sig från egenskaperna för en klass, eftersom platsen kan lägga till eller ta bort egenskaper om det `component` parameter är placerad.       Den `attributes` parametermatris används för att filtrera matrisen. Filtrering definieras av följande regler: – om en egenskap inte har en <xref:System.Attribute>av samma klass egenskapen inte ingår i den returnerade matrisen.</xref:System.Attribute>      -Om attributet är en instans av den <xref:System.Attribute>klass, egenskapen måste vara en exakt matchning eller ingår inte i den returnerade matrisen.</xref:System.Attribute>      -Om en <xref:System.Attribute>instans har angetts och det är standardinställningen för egenskapen, det ingår i den returnerade matrisen även om det finns ingen instans av den <xref:System.Attribute>i egenskapen.</xref:System.Attribute> </xref:System.Attribute>      -Om `attributes` har ett standardattribut, GetProperties metoden matchar fallet när egenskapen inte har attributet.       Om `component` är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  example:
  - "The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.  \n  \n [!code-cs[PropertyTabExample#2](~/add/codesnippet/csharp/0d160e65-8e23-4623-ad72-_1.cs)]\n [!code-cpp[PropertyTabExample#2](~/add/codesnippet/cpp/0d160e65-8e23-4623-ad72-_1.cpp)]\n [!code-vb[PropertyTabExample#2](~/add/codesnippet/visualbasic/0d160e65-8e23-4623-ad72-_1.vb)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta egenskaperna för."
    - id: attributes
      type: System.Attribute[]
      description: "En matris av typen <xref:System.Attribute>ska användas som ett filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> med de egenskaper som matchar de angivna attributen för den angivna komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  id: GetProperties(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar insamlingen av egenskaper för en angiven komponent använder standard typbeskrivning."
  remarks: "Egenskaperna för den `component` parameter kan skilja sig från egenskaperna för en klass, eftersom platsen kan lägga till eller ta bort egenskaper om det `component` parameter är placerad.       Om `component` är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta egenskaperna för."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>beaktas inte anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> med egenskaperna för en angiven komponent."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  id: GetProperties(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Type,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar mängden egenskaperna för en viss typ av komponenten med hjälp av en angiven uppsättning attribut som ett filter."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet.       Den `attributes` parametermatris används för att filtrera matrisen. Filtrering definieras av följande regler: – om en egenskap inte har en <xref:System.Attribute>av samma klass egenskapen inte ingår i den returnerade matrisen.</xref:System.Attribute>      -Om attributet är en instans av den <xref:System.Attribute>klass, egenskapen måste vara en exakt matchning eller ingår inte i den returnerade matrisen.</xref:System.Attribute>      -Om en <xref:System.Attribute>instans har angetts och det är standardinställningen för egenskapen, det ingår i den returnerade matrisen även om det finns ingen instans av den <xref:System.Attribute>i egenskapen.</xref:System.Attribute> </xref:System.Attribute>      -Om `attributes` har ett standardattribut, GetProperties metoden matchar fallet när egenskapen inte har attributet.       Om den `componentType` parametern är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  example:
  - "The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.  \n  \n [!code-cs[PropertyTabExample#2](~/add/codesnippet/csharp/af245915-0d17-4307-99bf-_1.cs)]\n [!code-cpp[PropertyTabExample#2](~/add/codesnippet/cpp/af245915-0d17-4307-99bf-_1.cpp)]\n [!code-vb[PropertyTabExample#2](~/add/codesnippet/visualbasic/af245915-0d17-4307-99bf-_1.vb)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "En matris av typen <xref:System.Attribute>ska användas som ett filter.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> med de egenskaper som matchar de angivna attributen för den här komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  id: GetProperties(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar insamlingen av egenskaper för en angiven komponent med en angiven uppsättning attribut som ett filter och använder en anpassad typbeskrivning."
  remarks: "Egenskaperna för en `component` kan skilja sig från egenskaperna för en klass, eftersom platsen kan lägga till eller ta bort egenskaper om det `component` är placerad.       Den `attributes` parametermatris används för att filtrera matrisen. Filtrering definieras av följande regler: – om en egenskap inte har en <xref:System.Attribute>av samma klass egenskapen inte ingår i den returnerade matrisen.</xref:System.Attribute>      -Om attributet är en instans av den <xref:System.Attribute>klass, egenskapen måste vara en exakt matchning eller ingår inte i den returnerade matrisen.</xref:System.Attribute>      -Om en <xref:System.Attribute>instans har angetts och det är standardinställningen för egenskapen, det ingår i den returnerade matrisen även om det finns ingen instans av den <xref:System.Attribute>i egenskapen.</xref:System.Attribute> </xref:System.Attribute>      -Om `attributes` har ett standardattribut, GetProperties metoden matchar fallet när egenskapen inte har attributet.       Om den `component` parametern är `null`, returneras en tom samling.       Ordningen för den returnerade samlingen är inte säkert att vara identiska för anrop, ordna det därför alltid före användning."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som används för att hämta egenskaperna för."
    - id: attributes
      type: System.Attribute[]
      description: "En matris av typen <xref:System.Attribute>ska användas som ett filter.</xref:System.Attribute>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att tänka på anpassad typ beskrivningsinformation. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "En <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> med händelser som matchar de angivna attributen för den angivna komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>är en mellan olika processer fjärrobjekt."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  id: GetProvider(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProvider(Object)
  nameWithType: TypeDescriptor.GetProvider(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar Typbeskrivarprovidern för den angivna komponenten."
  remarks: "Den <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>metoden returnerar alltid en Typbeskrivarprovidern.</xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> Även i standard <xref:System.ComponentModel.TypeDescriptor>implementering bygger på en <xref:System.ComponentModel.TypeDescriptionProvider>.</xref:System.ComponentModel.TypeDescriptionProvider> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "En instans av komponenten som mål."
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "En <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> som är associerade med den angivna komponenten."
  overload: System.ComponentModel.TypeDescriptor.GetProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  id: GetProvider(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProvider(Type)
  nameWithType: TypeDescriptor.GetProvider(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar Typbeskrivarprovidern för den angivna typen."
  remarks: "Den <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>metoden returnerar alltid en Typbeskrivarprovidern.</xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> Även i standard <xref:System.ComponentModel.TypeDescriptor>implementering bygger på en <xref:System.ComponentModel.TypeDescriptionProvider>.</xref:System.ComponentModel.TypeDescriptionProvider> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "En <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> som är associerade med den angivna typen."
  overload: System.ComponentModel.TypeDescriptor.GetProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptor.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en <xref:System.Type>som kan användas för att utföra reflektion, med ett objekt.</xref:System.Type>"
  remarks: "Den <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>metoden är en lägsta version av den <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metoden.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>normalt används för att utföra standard reflektion mot ett objekt när ingen beskrivning av anpassad typ inte kan att hitta för den.</xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>"
  syntax:
    content: public static Type GetReflectionType (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "En instans av komponenten som mål."
    return:
      type: System.Type
      description: "En <xref:System.Type>för det angivna objektet.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptor.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returnerar en <xref:System.Type>som kan användas för att utföra reflektion, anges en klasstyp.</xref:System.Type>"
  remarks: "Den <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>metoden är en lägsta version av den <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metoden.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>normalt används för att utföra standard reflektion mot en klass när ingen anpassad typbeskrivning kan finnas för den.</xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>"
  syntax:
    content: public static Type GetReflectionType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
    return:
      type: System.Type
      description: "En <xref:System.Type>av de angivna klass.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.InterfaceType
  id: InterfaceType
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
  fullName: System.ComponentModel.TypeDescriptor.InterfaceType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar en typ som representerar en Typbeskrivarprovidern för alla gränssnittstyper av."
  remarks: "InterfaceType egenskapen hämtar en <xref:System.Type>objekt som du kan skicka till den <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>metoder för att definiera en Typbeskrivarprovidern för gränssnittstyper.</xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> </xref:System.Type>"
  syntax:
    content: public static Type InterfaceType { get; }
    return:
      type: System.Type
      description: "En <xref:System.Type>som representerar en anpassad Typbeskrivarprovidern för alla gränssnittstyper.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  id: Refresh(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Object)
  nameWithType: TypeDescriptor.Refresh(Object)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort egenskaper och händelser för den angivna komponenten från cacheminnet."
  remarks: "Egenskaper och händelser cachelagras av <xref:System.ComponentModel.TypeDescriptor>för hastighet.</xref:System.ComponentModel.TypeDescriptor> De normalt konstant för livslängden för ett objekt. Utökare providers och designers kan dock ändra uppsättningen egenskaper för ett objekt. Om så är fallet ska de anropa den här metoden om du vill rensa egenskap och händelse beskrivningar av objektet. Den här metoden används endast i designläge. Den används inte vid körning.       Den här metoden aktiverar också en <xref:System.ComponentModel.TypeDescriptor.Refreshed>händelse när de egenskaper eller händelser för en komponent ändrar.</xref:System.ComponentModel.TypeDescriptor.Refreshed> Den här händelsen aktiveras bara om det har uppstått ett tidigare anrop till den <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>eller <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>metoden den cachelagrade informationen.</xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  example:
  - For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.
  syntax:
    content: public static void Refresh (object component);
    parameters:
    - id: component
      type: System.Object
      description: "En komponent som egenskaper eller händelser har ändrats."
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  id: Refresh(System.Reflection.Assembly)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Assembly)
  nameWithType: TypeDescriptor.Refresh(Assembly)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Assembly)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort egenskaper och händelser för den angivna sammansättningen från cacheminnet."
  remarks: "Egenskaper och händelser cachelagras av <xref:System.ComponentModel.TypeDescriptor>för hastighet.</xref:System.ComponentModel.TypeDescriptor> De normalt konstant för livslängden för ett objekt. Utökare providers och designers kan dock ändra uppsättningen egenskaper för ett objekt. Om så är fallet kan de anropa den här metoden om du vill rensa egenskap och händelse beskrivningar av objektet. Den här metoden används endast i designläge. Den används inte vid körning.       Innan du gör ett anrop till den <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>metod för att rensa cachen, måste du anropa den <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>metod för specifika sammansättningen kan cachelagra informationen först.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> </xref:System.ComponentModel.TypeDescriptor.Refresh%2A>       Den här metoden aktiverar också en <xref:System.ComponentModel.TypeDescriptor.Refreshed>händelsen för att meddela alla klasser som ska meddelas när egenskapen värdet för en komponent ändras.</xref:System.ComponentModel.TypeDescriptor.Refreshed>"
  syntax:
    content: public static void Refresh (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "Den <xref:System.Reflection.Assembly>som representerar sammansättningen som ska uppdateras.</xref:System.Reflection.Assembly> Varje <xref:System.Type>i den här sammansättningen kommer att uppdateras.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  id: Refresh(System.Reflection.Module)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Module)
  nameWithType: TypeDescriptor.Refresh(Module)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Module)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort egenskaper och händelser för den angivna modulen från cacheminnet."
  remarks: "Egenskaper och händelser cachelagras av <xref:System.ComponentModel.TypeDescriptor>för hastighet.</xref:System.ComponentModel.TypeDescriptor> De normalt konstant för livslängden för ett objekt. Utökare providers och designers kan dock ändra uppsättningen egenskaper för ett objekt. Om så är fallet kan de anropa den här metoden om du vill rensa egenskap och händelse beskrivningar av objektet. Den här metoden används endast i designläge. Den används inte vid körning.       Innan du gör ett anrop till den <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>metod för att rensa cachen, måste du anropa den <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>metoden för specifika modulen kan cachelagra informationen först.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> </xref:System.ComponentModel.TypeDescriptor.Refresh%2A>       Den här metoden aktiverar också en <xref:System.ComponentModel.TypeDescriptor.Refreshed>händelsen för att meddela alla klasser som ska meddelas när egenskapen värdet för en komponent ändras.</xref:System.ComponentModel.TypeDescriptor.Refreshed>"
  syntax:
    content: public static void Refresh (System.Reflection.Module module);
    parameters:
    - id: module
      type: System.Reflection.Module
      description: "Den <xref:System.Reflection.Module>som representerar modulen som ska uppdateras.</xref:System.Reflection.Module> Varje <xref:System.Type>i den här modulen kommer att uppdateras.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  id: Refresh(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Type)
  nameWithType: TypeDescriptor.Refresh(Type)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort egenskaper och händelser för den här komponenten från cacheminnet."
  remarks: "Anropa den här versionen av den här metoden bara när du inte har en instans av objektet.       Egenskaper och händelser cachelagras av <xref:System.ComponentModel.TypeDescriptor>för hastighet.</xref:System.ComponentModel.TypeDescriptor> De normalt konstant för livslängden för ett objekt. Utökare providers och designers kan dock ändra uppsättningen egenskaper för ett objekt. Om så är fallet kan de anropa den här metoden om du vill rensa egenskap och händelse beskrivningar av objektet. Den här metoden används endast i designläge. Den används inte vid körning.       Den här metoden aktiverar också en <xref:System.ComponentModel.TypeDescriptor.Refreshed>händelse när de egenskaper eller händelser för en komponent ändrar.</xref:System.ComponentModel.TypeDescriptor.Refreshed> Den här händelsen aktiveras bara om det har uppstått ett tidigare anrop till den <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>eller <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>metoden den cachelagrade informationen.</xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public static void Refresh (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refreshed
  id: Refreshed
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refreshed
  nameWithType: TypeDescriptor.Refreshed
  fullName: System.ComponentModel.TypeDescriptor.Refreshed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inträffar när cachen för en komponent är avmarkerad."
  remarks: 'Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.
  syntax:
    content: public static event System.ComponentModel.RefreshEventHandler Refreshed;
    return:
      type: System.ComponentModel.RefreshEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  id: RemoveAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveAssociation(Object,Object)
  nameWithType: TypeDescriptor.RemoveAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort en association mellan två objekt."
  remarks: "Metoden RemoveAssociation tar bort en association mellan två objekt som utgörs av den <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>metoden.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>       En <xref:System.WeakReference>används för att underhålla kopplingen mellan det primära och sekundära objektet; därför kan den här metoden påverkar inte när objekt är slutförd eller återställts genom skräpinsamling.</xref:System.WeakReference>"
  syntax:
    content: public static void RemoveAssociation (object primary, object secondary);
    parameters:
    - id: primary
      type: System.Object
      description: "Primärt <xref:System.Object>.</xref:System.Object>"
    - id: secondary
      type: System.Object
      description: "Sekundärt <xref:System.Object>.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.RemoveAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  id: RemoveAssociations(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveAssociations(Object)
  nameWithType: TypeDescriptor.RemoveAssociations(Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort alla kopplingar för en primär objektet."
  remarks: "Metoden RemoveAssociations tar bort alla associationer mellan en primär objektet och alla dess sekundära objekt som skapats av anrop till den <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>metoden.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>       En <xref:System.WeakReference>används för att underhålla kopplingen mellan det primära och sekundära objektet; därför kan den här metoden påverkar inte när antingen primärt sekundära objekt är slutförd eller få tillbaka skräpinsamling.</xref:System.WeakReference>"
  syntax:
    content: public static void RemoveAssociations (object primary);
    parameters:
    - id: primary
      type: System.Object
      description: "Primärt <xref:System.Object>i en association.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.RemoveAssociations*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>primary</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort en tillagd Typbeskrivarprovidern som är associerad med det angivna objektet."
  remarks: "Den här metoden tar bort en Typbeskrivarprovidern som tidigare har lagts till med den <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metoden.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> Tar bort en provider en <xref:System.ComponentModel.TypeDescriptor.Refreshed>-händelse för motsvarande objekt.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Använd den <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metoden om du behöver anropas från delvis betrodd kod.</xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Den <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> att ta bort."
    - id: instance
      type: System.Object
      description: "En instans av komponenten som mål."
  overload: System.ComponentModel.TypeDescriptor.RemoveProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort en tillagd Typbeskrivarprovidern som är associerad med den angivna typen."
  remarks: "Den här metoden tar bort en Typbeskrivarprovidern som tidigare har lagts till med den <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metoden.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> Tar bort en provider en <xref:System.ComponentModel.TypeDescriptor.Refreshed>-händelse för den koppla typen.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Använd den <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metoden om du behöver anropas från delvis betrodd kod.</xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Den <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> att ta bort."
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.RemoveProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort en tillagd Typbeskrivarprovidern som är associerad med det angivna objektet."
  remarks: "Den här metoden tar bort en Typbeskrivarprovidern som tidigare har lagts till med den <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metoden.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> Tar bort en provider en <xref:System.ComponentModel.TypeDescriptor.Refreshed>-händelse för motsvarande objekt.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Den här metoden kan anropas från delvis betrodd kod. Om <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>är definierad anroparen kan du registrera en provider för den angivna instansen om dess typ är också delvis betrodd.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Använd den <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metoden om du inte behöver anropas från delvis betrodd kod.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Den <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> att ta bort."
    - id: instance
      type: System.Object
      description: "En instans av komponenten som mål."
  overload: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort en tillagd Typbeskrivarprovidern som är associerad med den angivna typen."
  remarks: "Den här metoden tar bort en Typbeskrivarprovidern som tidigare har lagts till med den <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metoden.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> Tar bort en provider en <xref:System.ComponentModel.TypeDescriptor.Refreshed>-händelse för den koppla typen.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Den här metoden kan anropas från delvis betrodd kod. Om <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>har definierats kan anroparen avregistrera en provider för den angivna typen om det är också delvis betrodd.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Använd den <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metoden om du inte behöver anropas från delvis betrodd kod.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Den <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> att ta bort."
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>för mål-komponenten.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller båda parametrarna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  id: SortDescriptorArray(System.Collections.IList)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: SortDescriptorArray(IList)
  nameWithType: TypeDescriptor.SortDescriptorArray(IList)
  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sorterar filbeskrivningar med hjälp av namnet på beskrivningen."
  syntax:
    content: public static void SortDescriptorArray (System.Collections.IList infos);
    parameters:
    - id: infos
      type: System.Collections.IList
      description: "En <xref:System.Collections.IList>som innehåller beskrivningar att sortera.</xref:System.Collections.IList>"
  overload: System.ComponentModel.TypeDescriptor.SortDescriptorArray*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>infos</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes(Object,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes(Type,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Type,Attribute[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddEditorTable(Type,Hashtable)
  nameWithType: TypeDescriptor.AddEditorTable(Type,Hashtable)
  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(Type,Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
  fullName: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
- uid: System.ComponentModel.IComNativeDescriptorHandler
  parent: System.ComponentModel
  isExternal: false
  name: IComNativeDescriptorHandler
  nameWithType: IComNativeDescriptorHandler
  fullName: System.ComponentModel.IComNativeDescriptorHandler
- uid: System.ComponentModel.TypeDescriptor.ComObjectType
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
  fullName: System.ComponentModel.TypeDescriptor.ComObjectType
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateAssociation(Object,Object)
  nameWithType: TypeDescriptor.CreateAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(Object,Object)
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateDesigner(IComponent,Type)
  nameWithType: TypeDescriptor.CreateDesigner(IComponent,Type)
  fullName: System.ComponentModel.TypeDescriptor.CreateDesigner(IComponent,Type)
- uid: System.ComponentModel.Design.IDesigner
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent(Type,EventDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty(Type,PropertyDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAssociation(Type,Object)
  nameWithType: TypeDescriptor.GetAssociation(Type,Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(Type,Object)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Object)
  nameWithType: TypeDescriptor.GetAttributes(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object)
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Type)
  nameWithType: TypeDescriptor.GetAttributes(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Type)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Object,Boolean)
  nameWithType: TypeDescriptor.GetAttributes(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Object)
  nameWithType: TypeDescriptor.GetClassName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Type)
  nameWithType: TypeDescriptor.GetClassName(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Type)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Object,Boolean)
  nameWithType: TypeDescriptor.GetClassName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName(Object)
  nameWithType: TypeDescriptor.GetComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName(Object,Boolean)
  nameWithType: TypeDescriptor.GetComponentName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Object)
  nameWithType: TypeDescriptor.GetConverter(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Type)
  nameWithType: TypeDescriptor.GetConverter(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Type)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Object,Boolean)
  nameWithType: TypeDescriptor.GetConverter(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Object)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Type)
  nameWithType: TypeDescriptor.GetDefaultEvent(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Type)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Object)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Type)
  nameWithType: TypeDescriptor.GetDefaultProperty(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Type)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Object,Type)
  nameWithType: TypeDescriptor.GetEditor(Object,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Type,Type)
  nameWithType: TypeDescriptor.GetEditor(Type,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Type,Type)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Object,Type,Boolean)
  nameWithType: TypeDescriptor.GetEditor(Object,Type,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object)
  nameWithType: TypeDescriptor.GetEvents(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object)
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Type)
  nameWithType: TypeDescriptor.GetEvents(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Type,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptor.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object)
  nameWithType: TypeDescriptor.GetProperties(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Type)
  nameWithType: TypeDescriptor.GetProperties(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Type,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider(Object)
  nameWithType: TypeDescriptor.GetProvider(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider(Type)
  nameWithType: TypeDescriptor.GetProvider(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Type)
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptor.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Object)
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptor.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Type)
- uid: System.ComponentModel.TypeDescriptor.InterfaceType
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
  fullName: System.ComponentModel.TypeDescriptor.InterfaceType
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Object)
  nameWithType: TypeDescriptor.Refresh(Object)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Object)
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Assembly)
  nameWithType: TypeDescriptor.Refresh(Assembly)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Module)
  nameWithType: TypeDescriptor.Refresh(Module)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Module)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Type)
  nameWithType: TypeDescriptor.Refresh(Type)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Type)
- uid: System.ComponentModel.TypeDescriptor.Refreshed
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refreshed
  nameWithType: TypeDescriptor.Refreshed
  fullName: System.ComponentModel.TypeDescriptor.Refreshed
- uid: System.ComponentModel.RefreshEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: RefreshEventHandler
  nameWithType: RefreshEventHandler
  fullName: System.ComponentModel.RefreshEventHandler
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociation(Object,Object)
  nameWithType: TypeDescriptor.RemoveAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(Object,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociations(Object)
  nameWithType: TypeDescriptor.RemoveAssociations(Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: SortDescriptorArray(IList)
  nameWithType: TypeDescriptor.SortDescriptorArray(IList)
  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.TypeDescriptor.AddAttributes*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes
  nameWithType: TypeDescriptor.AddAttributes
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddEditorTable
  nameWithType: TypeDescriptor.AddEditorTable
- uid: System.ComponentModel.TypeDescriptor.AddProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider
  nameWithType: TypeDescriptor.AddProvider
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent
  nameWithType: TypeDescriptor.AddProviderTransparent
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
- uid: System.ComponentModel.TypeDescriptor.ComObjectType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateAssociation
  nameWithType: TypeDescriptor.CreateAssociation
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateDesigner
  nameWithType: TypeDescriptor.CreateDesigner
- uid: System.ComponentModel.TypeDescriptor.CreateEvent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent
  nameWithType: TypeDescriptor.CreateEvent
- uid: System.ComponentModel.TypeDescriptor.CreateInstance*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateInstance
  nameWithType: TypeDescriptor.CreateInstance
- uid: System.ComponentModel.TypeDescriptor.CreateProperty*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty
  nameWithType: TypeDescriptor.CreateProperty
- uid: System.ComponentModel.TypeDescriptor.GetAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAssociation
  nameWithType: TypeDescriptor.GetAssociation
- uid: System.ComponentModel.TypeDescriptor.GetAttributes*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes
  nameWithType: TypeDescriptor.GetAttributes
- uid: System.ComponentModel.TypeDescriptor.GetClassName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName
  nameWithType: TypeDescriptor.GetClassName
- uid: System.ComponentModel.TypeDescriptor.GetComponentName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName
  nameWithType: TypeDescriptor.GetComponentName
- uid: System.ComponentModel.TypeDescriptor.GetConverter*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter
  nameWithType: TypeDescriptor.GetConverter
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent
  nameWithType: TypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty
  nameWithType: TypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.TypeDescriptor.GetEditor*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: TypeDescriptor.GetEditor
- uid: System.ComponentModel.TypeDescriptor.GetEvents*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents
  nameWithType: TypeDescriptor.GetEvents
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetFullComponentName
  nameWithType: TypeDescriptor.GetFullComponentName
- uid: System.ComponentModel.TypeDescriptor.GetProperties*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties
  nameWithType: TypeDescriptor.GetProperties
- uid: System.ComponentModel.TypeDescriptor.GetProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider
  nameWithType: TypeDescriptor.GetProvider
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType
  nameWithType: TypeDescriptor.GetReflectionType
- uid: System.ComponentModel.TypeDescriptor.InterfaceType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
- uid: System.ComponentModel.TypeDescriptor.Refresh*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh
  nameWithType: TypeDescriptor.Refresh
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociation
  nameWithType: TypeDescriptor.RemoveAssociation
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociations
  nameWithType: TypeDescriptor.RemoveAssociations
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider
  nameWithType: TypeDescriptor.RemoveProvider
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent
  nameWithType: TypeDescriptor.RemoveProviderTransparent
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: SortDescriptorArray
  nameWithType: TypeDescriptor.SortDescriptorArray
