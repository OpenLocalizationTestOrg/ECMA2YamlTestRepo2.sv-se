### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ISynchronizeInvoke
  id: ISynchronizeInvoke
  children:
  - System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  - System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  - System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  - System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  langs:
  - csharp
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
  type: Interface
  summary: "Ger ett sätt att köra en delegat synkront eller asynkront."
  remarks: "The ISynchronizeInvoke interface provides synchronous and asynchronous communication between objects about the occurrence of an event. Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event. In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.  \n  \n The ISynchronizeInvoke class provides two ways to invoke a process:  \n  \n1.  Asynchronously, by using the [BeginInvoke(Delegate, Object\\[\\])](assetId:///M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])?qualifyHint=False&autoUpgrade=True) method. <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately. Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.  \n  \n2.  Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method. <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns. Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource> &#124; <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public interface ISynchronizeInvoke
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  id: BeginInvoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: BeginInvoke(Delegate,Object[])
  nameWithType: ISynchronizeInvoke.BeginInvoke(Delegate,Object[])
  fullName: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(Delegate,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Kör asynkront delegaten på tråden som skapade det här objektet."
  remarks: "Den `method` ombud körs på den tråd som skapade objektet i stället för tråden som BeginInvoke anropades.       Delegaten kallas asynkront, och den här metoden returnerar omedelbart. Du kan anropa denna metod från en tråd. Om du behöver det returnera värdet från en process som är igång med den här metoden kan anropa <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A>värdet hämtas.</xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A>       Om du behöver anropa delegaten synkront använder den <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>metoden i stället.</xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>"
  syntax:
    content: public IAsyncResult BeginInvoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: "En <xref:System.Delegate>till en metod som använder parametrar för samma antal och typer som finns i `args`.</xref:System.Delegate>"
    - id: args
      type: System.Object[]
      description: "En matris av typen <xref:System.Object>ska skickas som argument till den angivna metoden.</xref:System.Object> Detta kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det behövs inga argument."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>gränssnitt som representerar den asynkrona åtgärden startas av den här metoden anropas.</xref:System.IAsyncResult>"
  overload: System.ComponentModel.ISynchronizeInvoke.BeginInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: ISynchronizeInvoke.EndInvoke(IAsyncResult)
  fullName: System.ComponentModel.ISynchronizeInvoke.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Väntar tills processen startas genom att anropa <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*>är klar och returnerar sedan värdet som genererats av processen.</xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*>"
  remarks: "Den här metoden hämtar returvärdet för den asynkrona åtgärden som representeras av den <xref:System.IAsyncResult>skickades av det här gränssnittet.</xref:System.IAsyncResult> Om den asynkrona åtgärden inte har slutförts, kommer den här metoden vänta tills resultatet är tillgänglig."
  syntax:
    content: public object EndInvoke (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Ett <xref:System.IAsyncResult>gränssnitt som representerar den asynkrona åtgärden igång genom att anropa <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*>.</xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*> </xref:System.IAsyncResult>"
    return:
      type: System.Object
      description: "En <xref:System.Object>som representerar det returnera värdet som genererats av den asynkrona åtgärden.</xref:System.Object>"
  overload: System.ComponentModel.ISynchronizeInvoke.EndInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  id: Invoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: Invoke(Delegate,Object[])
  nameWithType: ISynchronizeInvoke.Invoke(Delegate,Object[])
  fullName: System.ComponentModel.ISynchronizeInvoke.Invoke(Delegate,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Kör synkront delegaten på tråden som skapats av det här objektet och marshals anropet för att skapa tråden."
  remarks: "Till skillnad från <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, den här metoden fungerar synkront, det vill säga den väntar tills processen har slutförts innan det returneras.</xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Undantag som uppstått under anropet sprids till anroparen.       Använd den här metoden när du anropar en metod från en annan tråd för att konvertera anropet till rätt tråd."
  syntax:
    content: public object Invoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: "En <xref:System.Delegate>som innehåller en metod som ska anropas i kontexten för tråden för kontrollen.</xref:System.Delegate>"
    - id: args
      type: System.Object[]
      description: "En matris av typen <xref:System.Object>som representerar argument att skicka till den angivna metoden.</xref:System.Object> Detta kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det behövs inga argument."
    return:
      type: System.Object
      description: "En <xref:System.Object>som representerar det returnera värdet från delegaten som anropas eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om delegaten har inget returvärde.</xref:System.Object>"
  overload: System.ComponentModel.ISynchronizeInvoke.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  id: InvokeRequired
  parent: System.ComponentModel.ISynchronizeInvoke
  langs:
  - csharp
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
  fullName: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar ett värde som anger om anroparen måste anropa <xref:System.ComponentModel.ISynchronizeInvoke.Invoke*>när anropar ett objekt som implementerar det här gränssnittet.</xref:System.ComponentModel.ISynchronizeInvoke.Invoke*>"
  remarks: "Den här egenskapen anger om anroparen måste anropa <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>när anropar metoden till ett objekt som implementerar det här gränssnittet.</xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Sådana objekt är kopplade till en specifik tråd och är inte trådsäker. Om du anropar en metod från en annan tråd, måste du använda den <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>metod för att konvertera anropet till rätt tråd.</xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>"
  syntax:
    content: public bool InvokeRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om anroparen måste anropa <xref:System.ComponentModel.ISynchronizeInvoke.Invoke*>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.ISynchronizeInvoke.Invoke*>"
  overload: System.ComponentModel.ISynchronizeInvoke.InvokeRequired*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: BeginInvoke(Delegate,Object[])
  nameWithType: ISynchronizeInvoke.BeginInvoke(Delegate,Object[])
  fullName: System.ComponentModel.ISynchronizeInvoke.BeginInvoke(Delegate,Object[])
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: ISynchronizeInvoke.EndInvoke(IAsyncResult)
  fullName: System.ComponentModel.ISynchronizeInvoke.EndInvoke(IAsyncResult)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: Invoke(Delegate,Object[])
  nameWithType: ISynchronizeInvoke.Invoke(Delegate,Object[])
  fullName: System.ComponentModel.ISynchronizeInvoke.Invoke(Delegate,Object[])
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
  fullName: System.ComponentModel.ISynchronizeInvoke.InvokeRequired
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ISynchronizeInvoke.BeginInvoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: BeginInvoke
  nameWithType: ISynchronizeInvoke.BeginInvoke
- uid: System.ComponentModel.ISynchronizeInvoke.EndInvoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: EndInvoke
  nameWithType: ISynchronizeInvoke.EndInvoke
- uid: System.ComponentModel.ISynchronizeInvoke.Invoke*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: Invoke
  nameWithType: ISynchronizeInvoke.Invoke
- uid: System.ComponentModel.ISynchronizeInvoke.InvokeRequired*
  parent: System.ComponentModel.ISynchronizeInvoke
  isExternal: false
  name: InvokeRequired
  nameWithType: ISynchronizeInvoke.InvokeRequired
