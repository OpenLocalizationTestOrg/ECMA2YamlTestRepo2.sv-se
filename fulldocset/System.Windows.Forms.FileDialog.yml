### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.FileDialog
  id: FileDialog
  children:
  - System.Windows.Forms.FileDialog.AddExtension
  - System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  - System.Windows.Forms.FileDialog.CheckFileExists
  - System.Windows.Forms.FileDialog.CheckPathExists
  - System.Windows.Forms.FileDialog.CustomPlaces
  - System.Windows.Forms.FileDialog.DefaultExt
  - System.Windows.Forms.FileDialog.DereferenceLinks
  - System.Windows.Forms.FileDialog.EventFileOk
  - System.Windows.Forms.FileDialog.FileName
  - System.Windows.Forms.FileDialog.FileNames
  - System.Windows.Forms.FileDialog.FileOk
  - System.Windows.Forms.FileDialog.Filter
  - System.Windows.Forms.FileDialog.FilterIndex
  - System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.FileDialog.InitialDirectory
  - System.Windows.Forms.FileDialog.Instance
  - System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.FileDialog.Options
  - System.Windows.Forms.FileDialog.Reset
  - System.Windows.Forms.FileDialog.RestoreDirectory
  - System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  - System.Windows.Forms.FileDialog.ShowHelp
  - System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  - System.Windows.Forms.FileDialog.Title
  - System.Windows.Forms.FileDialog.ToString
  - System.Windows.Forms.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: System.Windows.Forms.FileDialog
  type: Class
  summary: "Visar en dialogruta där användaren kan välja en fil."
  remarks: "FileDialog är en abstrakt klass som innehåller gemensamt beteende för den <xref:System.Windows.Forms.OpenFileDialog>och <xref:System.Windows.Forms.SaveFileDialog>klasser.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog> Det är inte avsedd att användas direkt, men innehåller gemensamt beteende för de två klasserna. Du kan inte skapa en instans av FileDialog. Även om klassen har deklarerats som public, kan inte du ärva från den, eftersom den innehåller interna abstrakta metoder. Använd <xref:System.Windows.Forms.OpenFileDialog>eller <xref:System.Windows.Forms.SaveFileDialog>.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog> för att skapa en dialogruta där du kan markera eller spara en fil       FileDialog är en spärrad dialogruta; Därför när visas, blockeras resten av programmet förrän användaren har valt en fil. När en dialogruta visas spärrade kan inga indata (tangentbordet eller musen klicka) inträffa utom objekt i dialogrutan. Programmet måste döljer och Stäng dialogrutan (vanligtvis som svar på en användaråtgärd) innan indata till det anropande programmet kan uppstå.      > [!CAUTION] > När du använder klasser som härleds från FileDialog, som <xref:System.Windows.Forms.OpenFileDialog>och <xref:System.Windows.Forms.SaveFileDialog>, Undvik att använda stränglitteraler som innehåller absoluta sökvägar.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog> I stället dynamiskt hämta sökväg med hjälp av en eller flera av de metoder som beskrivs i följande tabell.       Om du vill att användarna ska kunna välja en mapp i stället för en fil, använda <xref:System.Windows.Forms.FolderBrowserDialog>.</xref:System.Windows.Forms.FolderBrowserDialog>       Beroende på vilken typ av program, hur data som är associerade med programmet lagras och orsaken till att få åtkomst till filsystemet, finns det många möjliga sätt som du kan skapa en katalogsökväg. I följande tabell visas teknikerna för att dynamiskt skapa sökvägar.      | Sökväg eller programmet kategori | Klassen och medlemmar att använda |   |------------------------------|------------------------------|   | Standard Windows-sökvägar, till exempel programfiler, Mina dokument, skrivbordet och så vidare | Klassen <xref:System.Environment?displayProperty=fullName>är den mest omfattande källan för dessa, antingen via dess statiska metoder, till exempel <xref:System.Environment.SystemDirectory%2A>, eller via metoden <xref:System.Environment.GetFolderPath%2A>med någon av <xref:System.Environment.SpecialFolder>uppräknade värden. |   | Sökvägar som är relaterade till det aktuella programmet | Den <xref:System.Windows.Forms.Application>klass har statiska medlemmar för att hämta vissa sökvägar som <xref:System.Windows.Forms.Application.StartupPath%2A>, <xref:System.Windows.Forms.Application.ExecutablePath%2A>, <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>, och <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.</xref:System.Windows.Forms.Application.CommonAppDataPath%2A> </xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> </xref:System.Windows.Forms.Application.ExecutablePath%2A> </xref:System.Windows.Forms.Application.StartupPath%2A> </xref:System.Windows.Forms.Application> </xref:System.Environment.SpecialFolder> </xref:System.Environment.GetFolderPath%2A> </xref:System.Environment.SystemDirectory%2A> </xref:System.Environment?displayProperty=fullName><br /><br /> Den <xref:System.IO.Path.GetTempPath%2A>metod för den <xref:System.IO.Path?displayProperty=fullName>returnerar sökvägen till den tillfälliga mappen.</xref:System.IO.Path?displayProperty=fullName> </xref:System.IO.Path.GetTempPath%2A><br /><br /> Den <xref:System.IO.Directory.GetCurrentDirectory%2A>metod för den <xref:System.IO.Directory?displayProperty=fullName>klassen returnerar aktuella verkställande programkatalogen.</xref:System.IO.Directory?displayProperty=fullName> </xref:System.IO.Directory.GetCurrentDirectory%2A><br /><br /> Egenskapen <xref:System.IO.DriveInfo.RootDirectory%2A> <xref:System.IO.DriveInfo>-klassen representerar den angivna enheten rotkatalog. |   | Sökvägar som lagras som programinställningar | Åtkomst till motsvarande program inställningsegenskapen av wrapper-klass som härleds från <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.IO.DriveInfo> </xref:System.IO.DriveInfo.RootDirectory%2A> Mer information finns i [programmet inställningar för Windows Forms](~/add/includes/ajax-current-ext-md.md). |   | Registret storage | Vissa program lagra kataloginformation i registret. Klassen <xref:System.Windows.Forms.Application>har <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>och <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>Egenskaper att matcha värdet <xref:Microsoft.Win32.RegistryKey>. |   | ClickOnce-program | För ClickOnce-program kan använda <xref:System.Windows.Forms.Application>klassen medlemmar som <xref:System.Windows.Forms.Application.UserAppDataPath%2A>, som returnerar en pekare till ClickOnce-datakatalog.</xref:System.Windows.Forms.Application.UserAppDataPath%2A> </xref:System.Windows.Forms.Application> </xref:Microsoft.Win32.RegistryKey> </xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> </xref:System.Windows.Forms.Application.CommonAppDataPath%2A> </xref:System.Windows.Forms.Application> Mer information finns i [åtkomst till lokala och fjärranslutna Data i ClickOnce-program](~/add/includes/ajax-current-ext-md.md). |   | Internationella program | För internationella program att hämta den relativa sökvägsdelen från en strängresurs i ditt program med hjälp av <xref:System.Resources.ResourceReader?displayProperty=fullName>klassen.</xref:System.Resources.ResourceReader?displayProperty=fullName> Mer information om globalisering och lokalisering finns i avsnittet [globalisering och lokalisering](~/add/includes/ajax-current-ext-md.md). |       Observera att en fullständig sökväg kan byggas upp med hjälp av en eller flera av teknikerna som beskrivs. Till exempel den <xref:System.Environment.GetFolderPath%2A>metoden kan användas för att hämta sökvägen till mappen Mina dokument och sedan programinställning kan användas för att lägga till en del av relativa underkatalog.</xref:System.Environment.GetFolderPath%2A>       Den <xref:System.IO.Path?displayProperty=fullName>klassen innehåller statiska medlemmarna till att manipulera absoluta och relativa sökvägsträngar, medan den <xref:System.IO.File?displayProperty=fullName>och <xref:System.IO.Directory?displayProperty=fullName>klasser har statiska medlemmar som faktiskt manipulera filer och kataloger.</xref:System.IO.Directory?displayProperty=fullName> </xref:System.IO.File?displayProperty=fullName> </xref:System.IO.Path?displayProperty=fullName>      > [!IMPORTANT] > Om användare av ditt program ändrar mappen i FileDialog och den aktuella arbetskatalogen för tillämpningsprogrammet anges till den plats som anges i FileDialog. Om du vill förhindra detta genom att ange den <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A>egenskapen `true`.</xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of FileDialog and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the dialog box and return the <xref:System.Windows.Forms.DialogResult>. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/t-system.windows.forms.f_8_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/t-system.windows.forms.f_8_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.f_8_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("FileOk")]

      [System.ComponentModel.DefaultProperty("FileName")]

      public abstract class FileDialog : System.Windows.Forms.CommonDialog
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.CommonDialog
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.CommonDialog.HelpRequest
  - System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)
  - System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.CommonDialog.ShowDialog
  - System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.CommonDialog.Tag
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.AddExtension
  id: AddExtension
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: System.Windows.Forms.FileDialog.AddExtension
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om dialogrutan lägger automatiskt till ett tillägg till ett filnamn om användaren utelämnar tillägget."
  remarks: "Tillägget till ett filnamn beror på det markerade filen filtret och värdet för den <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>egenskapen.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>       Om den <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>egenskapen är `true`, dialogrutan lägger till tillägget första från filfilter som matchar en befintlig fil.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> Om inga filer som matchar filfiltret dialogrutan lägger till tillägget som anges i den <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>egenskapen.</xref:System.Windows.Forms.FileDialog.DefaultExt%2A>       Om den <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>egenskapen är `false`, dialogrutan lägger till det första giltiga filnamnstillägget från filfiltret.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> Om filfiltret innehåller ingen giltig filnamnstillägg, dialogrutan lägger till tillägget som anges i den <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>egenskapen.</xref:System.Windows.Forms.FileDialog.DefaultExt%2A>"
  syntax:
    content: public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dialogrutan lägger till ett tillägg till ett filnamn om användaren utelämnar tillägget; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  id: AutoUpgradeEnabled
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
  fullName: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om detta <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> instans bör automatiskt uppgradera utseendet och beteendet när det körs på [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)]."
  remarks: "Om den här egenskapen är `false`, <xref:System.Windows.Forms.FileDialog>klassen har en [!INCLUDE[winxp](~/add/includes/winxp-md.md)]-style utseende och beteende på [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)].</xref:System.Windows.Forms.FileDialog>       På [!INCLUDE[winxp](~/add/includes/winxp-md.md)], den här egenskapen inte har någon effekt."
  syntax:
    content: public bool AutoUpgradeEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> instans bör automatiskt uppgradera utseendet och beteendet när du kör [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)], annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.AutoUpgradeEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: System.Windows.Forms.FileDialog.CheckFileExists
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om dialogrutan visar en varning om användaren anger ett namn som inte finns."
  remarks: "Standardvärdet är `true` för en arv <xref:System.Windows.Forms.OpenFileDialog>och `false` för arv <xref:System.Windows.Forms.SaveFileDialog>.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog>"
  syntax:
    content: public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dialogrutan visar en varning om användaren anger ett namn som inte finns; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: System.Windows.Forms.FileDialog.CheckPathExists
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om dialogrutan visar en varning om användaren anger en sökväg som inte finns."
  syntax:
    content: public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dialogrutan visas en varning när användaren anger en sökväg som inte finns; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.CheckPathExists*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: System.Windows.Forms.FileDialog.CustomPlaces
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar samlingen anpassade platser för den här <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> instans."
  remarks: "På [!INCLUDE[winxp](~/add/includes/winxp-md.md)], den här egenskapen inte har någon effekt."
  example:
  - "The following code example demonstrates how to use the CustomPlaces collection. To run this example, paste the following code into a Windows Form and call `InitializeDialogAndButton` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.FileDialogCommonPlaces#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_53_1.vb)]\n [!code-cs[System.Windows.Forms.FileDialogCommonPlaces#1](~/add/codesnippet/csharp/p-system.windows.forms.f_53_1.cs)]"
  syntax:
    content: public System.Windows.Forms.FileDialogCustomPlacesCollection CustomPlaces { get; }
    return:
      type: System.Windows.Forms.FileDialogCustomPlacesCollection
      description: "Anpassat placerar samlingen för den här <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> instans."
  overload: System.Windows.Forms.FileDialog.CustomPlaces*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.DefaultExt
  id: DefaultExt
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: System.Windows.Forms.FileDialog.DefaultExt
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger standardfiltillägget."
  remarks: "När användaren för programmet anger ett filnamn utan ett tillägg i <xref:System.Windows.Forms.FileDialog>lägger till tillägget i filnamnet.</xref:System.Windows.Forms.FileDialog> Det tillägg som används beror på <xref:System.Windows.Forms.FileDialog.Filter%2A>och DefaultExt egenskaper.</xref:System.Windows.Forms.FileDialog.Filter%2A> Om ett filter har valts i den <xref:System.Windows.Forms.FileDialog>och filtret anger ett tillägg och sedan används för det här tillägget.</xref:System.Windows.Forms.FileDialog> Om filtret har valt använder jokertecken i stället för filnamnstillägget, används det tillägg som anges i egenskapen DefaultExt."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=fullName> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=fullName> methods with streams. It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A>, DefaultExt, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \n  \n This is a complete example that is ready to run when you copy it to your project.  \n  \n [!code-cs[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/csharp/p-system.windows.forms.f_16_1.cs)]\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_16_1.vb)]\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/cpp/p-system.windows.forms.f_16_1.cpp)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: "Standardfiltillägget. Den returnerade strängen innehåller inte perioden. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.DefaultExt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: System.Windows.Forms.FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om dialogrutan returnerar platsen för den fil som refereras av genvägen eller om den returnerar plats för genvägen (lnk)."
  syntax:
    content: public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dialogrutan returnerar platsen för den fil som refereras av genvägen. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.DereferenceLinks*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.EventFileOk
  id: EventFileOk
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: EventFileOk
  nameWithType: FileDialog.EventFileOk
  fullName: System.Windows.Forms.FileDialog.EventFileOk
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Äger den <xref href=&quot;System.Windows.Forms.FileDialog.FileOk&quot;> </xref> händelse."
  syntax:
    content: protected static readonly object EventFileOk;
    return:
      type: System.Object
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileName
  id: FileName
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: System.Windows.Forms.FileDialog.FileName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger en sträng som innehåller filnamnet som valts i dialogrutan."
  remarks: "Filnamnet innehåller både sökvägen och tillägget. Om inga filer har markerats kan den här metoden returnerar en tom sträng (&quot;&quot;).       När används från den <xref:System.Windows.Forms.SaveFileDialog>klassen denna egenskap representerar filen sparas, när används från den <xref:System.Windows.Forms.OpenFileDialog>klass som representerar filen som öppnas.</xref:System.Windows.Forms.OpenFileDialog> </xref:System.Windows.Forms.SaveFileDialog>       Den här egenskapen kan bara vara namnet på en markerad fil. Om du vill returnera en matris som innehåller namnen på alla markerade filer i en dialogruta med flera val Använd <xref:System.Windows.Forms.FileDialog.FileNames%2A>.</xref:System.Windows.Forms.FileDialog.FileNames%2A>"
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=fullName> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=fullName> methods with streams. It also demonstrates using the FileName, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \n  \n This is a complete example that is ready to run when you copy it to your project.  \n  \n [!code-cs[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/csharp/p-system.windows.forms.f_44_1.cs)]\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_44_1.vb)]\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/cpp/p-system.windows.forms.f_44_1.cpp)]"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "Filnamnet som valts i dialogrutan. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileNames
  id: FileNames
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: System.Windows.Forms.FileDialog.FileNames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar filnamnen för alla markerade filer i dialogrutan."
  remarks: "Filnamnet innehåller både sökvägen och tillägget. Om inga filer har valts i den här metoden returnerar en tom matris."
  example:
  - "The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form. It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true. This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.  \n  \n [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/add/codesnippet/visualbasic/TestOpenFileDialogMultiSelectVB/Form1.vb#1)]\n [!code-cs[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/add/codesnippet/csharp/TestOpenFileDialogMultiSelect/Form1.cs#1)]"
  syntax:
    content: public string[] FileNames { get; }
    return:
      type: System.String[]
      description: "En matris av typen <xref:System.String>, som innehåller filnamnen för alla markerade filer i dialogrutan.</xref:System.String>"
  overload: System.Windows.Forms.FileDialog.FileNames*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileOk
  id: FileOk
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: System.Windows.Forms.FileDialog.FileOk
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inträffar när användaren klickar på den **öppna** eller **spara** i en dialogruta för filen."
  remarks: "Information om hur du hanterar händelser finns [hantering och höja händelser](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property, handling the FileOk event and using the <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method. When the example runs, a user can select graphics files from an <xref:System.Windows.Forms.OpenFileDialog> object. The selected files are displayed in the form. The <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method forces a repaint of the form for each graphics file opened. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, and a <xref:System.Windows.Forms.Button> named `fileButton`. Call the `InitializePictureBox` and `InitializeOpenFileDialog` methods from the form's constructor or `Load` method. When the example is running, display the dialog box by clicking the button.  \n  \n [!code-cs[System.Windows.Forms.FileDialog#1](~/add/codesnippet/csharp/e-system.windows.forms.f_1_1.cs)]\n [!code-cpp[System.Windows.Forms.FileDialog#1](~/add/codesnippet/cpp/e-system.windows.forms.f_1_1.cpp)]\n [!code-vb[System.Windows.Forms.FileDialog#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_1_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Filter
  id: Filter
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: System.Windows.Forms.FileDialog.Filter
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger aktuellt filen namnet Filtersträngen som avgör vilka alternativ som visas i &quot;Spara som&quot; eller &quot;Filer av typen&quot; rutan i dialogrutan."
  remarks: "För varje filtreringsalternativ Filtersträngen innehåller en beskrivning av filtret, följt av lodrätt streck (|) och filtermönstret. Strängarna för olika filteralternativ separeras av vertikalstreck.       Följande är ett exempel på en Filtersträng: `Text files (*.txt)|*.txt|All files (*.*)|*.*` du kan lägga till flera filtrera mönster till ett filter genom att avgränsa filtyperna med semikolon, till exempel: `Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*` används den <xref:System.Windows.Forms.FileDialog.FilterIndex%2A>egenskapen för att ange vilka filtreringsalternativ visas första för användaren.</xref:System.Windows.Forms.FileDialog.FilterIndex%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the Filter and <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> properties to provide a list of filters for the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_54_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_54_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_54_1.vb)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Filen filtreringsalternativ som finns tillgängliga i dialogrutan."
  overload: System.Windows.Forms.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Filter</code>formatet är ogiltigt."
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FilterIndex
  id: FilterIndex
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: System.Windows.Forms.FileDialog.FilterIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger index för filtret är markerad i dialogrutan."
  remarks: "Använd egenskapen FilterIndex att ange vilka filtreringsalternativ visas först till användaren. Du kan också använda värdet för FilterIndex efter visar dialogrutan fil att utföra särskilda åtgärder beroende på de filter som är valt.      > [!NOTE] > Indexvärdet för första filterpost är 1."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.FileDialog.Filter%2A> and FilterIndex properties to provide a list of filters for the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_0_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_0_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_0_1.vb)]"
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: "Ett värde som innehåller indexet för filtret är markerad i dialogrutan. Standardvärdet är 1."
  overload: System.Windows.Forms.FileDialog.FilterIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Definierar gemensamma dialogrutan rutan hook proceduren som åsidosätts om du vill lägga till specifika funktioner i dialogrutan."
  remarks: "Hook-procedur används att ansluta eller infoga andra rutiner i en rutin eller ett program för felsökning eller utöka funktioner.       Som standard Datacenter hook-procedur dialogrutan på skärmen som svar på ett WM_INITDIALOG-meddelande."
  syntax:
    content: protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: "Referensen till rutan dialogruta."
    - id: msg
      type: System.Int32
      description: "Det meddelande som tagits emot av dialogrutan."
    - id: wparam
      type: System.IntPtr
      description: "Ytterligare information om meddelandet."
    - id: lparam
      type: System.IntPtr
      description: "Ytterligare information om meddelandet."
    return:
      type: System.IntPtr
      description: "Returnerar noll om standard dialogrutan rutan proceduren bearbetar meddelandet. Returnerar ett värde som inte är noll om standard dialogrutan rutan proceduren ignorerar meddelandet."
  overload: System.Windows.Forms.FileDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: System.Windows.Forms.FileDialog.InitialDirectory
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger den inledande katalogen visas i dialogrutan."
  remarks: "Egenskapen InitialDirectory anges vanligtvis på något av följande källor:-en sökväg som tidigare användes i programmet kanske sparade från den senaste åtgärden katalog eller fil.      -En sökväg läsa från en beständig källa, till exempel en tillämpningsinställning en <xref:Microsoft.Win32.Registry>eller en strängresurs i programmet.</xref:Microsoft.Win32.Registry>      -Standard Windows system- och sökvägar, till exempel programfiler, Mina dokument, MyMusic och så vidare (som du kan hämta med hjälp av den <xref:System.Environment.GetFolderPath%2A>metoden)-en sökväg som är relaterade till det aktuella programmet, till exempel dess startkatalogen (som du kan hämta med hjälp av egenskaper på den <xref:System.Windows.Forms.Application>objekt).</xref:System.Windows.Forms.Application> </xref:System.Environment.GetFolderPath%2A>       Mer information om hur du skapar dynamiska sökvägar finns på <xref:System.Windows.Forms.FileDialog>Översikt över klassen.</xref:System.Windows.Forms.FileDialog>       På [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)], om InitialDirectory är ett fullständigt namn i stället för bara en katalogsökväg startkatalog blir som standard till sökvägen till programmet eller till den katalog där användaren senast valt en fil."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the InitialDirectory property to set what the initial directory is when the dialog box is displayed to the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_30_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_30_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_30_1.vb)]"
  syntax:
    content: public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: "Den inledande katalogen visas dialogrutan. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.InitialDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Instance
  id: Instance
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Instance
  nameWithType: FileDialog.Instance
  fullName: System.Windows.Forms.FileDialog.Instance
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar instans Win32-referensen för programmet."
  syntax:
    content: protected virtual IntPtr Instance { get; }
    return:
      type: System.IntPtr
      description: "Ett Win32 instans handtag för programmet."
  overload: System.Windows.Forms.FileDialog.Instance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: System.Windows.Forms.FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Genererar den <xref href=&quot;System.Windows.Forms.FileDialog.FileOk&quot;> </xref> händelse."
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "En <xref:System.ComponentModel.CancelEventArgs>som innehåller informationen om händelsen.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.FileDialog.OnFileOk*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Options
  id: Options
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: System.Windows.Forms.FileDialog.Options
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar värden för att initiera den <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref>."
  remarks: "Egenskapen alternativ motsvarar de flaggor som används för att initiera en dialogruta med hjälp av Win32. Använda egenskaperna för den <xref:System.Windows.Forms.FileDialog>klassen för att hämta och ange önskade alternativ.</xref:System.Windows.Forms.FileDialog>"
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: "En binär kombination av interna värdena som initierar den <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Reset
  id: Reset
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: System.Windows.Forms.FileDialog.Reset()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Återställer alla egenskaper till sina standardvärden."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Windows.Forms.FileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: System.Windows.Forms.FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om dialogrutan återställer katalogen till den tidigare valda mappen före stängning."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the RestoreDirectory property to ensure that the previously selected directory is restored when the dialog box is closed. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_5_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_5_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_5_1.vb)]"
  syntax:
    content: public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dialogrutan återställer den aktuella katalogen till den tidigare valda katalogen om användaren ändra katalogen samtidigt som du söker efter filer. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.RestoreDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: System.Windows.Forms.FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Anger en gemensam dialogruta."
  remarks: "Den här metoden är en implementering av <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>, och anropas när användaren av en fildialogruta anropar <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>.</xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> </xref:System.Windows.Forms.CommonDialog.RunDialog%2A>       De härledda klasserna <xref:System.Windows.Forms.OpenFileDialog>och <xref:System.Windows.Forms.SaveFileDialog>ett ogiltigt filnamn <xref:System.Exception>kan aktiveras.</xref:System.Exception> </xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog>"
  syntax:
    content: protected override bool RunDialog (IntPtr hWndOwner);
    parameters:
    - id: hWndOwner
      type: System.IntPtr
      description: "Ett värde som representerar fönsterreferensen i fönstret för dialogrutan vanliga ägare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om filen kunde öppnas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ShowHelp
  id: ShowHelp
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
  fullName: System.Windows.Forms.FileDialog.ShowHelp
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om den **hjälp** knappen ska visas i dialogrutan."
  remarks: "En <xref:System.Windows.Forms.Control.HelpRequested>händelsen inträffar när användaren klickar på den **hjälp** knappen.</xref:System.Windows.Forms.Control.HelpRequested>"
  syntax:
    content: public bool ShowHelp { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dialogrutan innehåller en hjälpknapp. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.ShowHelp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  id: SupportMultiDottedExtensions
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
  fullName: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger om dialogrutan stöder visning och sparar filer som har flera filnamnstillägg."
  remarks: "Ibland användare måste öppna och spara filer som använder flera filnamnstillägg. Till exempel programmet manifestfiler används av den [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] distributionsslut teknik i komplexa filnamnstillägget &quot;. exe.manifest&quot;. Den här egenskapen `true` kan du ange den <xref:System.Windows.Forms.FileDialog.Filter%2A>egenskapen till ett tillägg för flera punkter.</xref:System.Windows.Forms.FileDialog.Filter%2A>       Om SupportMultiDottedExtensions `false`, och du tilldela ett filtilläg med flera punkter tillägg till <xref:System.Windows.Forms.FileDialog.Filter%2A>, härledda kontroller som <xref:System.Windows.Forms.SaveFileDialog>ska bara använda det senaste tillägget i strängen.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.FileDialog.Filter%2A> Till exempel &quot;manifest&quot; används i stället för &quot;. exe.manifest&quot;."
  example:
  - "The following code example saves files with the extension \".data.txt\". This code example requires that your application host a <xref:System.Windows.Forms.SaveFileDialog> named `saveFileDialog1` and a <xref:System.Windows.Forms.Button> named `button1`.  \n  \n [!code-cs[SupportMultiDottedExtensions#1](~/add/codesnippet/csharp/TestSaveFileDialog/Form1.cs#1)]\n [!code-vb[SupportMultiDottedExtensions#1](~/add/codesnippet/visualbasic/TestSaveFileDialogVB/Form1.vb#1)]"
  syntax:
    content: public bool SupportMultiDottedExtensions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dialogrutan stöder flera filnamnstillägg. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Title
  id: Title
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: System.Windows.Forms.FileDialog.Title
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger filnamn för rutan i dialogrutan."
  remarks: "Strängen är placerad i namnlisten i dialogrutan. Om rubriken är en tom sträng, används en Standardrubrik som är &quot;Spara som&quot; eller &quot;Öppen&quot;."
  example:
  - "The following code example demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the Title and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A?displayProperty=fullName> property to true. To run this example, paste the following code in a form containing an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1` and a <xref:System.Windows.Forms.Button> named `fileButton`. Call the `InitializeOpenFileDialog` method in the form's constructor or `Load` method. The example also requires that the `Click` event of the `Button` control is connected to the event handler defined in the example.  \n  \n [!code-cs[System.Windows.Forms.FileDialog#6](~/add/codesnippet/csharp/p-system.windows.forms.f_25_1.cs)]\n [!code-cpp[System.Windows.Forms.FileDialog#6](~/add/codesnippet/cpp/p-system.windows.forms.f_25_1.cpp)]\n [!code-vb[System.Windows.Forms.FileDialog#6](~/add/codesnippet/visualbasic/p-system.windows.forms.f_25_1.vb)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "Rubrik för filen dialogrutan rutan. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ToString
  id: ToString
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: System.Windows.Forms.FileDialog.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Innehåller en strängversion av det här objektet."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En strängversion av det här objektet."
  overload: System.Windows.Forms.FileDialog.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ValidateNames
  id: ValidateNames
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: System.Windows.Forms.FileDialog.ValidateNames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om dialogrutan accepterar endast giltigt Win32 filnamn."
  remarks: "Om redigeringskontrollen innehåller något men lagringsutrymmen när användaren klickar på **OK**, dialogrutan returnerar filnamnet, om den är giltig eller inte. Inget standardtillägg läggs till texten."
  syntax:
    content: public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dialogrutan accepterar endast giltigt Win32 filnamn. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.FileDialog.ValidateNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.CommonDialog
  isExternal: false
  name: System.Windows.Forms.CommonDialog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.FileDialog.AddExtension
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: System.Windows.Forms.FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
  fullName: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
- uid: System.Windows.Forms.FileDialog.CheckFileExists
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: System.Windows.Forms.FileDialog.CheckFileExists
- uid: System.Windows.Forms.FileDialog.CheckPathExists
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: System.Windows.Forms.FileDialog.CheckPathExists
- uid: System.Windows.Forms.FileDialog.CustomPlaces
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: System.Windows.Forms.FileDialog.CustomPlaces
- uid: System.Windows.Forms.FileDialogCustomPlacesCollection
  parent: System.Windows.Forms
  isExternal: false
  name: FileDialogCustomPlacesCollection
  nameWithType: FileDialogCustomPlacesCollection
  fullName: System.Windows.Forms.FileDialogCustomPlacesCollection
- uid: System.Windows.Forms.FileDialog.DefaultExt
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: System.Windows.Forms.FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.FileDialog.DereferenceLinks
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: System.Windows.Forms.FileDialog.DereferenceLinks
- uid: System.Windows.Forms.FileDialog.EventFileOk
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: EventFileOk
  nameWithType: FileDialog.EventFileOk
  fullName: System.Windows.Forms.FileDialog.EventFileOk
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.FileDialog.FileName
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: System.Windows.Forms.FileDialog.FileName
- uid: System.Windows.Forms.FileDialog.FileNames
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: System.Windows.Forms.FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.FileDialog.FileOk
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: System.Windows.Forms.FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: System.Windows.Forms.FileDialog.Filter
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: System.Windows.Forms.FileDialog.Filter
- uid: System.Windows.Forms.FileDialog.FilterIndex
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: System.Windows.Forms.FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.FileDialog.InitialDirectory
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: System.Windows.Forms.FileDialog.InitialDirectory
- uid: System.Windows.Forms.FileDialog.Instance
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Instance
  nameWithType: FileDialog.Instance
  fullName: System.Windows.Forms.FileDialog.Instance
- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: System.Windows.Forms.FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.FileDialog.Options
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: System.Windows.Forms.FileDialog.Options
- uid: System.Windows.Forms.FileDialog.Reset
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: System.Windows.Forms.FileDialog.Reset()
- uid: System.Windows.Forms.FileDialog.RestoreDirectory
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: System.Windows.Forms.FileDialog.RestoreDirectory
- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: System.Windows.Forms.FileDialog.RunDialog(IntPtr)
- uid: System.Windows.Forms.FileDialog.ShowHelp
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
  fullName: System.Windows.Forms.FileDialog.ShowHelp
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
  fullName: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
- uid: System.Windows.Forms.FileDialog.Title
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: System.Windows.Forms.FileDialog.Title
- uid: System.Windows.Forms.FileDialog.ToString
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: System.Windows.Forms.FileDialog.ToString()
- uid: System.Windows.Forms.FileDialog.ValidateNames
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: System.Windows.Forms.FileDialog.ValidateNames
- uid: System.Windows.Forms.FileDialog.AddExtension*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
- uid: System.Windows.Forms.FileDialog.CheckFileExists*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
- uid: System.Windows.Forms.FileDialog.CheckPathExists*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
- uid: System.Windows.Forms.FileDialog.CustomPlaces*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
- uid: System.Windows.Forms.FileDialog.DefaultExt*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
- uid: System.Windows.Forms.FileDialog.DereferenceLinks*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
- uid: System.Windows.Forms.FileDialog.FileName*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
- uid: System.Windows.Forms.FileDialog.FileNames*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
- uid: System.Windows.Forms.FileDialog.Filter*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
- uid: System.Windows.Forms.FileDialog.FilterIndex*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
- uid: System.Windows.Forms.FileDialog.HookProc*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
- uid: System.Windows.Forms.FileDialog.InitialDirectory*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
- uid: System.Windows.Forms.FileDialog.Instance*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Instance
  nameWithType: FileDialog.Instance
- uid: System.Windows.Forms.FileDialog.OnFileOk*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
- uid: System.Windows.Forms.FileDialog.Options*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
- uid: System.Windows.Forms.FileDialog.Reset*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
- uid: System.Windows.Forms.FileDialog.RestoreDirectory*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
- uid: System.Windows.Forms.FileDialog.RunDialog*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
- uid: System.Windows.Forms.FileDialog.ShowHelp*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
- uid: System.Windows.Forms.FileDialog.Title*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
- uid: System.Windows.Forms.FileDialog.ToString*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
- uid: System.Windows.Forms.FileDialog.ValidateNames*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
