### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectorySearcher
  id: DirectorySearcher
  children:
  - System.DirectoryServices.DirectorySearcher.#ctor
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.Asynchronous
  - System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  - System.DirectoryServices.DirectorySearcher.CacheResults
  - System.DirectoryServices.DirectorySearcher.ClientTimeout
  - System.DirectoryServices.DirectorySearcher.DerefAlias
  - System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  - System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  - System.DirectoryServices.DirectorySearcher.ExtendedDN
  - System.DirectoryServices.DirectorySearcher.Filter
  - System.DirectoryServices.DirectorySearcher.FindAll
  - System.DirectoryServices.DirectorySearcher.FindOne
  - System.DirectoryServices.DirectorySearcher.PageSize
  - System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  - System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  - System.DirectoryServices.DirectorySearcher.ReferralChasing
  - System.DirectoryServices.DirectorySearcher.SearchRoot
  - System.DirectoryServices.DirectorySearcher.SearchScope
  - System.DirectoryServices.DirectorySearcher.SecurityMasks
  - System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  - System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  - System.DirectoryServices.DirectorySearcher.SizeLimit
  - System.DirectoryServices.DirectorySearcher.Sort
  - System.DirectoryServices.DirectorySearcher.Tombstone
  - System.DirectoryServices.DirectorySearcher.VirtualListView
  langs:
  - csharp
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
  type: Class
  summary: "Utför frågor mot Active Directory Domain Services."
  remarks: "Använd ett DirectorySearcher objekt att söka och köra frågor mot en Active Directory Domain Services-hierarki använder Lightweight Directory Access Protocol (LDAP). LDAP är den enda tillhandahålls av systemet Service Interfaces ADSI (Active Directory) providern som har stöd för sökning i katalogen. En administratör kan göra, ändra och ta bort objekt som finns i hierarkin. Mer information finns i [med System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).       När du skapar en instans av DirectorySearcher kan ange du rot som du vill hämta och en valfri lista med egenskaper som hämtas. Den <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>egenskapen kan du ange ytterligare egenskaper för att utföra följande uppgifter:-cachelagra sökresultat på den lokala datorn.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> Ange den <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A>egenskapen `true` att lagra kataloginformation på den lokala datorn.</xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> Uppdateringar görs till den här lokala cachen och bekräftats i Active Directory Domain Services bara när den <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>metoden anropas.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>      -Ange hur lång tid att söka, med hjälp av den <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>egenskapen.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>      -Hämta endast attributnamn. Ange den <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>egenskapen `true` att hämta endast namnen på attributen som värden har tilldelats.</xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>      -Utför en växlingsbar sökning. Ange den <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>att ange det maximala antalet objekt som returneras i en växlingsbar sökning.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> Om du inte vill utföra en växlingsbar sökning, ställa in den <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>egenskapen till standardvärdet noll.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>      -Ange det maximala antalet poster som ska returneras med den <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>egenskapen.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> Om du ställer in den <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>egenskapen till standardvärdet noll, fastställa server standardvärdet är 1000 poster.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>      > [!NOTE] > Om det maximala antalet returnerade poster och tidsfrister överskrider de begränsningar som ställs in på servern, serverinställningarna åsidosätta inställningarna för komponenten.       En lista över inledande egenskapsvärden för en instans av klassen DirectorySearcher, finns det <xref:System.DirectoryServices.DirectorySearcher.%23ctor>konstruktor.</xref:System.DirectoryServices.DirectorySearcher.%23ctor>      > [!NOTE] > Förutsätts att du har en förståelse av Active Directory Domain Services innan du använder den här klassen. Mer information finns i <xref:System.DirectoryServices?displayProperty=fullName>Översikt.</xref:System.DirectoryServices?displayProperty=fullName>"
  syntax:
    content: >-
      [System.DirectoryServices.DSDescription("DirectorySearcherDesc")]

      public class DirectorySearcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klass med standardvärden."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för den <xref:System.DirectoryServices.DirectorySearcher>objekt.</xref:System.DirectoryServices.DirectorySearcher>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| En null-referens (`Nothing` i Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *) &quot;|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Ett tomt <xref:System.Collections.Specialized.StringCollection>objekt |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher ();
    parameters: []
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  id: '#ctor(System.DirectoryServices.DirectoryEntry)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klassen med hjälp av angivna rot."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för den <xref:System.DirectoryServices.DirectorySearcher>objekt.</xref:System.DirectoryServices.DirectorySearcher>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *) &quot;|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Ett tomt <xref:System.Collections.Specialized.StringCollection>objekt |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Noden i Active Directory Domain Services-hierarki där sökningen startar. Den <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klass med det angivna sökfiltret."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för den <xref:System.DirectoryServices.DirectorySearcher>objekt.</xref:System.DirectoryServices.DirectorySearcher>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| En null-referens (`Nothing` i Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Ett tomt <xref:System.Collections.Specialized.StringCollection>objekt |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter);
    parameters:
    - id: filter
      type: System.String
      description: "Filter söksträngen Lightweight Directory Access Protocol (LDAP)-format. Den <xref:System.DirectoryServices.DirectorySearcher.Filter*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klass med det angivna rot och Sök sökfiltret."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för den <xref:System.DirectoryServices.DirectorySearcher>objekt.</xref:System.DirectoryServices.DirectorySearcher>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Ett tomt <xref:System.Collections.Specialized.StringCollection>-objekt. |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Noden i Active Directory Domain Services-hierarki där sökningen startar. Den <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Filter söksträngen Lightweight Directory Access Protocol (LDAP)-format. Den <xref:System.DirectoryServices.DirectorySearcher.Filter*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klass med angivna sökfilter och egenskaper som hämtas."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för den <xref:System.DirectoryServices.DirectorySearcher>objekt.</xref:System.DirectoryServices.DirectorySearcher>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| En null-referens (`Nothing` i Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad);
    parameters:
    - id: filter
      type: System.String
      description: "Filter söksträngen Lightweight Directory Access Protocol (LDAP)-format. Den <xref:System.DirectoryServices.DirectorySearcher.Filter*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Uppsättningen egenskaper som hämtas under sökningen. Den <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klass med den angivna rot, sökfilter och egenskaper som hämtas..."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för den <xref:System.DirectoryServices.DirectorySearcher>objekt.</xref:System.DirectoryServices.DirectorySearcher>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Noden i Active Directory Domain Services-hierarki där sökningen startar. Den <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Filter söksträngen Lightweight Directory Access Protocol (LDAP)-format. Den <xref:System.DirectoryServices.DirectorySearcher.Filter*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Uppsättningen egenskaper som hämtas under sökningen. Den <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klass med angivna sökningen filtrera egenskaper för att hämta och sökomfång."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för den <xref:System.DirectoryServices.DirectorySearcher>objekt.</xref:System.DirectoryServices.DirectorySearcher>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| En null-referens (`Nothing` i Visual Basic) |</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: filter
      type: System.String
      description: "Filter söksträngen Lightweight Directory Access Protocol (LDAP)-format. Den <xref:System.DirectoryServices.DirectorySearcher.Filter*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Uppsättningen egenskaper som hämtas under sökningen. Den <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "Omfattningen av sökningen som observeras av servern. Den <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> egenskapen har initierats till det här värdet."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> klass med angivna rot, sökfilter, egenskaper för att hämta och sökomfång."
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Noden i Active Directory Domain Services-hierarki där sökningen startar. Den <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Filter söksträngen Lightweight Directory Access Protocol (LDAP)-format. Den <xref:System.DirectoryServices.DirectorySearcher.Filter*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Uppsättningen egenskaper som hämtas under sökningen. Den <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>egenskapen har initierats till det här värdet.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "Omfattningen av sökningen som observeras av servern. Den <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> egenskapen har initierats till det här värdet."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  id: Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger om sökningen asynkront."
  remarks: "En asynkron sökning kan visa resultat som identifieras vid samtidigt söker efter ytterligare resultat. Detta är användbart för åtgärder som att fylla i listrutorna.       Standardinställningen för den här egenskapen är `false`."
  example:
  - "The following C# example shows how to create an asynchronous search.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n//Set the Asynchronous property to true.  \nsrc.Asynchronous = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Asynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sökningen är asynkron; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> annars."
  overload: System.DirectoryServices.DirectorySearcher.Asynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  id: AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger attribut för unikt namn för att söka i LDAP-visningsnamn. Endast ett attribut kan användas för den här typen av sökningar."
  remarks: "Attributet som den här egenskapen måste vara ett attribut för unikt namn, till exempel medlem eller av. Attributet kan vara ett eller flera värden. Mer information finns i avsnitt adschema &quot;[medlem](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)&quot;och&quot;[hanteras av](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)&quot; i MSDN-biblioteket på [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       Sökningen ska utföras mot de objekt som identifieras av det unika namnet som angetts i attributet av basobjektet. Till exempel om basobjektet är en adschema klass och AttributeScopeQuery är inställd på &quot;medlem&quot;, kommer sedan sökningen att utföras mot alla objekt som är medlemmar i gruppen. Mer information finns i adschema &quot;Grupp&quot; klass i MSDN-biblioteket på [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       När egenskapen AttributeScopeQuery används, <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>egenskapen måste anges till <xref:System.DirectoryServices.SearchScope>.</xref:System.DirectoryServices.SearchScope> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> Om en <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>egenskap är inställd på ett annat värde, ange AttributeScopeQuery egenskapen genereras <xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>       Mer information finns i avsnittet &quot;Utför en attributet Scope-fråga&quot; i MSDN-biblioteket på [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library))."
  example:
  - "The following example shows how to use the AttributeScopeQuery property with the member attribute to get the members of a group. It then prints out the first and last names of the members and their telephone numbers.  \n  \n```c#  \nusing System.DirectoryServices;  \nDirectoryEntry group = new DirectoryEntry(\"LDAP://CN=MyGroup, …\");  \nDirectorySearcher src = new DirectorySearcher(group \"(&(objectClass=user)(objectCategory=Person))\");  \nsrc.AttributeScopedQuery = \"member\";  \nsrc.PropertiesToLoad.Add(\"sn\");  \nsrc.PropertiesToLoad.Add(\"givenName\");  \nsrc.PropertiesToLoad.Add(\"telephoneNumber\");  \nforeach(SearchResult res in src.FindAll())  \n{  \n    Console.WriteLine(\"…\");  \n}  \n```"
  syntax:
    content: public string AttributeScopeQuery { get; set; }
    return:
      type: System.String
      description: "LDAP visningsnamn för attribut för att söka mot eller en tom sträng för utan attributet scope-fråga har angetts."
  overload: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref:System.DirectoryServices.DirectorySearcher.SearchScope*>-egenskapen anges till ett värde annat än <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>.</xref:System.DirectoryServices.DirectorySearcher.SearchScope*>"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  id: CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger om resultatet har cachelagrats på klientdatorn."
  remarks: "Om sökningen returnerar en stor resultatmängd sökningen blir effektivare om den här egenskapen anges till `false` att undvika att överföringen av resultatuppsättningen till klientdatorn.  Om du gör det, men du kommer inte att kunna räkna upp resultat två gånger, eftersom den <xref:System.DirectoryServices.SearchResultCollection>objekt skapas ett nytt uppräknare objekt varje gång den anropas.</xref:System.DirectoryServices.SearchResultCollection>"
  syntax:
    content: public bool CacheResults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om resultatet har cachelagrats på klientdatorn; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.CacheResults*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  id: ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger den maximala tid som klienten väntar på servern att returnera resultat. Om servern inte svarar inom denna tidsperiod sökningen avbryts och inga resultat."
  remarks: "Minsta upplösning på den här egenskapen är en sekund. Delar av sekunder ignoreras.       Om den <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>uppnås innan tidsgränsen uppnås för klienten, returnerar resultaten för servern och klienten slutar vänta.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> Den maximala server tidsgränsen är 120 sekunder."
  syntax:
    content: public TimeSpan ClientTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>struktur som innehåller längsta tid för att klienten ska vänta på servern att returnera resultat.</xref:System.TimeSpan>       Standardvärdet är-1 sekund, vilket innebär att vänta på obestämd tid."
  overload: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  id: DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger hur alias för objekt som finns under en sökning ska lösas."
  remarks: ''
  example:
  - "The following C# example shows how to set the DerefAlias property to <xref:System.DirectoryServices.DereferenceAlias> , so that it dereferences aliases when both searching subordinates and locating base objects.  \n  \n```  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n// Set DerefAlias to Always.  \nsrc.DerefAlias = DerefenceAlias.Always;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }
    return:
      type: System.DirectoryServices.DereferenceAlias
      description: "En <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref> värde som anger beteendet som alias är dereferenced. Standardinställningen för den här egenskapen är <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.DerefAlias*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  id: DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett objekt som representerar directory synkroniseringskontrollen som ska användas med sökningen."
  remarks: "Directory synkroniseringskontroll, vilket vanligtvis kallas DirSync-kontrollen är en LDAP-kontroll som används för att söka efter objekt som har ändrats sedan ett tidigare tillstånd.       Mer information finns i avsnittet &quot;[avsöker för ändringar med hjälp av DirSync-kontrollen](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)&quot; i MSDN-biblioteket på [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }
    return:
      type: System.DirectoryServices.DirectorySynchronization
      description: "Den <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> objekt för sökningen. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Om kontrollen directory synkroniseringen inte ska användas."
  overload: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Släpper de hanterade resurser som används av den <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> objekt och eventuellt versioner ohanterade resurser."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här metoden frigör resurser för både hanterade och ohanterade. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om den Frigör endast resurser som inte hanteras."
  overload: System.DirectoryServices.DirectorySearcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  id: ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger formatet för unika namn."
  remarks: ''
  example:
  - "The following example shows how to return a collection of distinguished names in hexadecimal format.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.ExtendedDN = ExtendedDN.HexString;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }
    return:
      type: System.DirectoryServices.ExtendedDN
      description: "En av de <xref href=&quot;System.DirectoryServices.ExtendedDN&quot;> </xref> värden."
  overload: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Filter
  id: Filter
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger Filtersträngen för Lightweight Directory Access Protocol (LDAP)-format."
  remarks: "The filter uses the following guidelines:  \n  \n1.  The string must be enclosed in parentheses.  \n  \n2.  Expressions can use the relational operators: <, \\<=, =, >=, and >. An example is \"(objectClass=user)\". Another example is \"(lastName>=Davis)\".  \n  \n3.  Compound expressions are formed with the prefix operators & and &#124;. An example is \"(&(objectClass=user)(lastName= Davis))\". Another example is \"(&(objectClass=printer)(&#124;(building=42)(building=43)))\".  \n  \n When the filter contains an attribute of ADS_UTC_TIME type, its value must be of the yyyymmddhhmmssZ format where y, m, d, h, m, and s stand for year, month, day, hour, minute, and second, respectively. The seconds (ss) value is optional. The final letter Z means there is no time differential. In this format, \"10:20:00 A.M. May 13, 1999\" becomes \"19990513102000Z\". Note that Active Directory Domain Services stores date and time as Coordinated Universal Time (Greenwich Mean Time). If you specify a time with no time differential, you are specifying the time in GMT time.  \n  \n If you are not in the Coordinated Universal Time time zone, you can add a differential value to the Coordinated Universal Time (instead of specifying Z) to specify a time according to your time zone. The differential is based on the following: differential = Coordinated Universal Time- Local. To specify a differential, use the following format: yyyymmddhhmmss[+/-]hhmm. For example, \"8:52:58 P.M. March 23, 1999\" New Zealand Standard Time (the differential is 12 hours) is specified as \"19990323205258.0+1200\".  \n  \n For more information about the LDAP search string format, see \"Search Filter Syntax\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Strängen i LDAP-filter formatet som &quot;(objectClass=User)&quot;. Standardvärdet är &quot;(objectClass=*)&quot;, som hämtar alla objekt."
  overload: System.DirectoryServices.DirectorySearcher.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  id: FindAll
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Kör sökningen och returnerar en mängd med poster som hittas."
  remarks: "På grund av begränsningar för implementering av <xref:System.DirectoryServices.SearchResultCollection>klassen inte frigöra alla dess ohanterade resurser när det samlas in som skräp.</xref:System.DirectoryServices.SearchResultCollection> Om du vill förhindra att en minnesläcka, måste du anropa den <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>metoden när den <xref:System.DirectoryServices.SearchResultCollection>objektet inte längre behövs.</xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>"
  syntax:
    content: public System.DirectoryServices.SearchResultCollection FindAll ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResultCollection
      description: "En <xref href=&quot;System.DirectoryServices.SearchResultCollection&quot;> </xref> objekt som innehåller resultatet av sökningen."
  overload: System.DirectoryServices.DirectorySearcher.FindAll*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den angivna <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> är inte en behållare."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Sökning stöds inte av providern som används."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  id: FindOne
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Kör sökningen och returnerar bara den första posten som hittas."
  remarks: "Om mer än en post hittas under sökningen returneras bara den första posten. Om inga poster hittas som matchar sökvillkoren, en null-referens (`Nothing` i Visual Basic) returneras."
  syntax:
    content: public System.DirectoryServices.SearchResult FindOne ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResult
      description: "En <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> objekt som innehåller den första posten som hittas under sökningen."
  overload: System.DirectoryServices.DirectorySearcher.FindOne*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  id: PageSize
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger sidstorleken i en växlingsbar sökning."
  remarks: "När servern har hittat antalet objekt som anges av egenskapen PageSize den sluta söka och returnerar resultaten till klienten. När klienten begär mer data, startas servern om sökningen där den avbröts."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "Maximalt antal objekt som servern kan returnera i en växlingsbar sökning. Standardvärdet är noll, vilket innebär inte gör en växlingsbar sökning."
  overload: System.DirectoryServices.DirectorySearcher.PageSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det nya värdet är mindre än noll."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  id: PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar ett värde som anger listan över egenskaper som hämtas under sökningen."
  remarks: "Om du vill hämta specifika egenskaper, lägga till dem i den här samlingen innan du börjar sökningen. Till exempel `searcher.PropertiesToLoad.Add(&quot;phone&quot;);` egenskapen phone läggs till i listan över egenskaper som hämtas i sökningen.       Egenskapen &quot;ADsPath&quot; hämtas alltid under sökningen. På [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)] och tidigare operativsystem, det konto som utför sökningen måste vara medlem i gruppen Administratörer för att hämta egenskapen ntSecurityDescriptor. Om detta inte är fallet egenskapens värde som returneras för ntSecurityDescriptor blir `null`. Mer information finns i avsnittet &quot;NT--säkerhetsbeskrivning&quot; i MSDN-biblioteket på [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "En <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objekt som innehåller de egenskaper som hämtas under sökningen.       Standardvärdet är en tom <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, som hämtar alla egenskaper."
  overload: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  id: PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger om sökningen hämtar endast namnen på attributen som värden har tilldelats."
  syntax:
    content: public bool PropertyNamesOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sökningen erhåller bara namnen på de attribut som värden har tilldelats; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om sökningen erhåller namn och värden för de begärda attributen. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  id: ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger hur hänvisningar chased."
  remarks: "Om rot-sökningen inte har angetts i namngivningskontext för servern eller om sökresultaten korsar en namngivningskontext (till exempel när du har underordnade domäner och Sök i den överordnade domänen), skickar servern ett meddelande som mottagits till klienten som klienten kan antingen Ignorera eller spårar."
  syntax:
    content: public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }
    return:
      type: System.DirectoryServices.ReferralChasingOption
      description: "En av de <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> värden. Standardvärdet är <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Värdet är inte en av de <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> värden."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  id: SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger noden i Active Directory Domain Services-hierarki där sökningen startar."
  remarks: "Om SearchRoot är en null-referens (`Nothing` i Visual Basic), Sök roten har angetts till roten för domänen som servern använder för tillfället.       Det finns flera sätt att söka i den globala katalogen: – Räkna upp den globala katalogen och välj den första underordnat.      -Ange servernamnet. Funktionen DsGetDcName används för att hitta den globala katalogen.  Mer information om funktionen DsGetDcName finns i avsnittet &quot;DsGetDcName&quot; i MSDN-biblioteket på [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).      -Hämta RootDSE av den globala katalogen och frågar efter &quot;rootNamingContext&quot;.      – Använd den globala katalogen och ange en sökväg som om du använder LDAP. Till exempel &quot;GC: / / OU =..., DC =..., DC =...&quot;.      -Följande C#-kod visar hur du räknar upp den globala katalogen och välj den första underordnat.          ```c#       DirectoryEntry entry = new DirectoryEntry(&quot;GC://forestname&quot;);       IEnumerator ie = entry.Children.GetEnumerator();       ie.MoveNext();       entry = (DirectoryEntry)ie.Current;       DirectorySearcher search = new DirectorySearcher(entry);       ```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "Den <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objekt i Active Directory Domain Services-hierarki där sökningen startar. Standardvärdet är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  overload: System.DirectoryServices.DirectorySearcher.SearchRoot*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  id: SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger sökomfånget som observeras av servern."
  syntax:
    content: public System.DirectoryServices.SearchScope SearchScope { get; set; }
    return:
      type: System.DirectoryServices.SearchScope
      description: "En av de <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> värden. Standardvärdet är <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.SearchScope*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Värdet är inte en av de <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> värden."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  id: SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger vilken säkerhetsinformation åtkomst för de angivna attributen ska returneras av sökningen."
  remarks: ''
  example:
  - "```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }
    return:
      type: System.DirectoryServices.SecurityMasks
      description: "En av de <xref href=&quot;System.DirectoryServices.SecurityMasks&quot;> </xref> värden."
  overload: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  id: ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger längsta tid som servern ska söka för en enskild sida med resultat. Detta är inte samma som tidsgränsen för sökningen."
  remarks: "Minsta upplösning på den här egenskapen är en sekund. Delar av sekunder ignoreras.       När tidsgränsen har uppnåtts servern avbryts sökningen och returnerar resultatet som har ackumulerats upp till den punkten, tillsammans med en cookie som innehåller information om var du vill återuppta söker.      > [!NOTE] > Denna egenskap gäller endast för sökningar där <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>har angetts till ett värde som inte är standardvärdet&1;.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>"
  syntax:
    content: public TimeSpan ServerPageTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>som representerar mängden tid som servern ska söka efter en sida med resultat.</xref:System.TimeSpan>       Standardvärdet är-1 sekunder, vilket innebär att söka på obestämd tid."
  overload: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  id: ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "ServerTimeLimit egenskapen hämtar eller anger ett värde som anger längsta tid att servern ska söka igenom. Om tidsgränsen uppnås returneras bara poster som finns upp till som pekar."
  remarks: "Minsta upplösning på den här egenskapen är en sekund. Delar av sekunder ignoreras.       Till skillnad från den <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A>egenskapen egenskapen ServerTimeLimit anger den totala mängden tid som servern ska ägna en sökning.</xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> När tidsgränsen har uppnåtts servern avbryts sökningen och returnerar resultatet som har ackumulerats hittills.       Värdet-1 sekund vill använda standardvärdet fastställa server ServerTimeLimit.      > [!NOTE] > Om du ställer in ServerTimeLimit till ett värde som är större än standardvärdet fastställa server 120 sekunder används standard-fastställa server. Du kan inte fortsätta en sökning från där den avbröts när servern tidsgränsen har nåtts."
  syntax:
    content: public TimeSpan ServerTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>som representerar tidsperiod som servern ska söka.</xref:System.TimeSpan>       Standardvärdet är-1 sekunder, vilket innebär att använda standardvärdet fastställa server 120 sekunder."
  overload: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  id: SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger det maximala antalet objekt som returnerar servern i en sökning."
  remarks: "Server-slutar söker efter gränsen har nåtts och returnerar resultaten ackumulerade hittills.      > [!NOTE] > Om du ställer in SizeLimit till ett värde som är större än standardvärdet fastställa server 1000 poster används standard-fastställa server."
  syntax:
    content: public int SizeLimit { get; set; }
    return:
      type: System.Int32
      description: "Maximalt antal objekt som returnerar servern i en sökning. Standardvärdet är noll, vilket betyder att fastställa server Standardstorleksgränsen på 1000 poster."
  overload: System.DirectoryServices.DirectorySearcher.SizeLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det nya värdet är mindre än noll."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Sort
  id: Sort
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger egenskapen som resultatet ska sorteras."
  syntax:
    content: public System.DirectoryServices.SortOption Sort { get; set; }
    return:
      type: System.DirectoryServices.SortOption
      description: "En <xref href=&quot;System.DirectoryServices.SortOption&quot;> </xref> objekt som anger egenskapen och riktning sökresultaten ska sorteras på."
  overload: System.DirectoryServices.DirectorySearcher.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapsvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (Nothing i Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  id: Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger om sökningen ska även återställa borttagna objekt som matchar sökfilter."
  remarks: ''
  example:
  - "The following C# example shows how to set the Tombstone property to `true`.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Create a DirectorySearcher object.  \nDirectorySearcher src = new DirectorySearcher(\"(isDeleted=true)\");  \n//Set the Tombstone property to true.  \nsrc.Tombstone = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Tombstone { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om borttagna objekt som ska inkluderas i sökningen. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> annars. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.Tombstone*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  id: VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Hämtar eller anger ett värde som anger en lista över virtuella Visningsalternativ för sökningen."
  syntax:
    content: public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }
    return:
      type: System.DirectoryServices.DirectoryVirtualListView
      description: "En <xref href=&quot;System.DirectoryServices.DirectoryVirtualListView&quot;> </xref> objekt som innehåller en lista över virtuella visa sökinformation. Standardvärdet för den här egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vilket innebär inte använder alternativet lista över virtuella vyn Sök."
  overload: System.DirectoryServices.DirectorySearcher.VirtualListView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
- uid: System.DirectoryServices.SearchScope
  parent: System.DirectoryServices
  isExternal: false
  name: SearchScope
  nameWithType: SearchScope
  fullName: System.DirectoryServices.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DereferenceAlias
  parent: System.DirectoryServices
  isExternal: false
  name: DereferenceAlias
  nameWithType: DereferenceAlias
  fullName: System.DirectoryServices.DereferenceAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.ExtendedDN
  parent: System.DirectoryServices
  isExternal: false
  name: ExtendedDN
  nameWithType: ExtendedDN
  fullName: System.DirectoryServices.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
- uid: System.DirectoryServices.SearchResultCollection
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResultCollection
  nameWithType: SearchResultCollection
  fullName: System.DirectoryServices.SearchResultCollection
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
- uid: System.DirectoryServices.SearchResult
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResult
  nameWithType: SearchResult
  fullName: System.DirectoryServices.SearchResult
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.ReferralChasingOption
  parent: System.DirectoryServices
  isExternal: false
  name: ReferralChasingOption
  nameWithType: ReferralChasingOption
  fullName: System.DirectoryServices.ReferralChasingOption
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.SecurityMasks
  parent: System.DirectoryServices
  isExternal: false
  name: SecurityMasks
  nameWithType: SecurityMasks
  fullName: System.DirectoryServices.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
- uid: System.DirectoryServices.SortOption
  parent: System.DirectoryServices
  isExternal: false
  name: SortOption
  nameWithType: SortOption
  fullName: System.DirectoryServices.SortOption
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
- uid: System.DirectoryServices.DirectoryVirtualListView
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryVirtualListView
  nameWithType: DirectoryVirtualListView
  fullName: System.DirectoryServices.DirectoryVirtualListView
- uid: System.DirectoryServices.DirectorySearcher.#ctor*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher.DirectorySearcher
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose
  nameWithType: DirectorySearcher.Dispose
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll
  nameWithType: DirectorySearcher.FindAll
- uid: System.DirectoryServices.DirectorySearcher.FindOne*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne
  nameWithType: DirectorySearcher.FindOne
- uid: System.DirectoryServices.DirectorySearcher.PageSize*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
- uid: System.DirectoryServices.DirectorySearcher.Tombstone*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
