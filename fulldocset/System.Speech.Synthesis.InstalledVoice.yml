### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.InstalledVoice
  id: InstalledVoice
  children:
  - System.Speech.Synthesis.InstalledVoice.Enabled
  - System.Speech.Synthesis.InstalledVoice.Equals(System.Object)
  - System.Speech.Synthesis.InstalledVoice.GetHashCode
  - System.Speech.Synthesis.InstalledVoice.VoiceInfo
  langs:
  - csharp
  name: InstalledVoice
  nameWithType: InstalledVoice
  fullName: System.Speech.Synthesis.InstalledVoice
  type: Class
  summary: "Innehåller information om ett tal sammanfattande röst har installerats i Windows."
  remarks: "Använd den här klassen för att få information om en installerade röst, inklusive dess kultur, namn, kön, ålder, och om den är aktiverad.       Att utföra text till tal med det språk som anges i den <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>egenskapen, en sammanfattande tal-motor som stöder språk landskod måste vara installerad.</xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Tal sammanfattande engines som levereras med Microsoft Windows 7 fungerar med följande språk – landskoder:-en-US. Engelska (USA) - zh-CN. Kinesiska (Kina) - zh-TW. Kinesiska (Taiwan) två bokstäver språkkoder, till exempel &quot;SV&quot; får heller."
  example:
  - "The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Output information about all of the installed voices.   \n        Console.WriteLine(\"Installed voices -\");  \n        foreach (InstalledVoice voice in synth.GetInstalledVoices())  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          string AudioFormats = \"\";  \n          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  \n          {  \n            AudioFormats += String.Format(\"{0}\\n\",  \n            fmt.EncodingFormat.ToString());  \n          }  \n  \n          Console.WriteLine(\" Name:          \" + info.Name);  \n          Console.WriteLine(\" Culture:       \" + info.Culture);  \n          Console.WriteLine(\" Age:           \" + info.Age);  \n          Console.WriteLine(\" Gender:        \" + info.Gender);  \n          Console.WriteLine(\" Description:   \" + info.Description);  \n          Console.WriteLine(\" ID:            \" + info.Id);  \n          Console.WriteLine(\" Enabled:       \" + voice.Enabled);  \n          if (info.SupportedAudioFormats.Count != 0)  \n          {  \n            Console.WriteLine( \" Audio formats: \" + AudioFormats);  \n          }  \n          else  \n          {  \n            Console.WriteLine(\" No supported audio formats found\");  \n          }  \n  \n          string AdditionalInfo = \"\";  \n          foreach (string key in info.AdditionalInfo.Keys)  \n          {  \n            AdditionalInfo += String.Format(\"  {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n          }  \n  \n          Console.WriteLine(\" Additional Info - \" + AdditionalInfo);  \n          Console.WriteLine();  \n        }  \n      }  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{VoiceInfo.Name} [{Enabled ? "Enabled" : "Disabled"}]")]

      public class InstalledVoice
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.InstalledVoice.Enabled
  id: Enabled
  parent: System.Speech.Synthesis.InstalledVoice
  langs:
  - csharp
  name: Enabled
  nameWithType: InstalledVoice.Enabled
  fullName: System.Speech.Synthesis.InstalledVoice.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hämtar eller anger om en röst kan användas för att generera tal."
  remarks: "Värdet för egenskapen Enabled är `true` som standard. När ett program anropar <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, metoden kontrollerar att var och en av de röster som påträffas i registret uppfyller vissa angivna krav.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> För varje röst som misslyckas verifiering <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>anger egenskapen Enabled till `false`.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Ett program kan inte välja en röst vars Enabled-egenskap är `false`. Normalt program inte att ange egenskapen för en röst aktiverat."
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "Returnerar en <xref uid=&quot;langword_csharp_bool&quot; name=&quot;bool&quot; href=&quot;&quot;> </xref> som representerar det aktiverade tillståndet för rösten."
  overload: System.Speech.Synthesis.InstalledVoice.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.InstalledVoice.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Speech.Synthesis.InstalledVoice
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: InstalledVoice.Equals(Object)
  fullName: System.Speech.Synthesis.InstalledVoice.Equals(Object)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Anger om ett angivet objekt är en instans av <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref> och det är lika med den aktuella instansen av <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref>."
  remarks: "Metoden returnerar false om den <xref:System.Object>som tillhandahålls av den `obj` argumentet kan inte typkonverteras till <xref:System.Speech.Synthesis.InstalledVoice>.</xref:System.Speech.Synthesis.InstalledVoice> </xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Ett objekt som kan omvandlas till en instans av <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref>."
    return:
      type: System.Boolean
      description: "Returnerar <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om den aktuella instansen av <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref> och som hämtats från den <code> obj </code> argumentet är likvärdiga, annars returnerar <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Synthesis.InstalledVoice.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode
  id: GetHashCode
  parent: System.Speech.Synthesis.InstalledVoice
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: InstalledVoice.GetHashCode()
  fullName: System.Speech.Synthesis.InstalledVoice.GetHashCode()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Innehåller en hashkoden för en `InstalledVoice` objekt."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En hash-koden för aktuellt <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref> objekt."
  overload: System.Speech.Synthesis.InstalledVoice.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo
  id: VoiceInfo
  parent: System.Speech.Synthesis.InstalledVoice
  langs:
  - csharp
  name: VoiceInfo
  nameWithType: InstalledVoice.VoiceInfo
  fullName: System.Speech.Synthesis.InstalledVoice.VoiceInfo
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Hämtar information om en röst, till exempel kultur, namn, kön och ålder."
  syntax:
    content: public System.Speech.Synthesis.VoiceInfo VoiceInfo { get; }
    return:
      type: System.Speech.Synthesis.VoiceInfo
      description: "Information om en installerade röst."
  overload: System.Speech.Synthesis.InstalledVoice.VoiceInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.InstalledVoice.Enabled
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: Enabled
  nameWithType: InstalledVoice.Enabled
  fullName: System.Speech.Synthesis.InstalledVoice.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Synthesis.InstalledVoice.Equals(System.Object)
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: Equals(Object)
  nameWithType: InstalledVoice.Equals(Object)
  fullName: System.Speech.Synthesis.InstalledVoice.Equals(Object)
- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: GetHashCode()
  nameWithType: InstalledVoice.GetHashCode()
  fullName: System.Speech.Synthesis.InstalledVoice.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: VoiceInfo
  nameWithType: InstalledVoice.VoiceInfo
  fullName: System.Speech.Synthesis.InstalledVoice.VoiceInfo
- uid: System.Speech.Synthesis.VoiceInfo
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceInfo
  nameWithType: VoiceInfo
  fullName: System.Speech.Synthesis.VoiceInfo
- uid: System.Speech.Synthesis.InstalledVoice.Enabled*
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: Enabled
  nameWithType: InstalledVoice.Enabled
- uid: System.Speech.Synthesis.InstalledVoice.Equals*
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: Equals
  nameWithType: InstalledVoice.Equals
- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode*
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: GetHashCode
  nameWithType: InstalledVoice.GetHashCode
- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo*
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: VoiceInfo
  nameWithType: InstalledVoice.VoiceInfo
