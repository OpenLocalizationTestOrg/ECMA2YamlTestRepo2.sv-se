### YamlMime:ManagedReference
items:
- uid: System.Web.Security.WindowsTokenRoleProvider
  id: WindowsTokenRoleProvider
  children:
  - System.Web.Security.WindowsTokenRoleProvider.#ctor
  - System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  - System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  - System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider
  fullName: System.Web.Security.WindowsTokenRoleProvider
  type: Class
  summary: "Hämtar rollinformation för ett ASP.NET-program från Windows-gruppmedlemskap."
  remarks: "Klassen WindowsTokenRoleProvider är en skrivskyddad roll-medlemskapsprovider som hämtar rollinformation om för en Windows-användare som är baserade på Windows-säkerhetsgrupper. Det är mest användbart med ASP.NET-program som använder Windows-autentiseringsläge där IIS-autentiseringsinställningarna inaktivera anonym autentisering. Du kan konfigurera ASP.NET-program för att tillåta eller neka åtkomst baserat på en användares medlemskap i en viss Windows-grupp.       Du kan inte använda klassen WindowsTokenRoleProvider för att skapa eller ta bort roller eller ändra medlemskap för en roll som baseras på Windows-gruppmedlemskap. Den här funktionen hanteras av Windows-operativsystemet. Klassen WindowsTokenRoleProvider stöder endast <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>och <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A>metoder för <xref:System.Web.Security.RoleProvider>abstrakt klass.</xref:System.Web.Security.RoleProvider> </xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> </xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>"
  example:
  - "The following example shows the Web.config file for an ASP.NET application. It specifies that the application uses both Windows authentication and the WindowsTokenRoleProvider class to retrieve role information for Windows users. The  element specifies that only users in the BUILTIN\\Administrators group are allowed access to the application.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Windows\" />  \n  \n    <authorization>  \n      <allow roles=\"BUILTIN\\Administrators\" />  \n        <deny users=\"*\" />  \n      </authorization>  \n  \n    <roleManager defaultProvider=\"WindowsProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"false\">  \n      <providers>  \n        <add  \n          name=\"WindowsProvider\"  \n          type=\"System.Web.Security.WindowsTokenRoleProvider\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Skapar en instans av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klass."
  remarks: "Konstruktorn WindowsTokenRoleProvider anropas av ASP.NET för att skapa en instans av den <xref:System.Web.Security.WindowsTokenRoleProvider>klass som anges i konfigurationen för programmet.</xref:System.Web.Security.WindowsTokenRoleProvider> Den här konstruktorn är inte avsedd att användas från din kod."
  syntax:
    content: public WindowsTokenRoleProvider ();
    parameters: []
  overload: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Den här metoden stöds inte av providern för Windows-token roll."
  remarks: "Den här metoden stöds inte av <xref:System.Web.Security.WindowsTokenRoleProvider>klassen och alltid utlöser <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "En strängmatris av användarnamn som ska läggas till de angivna rollerna."
    - id: roleNames
      type: System.String[]
      description: "En strängmatris med rollnamn att lägga till de angivna användarnamn till."
  overload: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En stöds inte metoden anropades."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar eller anger namnet på programmet."
  remarks: "Till skillnad från andra leverantörer av roll som den <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Security.WindowsTokenRoleProvider>klassen inte associera rollinformation med ett program.</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.SqlRoleProvider> I stället hämtas rollen informationen från Windows-grupper på den lokala datorn. Flera program på samma server som använder den <xref:System.Web.Security.WindowsTokenRoleProvider>klassen delar alltid samma rollinformation.</xref:System.Web.Security.WindowsTokenRoleProvider> Även om den `applicationName` kan konfigureras i Web.config-filen för programmet, ApplicationName egenskapen inte används för att hämta rollinformation."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.WindowsTokenRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"WindowsProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"false\">  \n  <providers>  \n    <add  \n      name=\"WindowsProvider\"  \n      type=\"System.Web.Security.WindowsTokenRoleProvider\"   \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Namnet på programmet."
  overload: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Ett försök gjordes att ange egenskapen ApplicationName genom en anropare inte har <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> ASP.NET som är värd för behörighet."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Ett försök gjordes att ange ApplicationName till en sträng som är längre än 256 tecken."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Den här metoden stöds inte av providern för Windows-token roll."
  remarks: "Den här metoden stöds inte av <xref:System.Web.Security.WindowsTokenRoleProvider>klassen och alltid utlöser <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Namnet på rollen du skapar."
  overload: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En stöds inte metoden anropades."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Den här metoden stöds inte av providern för Windows-token roll."
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Namnet på rollen som ska tas bort."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Om <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, genereras ett undantagsfel vid försök att ta bort en roll som innehåller en eller flera medlemmar."
    return:
      type: System.Boolean
      description: "Ingen. Metoden stöds inte av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klass och returnerar alltid en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En stöds inte metoden anropades."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Den här metoden stöds inte av providern för Windows-token roll."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Rollen att söka i."
    - id: usernameToMatch
      type: System.String
      description: "Användarnamnet för att hitta i rollen."
    return:
      type: System.String[]
      description: "Ingen. Metoden stöds inte av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klass och returnerar alltid en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En stöds inte metoden anropades."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Den här metoden stöds inte av providern för Windows-token roll."
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Ingen. Metoden stöds inte av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klass och returnerar alltid en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En stöds inte metoden anropades."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en lista över Windows-grupper som en användare finns i."
  remarks: "Den här metoden anropas av- <xref:System.Web.Security.Roles>klassen för att hämta en lista över Windows-grupper som den angivna användaren är i. från Windows-operativsystem</xref:System.Web.Security.Roles> Metoden GetRolesForUser kan endast anropas för den inloggade användaren, som identifieras av servervariabeln LOGON_USER. Om värdet anges i den `username` parametern är inte namnet på den inloggade användaren, en <xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>genereras.</xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>       Mer information en ASP.NET och Windows-autentisering finns [ASP.NET-autentisering](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the GetRolesForUser method to retrieve a list of roles for a specified user and binds the list of roles to a <xref:System.Web.UI.WebControls.GridView> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.wi_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.wi_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Användaren som returnerar listan över Windows-grupper för i formatet domän\\användarnamn."
    return:
      type: System.String[]
      description: "En strängmatris som innehåller namnen på alla Windows-grupper som den angivna användaren tillhör."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Körs användaren inte har en autentiserad <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> bifogas &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. För icke-HTTP-scenarier körs användaren inte har en autentiserad <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> bifogas &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - eller - <code> username </code> matchar inte den <xref:System.Security.Principal.WindowsIdentity.Name*>aktuella <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>       - eller - ett fel uppstod vid hämtning av information om användarens Windows-grupp."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Förtroendenivå är mindre än <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Den här metoden stöds inte av providern för Windows-token roll."
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Namnet på rollen för att hämta listan över användare för."
    return:
      type: System.String[]
      description: "Ingen. Metoden stöds inte av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klass och returnerar alltid en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En stöds inte metoden anropades."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initierar Windows token rollprovider med egenskapsvärden som angetts i konfigurationsfilen för ASP.NET-program. Den här metoden är inte avsedd att användas direkt från din kod."
  remarks: "Initieringsmetoden initierar den <xref:System.Web.Security.WindowsTokenRoleProvider>klass med värdena som anges i ASP.NET-programmets konfigurationsfil (Web.config) och är inte avsedd att användas direkt från din kod.</xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> instansen initieras."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> konstruktor som innehåller namn och värden för konfiguration av alternativ för den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klass."
  overload: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Den <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> attribut i konfigurationen är längre än 256 tecken.       - eller - programmets konfigurationsfil för denna <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> instans innehåller ett okänt attribut."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  id: IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om den angivna användaren tillhör den angivna inbyggda Windows-rollen."
  remarks: "Metoden IsUserInRole kan du kontrollera om en användare är en av de vanliga Windows-roller som beskrivs av den <xref:System.Security.Principal.WindowsBuiltInRole>uppräkningen.</xref:System.Security.Principal.WindowsBuiltInRole> Den här metoden är användbar för program som är lokaliserade till flera språk. Denna överlagring för metoden IsUserInRole är inte en del av den <xref:System.Web.Security.RoleProvider>basklassen och kan bara användas av kastar den <xref:System.Web.Security.Roles.Provider%2A>egenskapen för den <xref:System.Web.Security.Roles>klassen som den <xref:System.Web.Security.WindowsTokenRoleProvider>typen.</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.RoleProvider>       Du kan anropa metoden IsUserInRole endast för den inloggade användaren, som identifieras av servervariabeln LOGON_USER. Om värdet anges i den `username` parametern är inte namnet på den inloggade användaren, en <xref:System.Web.HttpException>genereras.</xref:System.Web.HttpException>       IsUserInRole-metoden kan endast anropas för den inloggade användare som identifieras av servervariabeln LOGON_USER. Den aktuella inloggade användaren måste vara en Windows-autentiserade användare. Mer information om ASP.NET och Windows-autentisering finns [ASP.NET-autentisering](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/csharp/f88a5130-a7a7-46a8-84f9-_1.aspx)]\n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/visualbasic/f88a5130-a7a7-46a8-84f9-_1.aspx)]"
  syntax:
    content: public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);
    parameters:
    - id: username
      type: System.String
      description: "Användarnamn i formatet domän\\användarnamn."
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: "Rolltjänsten Windows för att söka i."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna användaren tillhör den angivna Windows-rollen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Körs användaren inte har en autentiserad <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> bifogas &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. För icke-HTTP-scenarier körs användaren inte har en autentiserad <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> bifogas &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - eller - <code> username </code> matchar inte den <xref:System.Security.Principal.WindowsIdentity.Name*>aktuella <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om den angivna användaren är i den angivna Windows-gruppen."
  remarks: "IsUserInRole-metoden anropas av den <xref:System.Web.Security.Roles>klass och <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metod för den <xref:System.Web.UI.Page.User%2A>egenskapen för att avgöra om en användare i en Windows-grupp.</xref:System.Web.UI.Page.User%2A> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles> Du kan anropa metoden IsUserInRole endast för den inloggade användaren, som identifieras av servervariabeln LOGON_USER. Den aktuella inloggade användaren måste vara en Windows-autentiserade användare. Mer information om ASP.NET och Windows-autentisering finns [ASP.NET-autentisering](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/e3ad81d7-d695-40b8-8e62-_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/e3ad81d7-d695-40b8-8e62-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Användarnamn i formatet domän\\användarnamn."
    - id: roleName
      type: System.String
      description: "Windows-gruppen att söka i formuläret DOMAIN\\rolename."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna användarnamnet är i den angivna Windows-gruppen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Körs användaren inte har en autentiserad <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> bifogas &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. För icke-HTTP-scenarier körs användaren inte har en autentiserad <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> bifogas &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - eller - <code> username </code> matchar inte den <xref:System.Security.Principal.WindowsIdentity.Name*>aktuella <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>       - eller - ett fel uppstod vid hämtning av information om användarens Windows-grupp."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Den här metoden stöds inte av providern för Windows-token roll."
  remarks: "Den här metoden stöds inte av <xref:System.Web.Security.WindowsTokenRoleProvider>klassen och alltid utlöser <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "En strängmatris av användarnamn som ska läggas till de angivna rollerna."
    - id: roleNames
      type: System.String[]
      description: "En strängmatris med rollnamn att lägga till de angivna användarnamn till."
  overload: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En stöds inte metoden anropades."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Den här metoden stöds inte av providern för Windows-token roll."
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Namnet på rollen att söka efter i datakällan."
    return:
      type: System.Boolean
      description: "Ingen. Metoden stöds inte av den <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> klass och returnerar alltid en <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "En stöds inte metoden anropades."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: WindowsBuiltInRole
  nameWithType: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: WindowsTokenRoleProvider.CreateRole
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: WindowsTokenRoleProvider.DeleteRole
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: WindowsTokenRoleProvider.GetAllRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: WindowsTokenRoleProvider.Initialize
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: WindowsTokenRoleProvider.IsUserInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: WindowsTokenRoleProvider.RoleExists
