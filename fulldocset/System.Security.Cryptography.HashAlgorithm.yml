### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HashAlgorithm
  id: HashAlgorithm
  children:
  - System.Security.Cryptography.HashAlgorithm.#ctor
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.Create
  - System.Security.Cryptography.HashAlgorithm.Create(System.String)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
  type: Class
  summary: "Representerar basklassen algoritmer måste härledas från vilken alla kryptografiska hash-implementeringar."
  remarks: "Hash-funktioner är grundläggande för moderna kryptografi. Dessa funktioner mappa binära strängar med en godtycklig längd till små binära strängar med fast längd, kallas även hash-värden. En kryptografisk hash-funktionen har egenskapen att är det omöjligt att hitta två distinkta indata som hash till samma värde. Hash-funktioner är vanliga med digitala signaturer och dataintegritet.       Hash-algoritmen används som ett unikt värde med fast storlek som representerar en stor mängd data. Hash-värden för två mängder av data ska matcha om också matchar motsvarande data. Små ändringar av data resultera i stor oväntade ändringar i hash-algoritmen."
  example:
  - "The following code example computes the <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> hash for an array. This example assumes that there is a predefined byte array `dataArray[]`. <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> is a derived class of HashAlgorithm.  \n  \n [!code-cs[Classic HashAlgorithm Example#1](~/add/codesnippet/csharp/t-system.security.crypto_106_1.cs)]\n [!code-cpp[Classic HashAlgorithm Example#1](~/add/codesnippet/cpp/t-system.security.crypto_106_1.cpp)]\n [!code-vb[Classic HashAlgorithm Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_106_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HashAlgorithm : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashAlgorithm()
  nameWithType: HashAlgorithm.HashAlgorithm()
  fullName: System.Security.Cryptography.HashAlgorithm.HashAlgorithm()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> klass."
  remarks: "Du kan inte skapa en instans av en abstrakt klass. Programkod som skapar en ny instans av en härledd klass."
  syntax:
    content: protected HashAlgorithm ();
    parameters: []
  overload: System.Security.Cryptography.HashAlgorithm.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
  fullName: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar ett värde som anger om den aktuella transformeringen kan återanvändas."
  syntax:
    content: public virtual bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.HashAlgorithm.CanReuseTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar ett värde som anger om flera block kan omvandlas när åsidosätts i en härledd klass."
  syntax:
    content: public virtual bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om flera block kan omvandlas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Clear
  id: Clear
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Clear()
  nameWithType: HashAlgorithm.Clear()
  fullName: System.Security.Cryptography.HashAlgorithm.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Frigör alla resurser som används av den <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> klass."
  remarks: "Den här metoden är ett enkelt anrop till den <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>metoden.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Anropar `Dispose` tillåter resurserna som används av den <xref:System.Security.Cryptography.HashAlgorithm>klass som ska allokeras för andra ändamål.</xref:System.Security.Cryptography.HashAlgorithm> Mer information om `Dispose`, se [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.HashAlgorithm.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  id: ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: ComputeHash(Byte[])
  nameWithType: HashAlgorithm.ComputeHash(Byte[])
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beräknar hash-värdet för den angivna byte-matrisen."
  remarks: ''
  example:
  - "The following example computes the <xref:System.Security.Cryptography.MD5> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.  \n  \n [!code-vb[Security.Cryptography.MD5#1](~/add/codesnippet/visualbasic/m-system.security.crypto_123_1.vb)]\n [!code-cs[Security.Cryptography.MD5#1](~/add/codesnippet/csharp/m-system.security.crypto_123_1.cs)]"
  syntax:
    content: public byte[] ComputeHash (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Ange att beräkna hash-koden för."
    return:
      type: System.Byte[]
      description: "Den beräknade hash-kod."
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har redan tagits bort."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  id: ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: ComputeHash(Stream)
  nameWithType: HashAlgorithm.ComputeHash(Stream)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beräknar hash-värdet för den angivna <xref:System.IO.Stream>objektet.</xref:System.IO.Stream>"
  remarks: ''
  example:
  - "The following example calculates the <xref:System.Security.Cryptography.RIPEMD160> hash for all files in a directory.  \n  \n [!code-cpp[RIPEMD160#1](~/add/codesnippet/cpp/m-system.security.crypto_23_1.cpp)]\n [!code-vb[RIPEMD160#1](~/add/codesnippet/visualbasic/m-system.security.crypto_23_1.vb)]\n [!code-cs[RIPEMD160#1](~/add/codesnippet/csharp/m-system.security.crypto_23_1.cs)]"
  syntax:
    content: public byte[] ComputeHash (System.IO.Stream inputStream);
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: "Ange att beräkna hash-koden för."
    return:
      type: System.Byte[]
      description: "Den beräknade hash-kod."
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har redan tagits bort."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  id: ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: ComputeHash(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.ComputeHash(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beräknar hash-värdet för den angivna regionen för den angivna byte-matrisen."
  syntax:
    content: public byte[] ComputeHash (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Ange att beräkna hash-koden för."
    - id: offset
      type: System.Int32
      description: "Förskjutningen i Bytematrisen som du vill börja använda data."
    - id: count
      type: System.Int32
      description: "Antal byte i matrisen som ska användas som data."
    return:
      type: System.Byte[]
      description: "Den beräknade hash-kod."
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>är ett ogiltigt värde.       - eller - <code>buffer</code> längd är ogiltig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>ligger utanför intervallet. Den här parametern kräver ett icke-negativt tal."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har redan tagits bort."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Create()
  nameWithType: HashAlgorithm.Create()
  fullName: System.Security.Cryptography.HashAlgorithm.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av standardimplementering av en hash-algoritm."
  remarks: "Som standard använder denna överbelastning av <xref:System.Security.Cryptography.SHA1CryptoServiceProvider>implementeringen av en hash-algoritm.</xref:System.Security.Cryptography.SHA1CryptoServiceProvider> Om du vill ange en annan implementering använder den <xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29>överlagra, kan du ange algoritmnamnet på en i stället.</xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29> Konfigurationssystemet kryptografi definierar standardimplementering av <xref:System.Security.Cryptography.HashAlgorithm>.</xref:System.Security.Cryptography.HashAlgorithm>"
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithm Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: "En ny <xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;> </xref> instansen om standardinställningarna har ändrats med den."
  overload: System.Security.Cryptography.HashAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Create(String)
  nameWithType: HashAlgorithm.Create(String)
  fullName: System.Security.Cryptography.HashAlgorithm.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av den angivna implementeringen av en hash-algoritm."
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithm Create (string hashName);
    parameters:
    - id: hashName
      type: System.String
      description: "Hash-algoritmen implementering ska användas. I följande tabell visas de giltiga värdena för den `hashName` parametern och algoritmer som du kan mappa till.       <table><thead><tr><th> Värdet för parametern       </th><th> Implementerar       </th></tr></thead><tbody><tr><td> SHA       </td><td><xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;></xref></td></tr><tr><td> SHA1       </td><td><xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;></xref></td></tr><tr><td> System.Security.Cryptography.SHA1       </td><td><xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HashAlgorithm       </td><td><xref href=&quot;System.Security.Cryptography.SHA1CryptoServiceProvider&quot;></xref></td></tr><tr><td> MD5       </td><td><xref href=&quot;System.Security.Cryptography.MD5CryptoServiceProvider&quot;></xref></td></tr><tr><td> System.Security.Cryptography.MD5       </td><td><xref href=&quot;System.Security.Cryptography.MD5CryptoServiceProvider&quot;></xref></td></tr><tr><td> SHA256       </td><td><xref href=&quot;System.Security.Cryptography.SHA256Managed&quot;></xref></td></tr><tr><td> SHA-256       </td><td><xref href=&quot;System.Security.Cryptography.SHA256Managed&quot;></xref></td></tr><tr><td> System.Security.Cryptography.SHA256       </td><td><xref href=&quot;System.Security.Cryptography.SHA256Managed&quot;></xref></td></tr><tr><td> SHA384       </td><td><xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;></xref></td></tr><tr><td> SHA-384       </td><td><xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;></xref></td></tr><tr><td> System.Security.Cryptography.SHA384       </td><td><xref href=&quot;System.Security.Cryptography.SHA384Managed&quot;></xref></td></tr><tr><td> SHA512       </td><td><xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;></xref></td></tr><tr><td> SHA-512       </td><td><xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;></xref></td></tr><tr><td> System.Security.Cryptography.SHA512       </td><td><xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;></xref></td></tr></tbody></table>"
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: "En ny instans av den angivna hashalgoritmen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om <code> hashName </code> är inte en giltig hash-algoritm."
  overload: System.Security.Cryptography.HashAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  id: Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Dispose()
  nameWithType: HashAlgorithm.Dispose()
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Frigör alla resurser som används av den aktuella instansen av den <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> klass."
  remarks: "Anropa `Dispose` när du är klar med hjälp av <xref:System.Security.Cryptography.HashAlgorithm>.</xref:System.Security.Cryptography.HashAlgorithm> Den `Dispose` metoden lämnar kvar det <xref:System.Security.Cryptography.HashAlgorithm>oanvändbar.</xref:System.Security.Cryptography.HashAlgorithm> Efter att `Dispose`, måste du släppa alla referenser till den <xref:System.Security.Cryptography.HashAlgorithm>så skräpinsamlingen kan frigöra minne som den <xref:System.Security.Cryptography.HashAlgorithm>var upptar.</xref:System.Security.Cryptography.HashAlgorithm> </xref:System.Security.Cryptography.HashAlgorithm>       Mer information finns i [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md) och [implementera en metod för ta bort](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid anropet `Dispose` innan du släpper senaste referens till <xref:System.Security.Cryptography.HashAlgorithm>.</xref:System.Security.Cryptography.HashAlgorithm> De resurser som den använder frigörs annars inte förrän skräpinsamlingen anrop av <xref:System.Security.Cryptography.HashAlgorithm>objektets `Finalize` metod.</xref:System.Security.Cryptography.HashAlgorithm>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.HashAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> och släpper du de hantera resurserna."
  remarks: "Den här metoden anropas av allmänheten `Dispose()` metod och `Finalize` metod. `Dispose()`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. `Finalize`anropar `Dispose` med `disposing` inställd på `false`.       När den `disposing` parametern är `true`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Security.Cryptography.HashAlgorithm>referenser.</xref:System.Security.Cryptography.HashAlgorithm> Den här metoden startar den `Dispose()` metod för varje refererade till objekt."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.Security.Cryptography.HashAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Hash
  id: Hash
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Hash
  nameWithType: HashAlgorithm.Hash
  fullName: System.Security.Cryptography.HashAlgorithm.Hash
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar värdet för beräknade hash-koden."
  remarks: "Hash-egenskapen är en bytematris; den <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>egenskapen är ett värde som representerar bits.</xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> Antalet element i Hash därför en åttonde storleken på <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>"
  syntax:
    content: public virtual byte[] Hash { get; }
    return:
      type: System.Byte[]
      description: "Det aktuella värdet för beräknade hash-koden."
  overload: System.Security.Cryptography.HashAlgorithm.Hash*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "<xref href=&quot;System.Security.Cryptography.HashAlgorithm.HashValue&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har redan tagits bort."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skickar data som skrivs till objektet i hashalgoritm för att beräkna hash-algoritmen när åsidosätts i en härledd klass."
  remarks: "Den här metoden anropas inte av programkod.       Den här abstrakta metoden utför hash-beräkningen. Varje skrivning till kryptografiska stream-objektet skickar data via den här metoden. För varje datablock uppdaterar tillståndet för hash-objekt av den här metoden så returneras en korrekt hash-värdet i slutet av dataströmmen."
  syntax:
    content: protected abstract void HashCore (byte[] array, int ibStart, int cbSize);
    parameters:
    - id: array
      type: System.Byte[]
      description: "Ange att beräkna hash-koden för."
    - id: ibStart
      type: System.Int32
      description: "Förskjutningen i Bytematrisen som du vill börja använda data."
    - id: cbSize
      type: System.Int32
      description: "Antal byte i byte-matris ska användas som data."
  overload: System.Security.Cryptography.HashAlgorithm.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashFinal()
  nameWithType: HashAlgorithm.HashFinal()
  fullName: System.Security.Cryptography.HashAlgorithm.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "När åsidosätts i en härledd klass Slutför hash-beräkningen efter de senaste data bearbetas av kryptografiska stream-objektet."
  remarks: "Den här metoden Slutför eventuella partiella beräkning och returnerar korrekt hash-värde för dataströmmen."
  syntax:
    content: protected abstract byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Den beräknade hash-kod."
  overload: System.Security.Cryptography.HashAlgorithm.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  id: HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar storleken, i antal bitar beräknade hash-koden."
  syntax:
    content: public virtual int HashSize { get; }
    return:
      type: System.Int32
      description: "Storlek i antal bitar beräknade hash-koden."
  overload: System.Security.Cryptography.HashAlgorithm.HashSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  id: HashSizeValue
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashSizeValue
  nameWithType: HashAlgorithm.HashSizeValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Representerar storlek i antal bitar beräknade hash-koden."
  remarks: "Hash-algoritmen anger storleken på hash-koden. Till exempel <xref:System.Security.Cryptography.SHA1>använder en hash-storlek på 160 bitar.</xref:System.Security.Cryptography.SHA1>       Det här fältet är tillgänglig via den <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>egenskapen.</xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>"
  syntax:
    content: protected int HashSizeValue;
    return:
      type: System.Int32
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.HashValue
  id: HashValue
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: HashValue
  nameWithType: HashAlgorithm.HashValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Representerar värdet för beräknade hash-koden."
  remarks: "Det här fältet är tillgänglig via den <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>egenskapen.</xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>"
  syntax:
    content: protected byte[] HashValue;
    return:
      type: System.Byte[]
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.Initialize
  id: Initialize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: Initialize()
  nameWithType: HashAlgorithm.Initialize()
  fullName: System.Security.Cryptography.HashAlgorithm.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en implementering av den <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> klass."
  syntax:
    content: public abstract void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.HashAlgorithm.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar inkommande blockstorleken när åsidosätts i en härledd klass."
  remarks: "Om det inte åsidosätts returnerar den här egenskapen värdet 1."
  syntax:
    content: public virtual int InputBlockSize { get; }
    return:
      type: System.Int32
      description: "Inkommande blockstorleken."
  overload: System.Security.Cryptography.HashAlgorithm.InputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar blockstorleken utdata när åsidosätts i en härledd klass."
  remarks: "Om det inte åsidosätts returnerar den här egenskapen värdet 1."
  syntax:
    content: public virtual int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: "Blockstorleken utdata."
  overload: System.Security.Cryptography.HashAlgorithm.OutputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.State
  id: State
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: State
  nameWithType: HashAlgorithm.State
  fullName: System.Security.Cryptography.HashAlgorithm.State
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Representerar tillståndet för hash-beräkningen."
  remarks: "Det här fältet används för att hindra användare från att ändra nyckeln för en nycklad hashalgoritm under en hash-åtgärd. När en ändring av nyckeln är giltig, är värdet för det här fältet noll både före och efter en hash-åtgärd. När en ändring av nyckeln inte är giltig, är värdet för det här fältet inte är noll."
  syntax:
    content: protected int State;
    return:
      type: System.Int32
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: HashAlgorithm.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beräknar hash-värdet för den angivna regionen för inkommande byte-matris och kopierar den angivna regionen för inkommande byte-matris till den angivna regionen av utgående byte-matris."
  remarks: "Du måste anropa metoden TransformBlock innan du anropar den <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A>metoden.</xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> Du måste anropa båda metoderna innan du hämtar det sista hash-värdet.       Att hämta sista hash-värdet efter att den <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A>metoden hämta Bytematrisen som ingår i den <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>egenskapen.</xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> </xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A>       TransformBlock-metoden anropas med olika indata och utdata matriser resultat i en <xref:System.IO.IOException>.</xref:System.IO.IOException>"
  example:
  - "The following code examples use the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method with the TransformBlock method to hash a string.  \n  \n [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/add/codesnippet/visualbasic/ecff726a-6c03-4fab-88fc-_1.vb)]\n [!code-cs[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/add/codesnippet/csharp/ecff726a-6c03-4fab-88fc-_1.cs)]"
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "Ange att beräkna hash-koden för."
    - id: inputOffset
      type: System.Int32
      description: "Förskjutning i inkommande byte-matris som du vill börja använda data."
    - id: inputCount
      type: System.Int32
      description: "Antal byte i den inkommande Bytematrisen ska användas som data."
    - id: outputBuffer
      type: System.Byte[]
      description: "En kopia av del av Indatamatrisen som används för att beräkna hash-koden."
    - id: outputOffset
      type: System.Int32
      description: "Förskjutningen i byte-matris för utdata som du vill börja skriva data."
    return:
      type: System.Int32
      description: "Antalet skrivna byte."
  overload: System.Security.Cryptography.HashAlgorithm.TransformBlock*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputCount</code>använder ett ogiltigt värde.       - eller - <code>inputBuffer</code> har en ogiltig längd."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>ligger utanför intervallet. Den här parametern kräver ett icke-negativt tal."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har redan tagits bort."
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Beräknar hash-värdet för den angivna regionen för den angivna byte-matrisen."
  remarks: "Du måste anropa metoden TransformFinalBlock efter att den <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A>metoden men innan du hämtar det sista hash-värdet.</xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A>       Observera att returvärdet för den här metoden inte är det hash-värdet, men endast en kopia av den hashformaterats delen av indata.  Om du vill hämta den slutliga hashvärdet efter att anropa metoden TransformFinalBlock hämta Bytematrisen som ingår i den <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>egenskapen.</xref:System.Security.Cryptography.HashAlgorithm.Hash%2A>"
  example:
  - "The following code examples use the TransformFinalBlock method with the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method to hash a string.  \n  \n [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/add/codesnippet/visualbasic/e884136c-31d4-425b-a9d5-_1.vb)]\n [!code-cs[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/add/codesnippet/csharp/e884136c-31d4-425b-a9d5-_1.cs)]"
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "Ange att beräkna hash-koden för."
    - id: inputOffset
      type: System.Int32
      description: "Förskjutningen i Bytematrisen som du vill börja använda data."
    - id: inputCount
      type: System.Int32
      description: "Antal byte i byte-matris ska användas som data."
    return:
      type: System.Byte[]
      description: "En matris som är en kopia av del av indata som hashas."
  overload: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputCount</code>använder ett ogiltigt värde.       - eller - <code>inputBuffer</code> har en ogiltig förskjutning längd."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>ligger utanför intervallet. Den här parametern kräver ett icke-negativt tal."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har redan tagits bort."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.HashAlgorithm.#ctor
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashAlgorithm()
  nameWithType: HashAlgorithm.HashAlgorithm()
  fullName: System.Security.Cryptography.HashAlgorithm.HashAlgorithm()
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
  fullName: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.HashAlgorithm.Clear
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: HashAlgorithm.Clear()
  fullName: System.Security.Cryptography.HashAlgorithm.Clear()
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Byte[])
  nameWithType: HashAlgorithm.ComputeHash(Byte[])
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Stream)
  nameWithType: HashAlgorithm.ComputeHash(Stream)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.ComputeHash(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.Create
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create()
  nameWithType: HashAlgorithm.Create()
  fullName: System.Security.Cryptography.HashAlgorithm.Create()
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.HashAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create(String)
  nameWithType: HashAlgorithm.Create(String)
  fullName: System.Security.Cryptography.HashAlgorithm.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: HashAlgorithm.Dispose()
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose()
- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose(Boolean)
- uid: System.Security.Cryptography.HashAlgorithm.Hash
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Hash
  nameWithType: HashAlgorithm.Hash
  fullName: System.Security.Cryptography.HashAlgorithm.Hash
- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.HashCore(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashFinal()
  nameWithType: HashAlgorithm.HashFinal()
  fullName: System.Security.Cryptography.HashAlgorithm.HashFinal()
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSizeValue
  nameWithType: HashAlgorithm.HashSizeValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashSizeValue
- uid: System.Security.Cryptography.HashAlgorithm.HashValue
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashValue
  nameWithType: HashAlgorithm.HashValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashValue
- uid: System.Security.Cryptography.HashAlgorithm.Initialize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Initialize()
  nameWithType: HashAlgorithm.Initialize()
  fullName: System.Security.Cryptography.HashAlgorithm.Initialize()
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.InputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.State
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: State
  nameWithType: HashAlgorithm.State
  fullName: System.Security.Cryptography.HashAlgorithm.State
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: HashAlgorithm.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.HashAlgorithm.#ctor*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm.HashAlgorithm
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.HashAlgorithm.Clear*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Clear
  nameWithType: HashAlgorithm.Clear
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
- uid: System.Security.Cryptography.HashAlgorithm.Create*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create
  nameWithType: HashAlgorithm.Create
- uid: System.Security.Cryptography.HashAlgorithm.Dispose*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: HashAlgorithm.Dispose
- uid: System.Security.Cryptography.HashAlgorithm.Hash*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Hash
  nameWithType: HashAlgorithm.Hash
- uid: System.Security.Cryptography.HashAlgorithm.HashCore*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashCore
  nameWithType: HashAlgorithm.HashCore
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashFinal
  nameWithType: HashAlgorithm.HashFinal
- uid: System.Security.Cryptography.HashAlgorithm.HashSize*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
- uid: System.Security.Cryptography.HashAlgorithm.Initialize*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Initialize
  nameWithType: HashAlgorithm.Initialize
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformBlock
  nameWithType: HashAlgorithm.TransformBlock
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformFinalBlock
  nameWithType: HashAlgorithm.TransformFinalBlock
