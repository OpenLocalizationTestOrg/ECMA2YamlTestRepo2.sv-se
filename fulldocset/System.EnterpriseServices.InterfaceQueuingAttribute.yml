### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.InterfaceQueuingAttribute
  id: InterfaceQueuingAttribute
  children:
  - System.EnterpriseServices.InterfaceQueuingAttribute.#ctor
  - System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)
  - System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
  - System.EnterpriseServices.InterfaceQueuingAttribute.Interface
  langs:
  - csharp
  name: InterfaceQueuingAttribute
  nameWithType: InterfaceQueuingAttribute
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute
  type: Class
  summary: "Aktiverar queuing stöd för det markerade gränssnittet. Den här klassen kan inte ärvas."
  remarks: "Anrop i det här gränssnittet ställs i kö med hjälp av Message Queuing.       Om du vill markera ett gränssnitt som placerats i kö, gäller det här attributet för gränssnittet med följande syntax: `[InterfaceQueuing]`.       Metoderna medlemmen på ett gränssnitt för köade måste uppfylla kraven för köade metodanrop, till exempel saknar `out` eller `ref` parametrar.       Mer information om hur du använder attribut finns [attribut](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows how to use the `InterfaceQueuingAttribute` attribute.  \n  \n [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/add/codesnippet/cpp/t-system.enterpriseservi_38_1.cpp)]\n [!code-cs[System.EnterpriseServices.QueuedComponents#2](~/add/codesnippet/csharp/t-system.enterpriseservi_38_1.cs)]  \n  \n The following code example shows how to mark a COM+ application as queued at compile time by using the `ApplicationQueuing` attribute, and enable the COM+ listener by setting the `QueueListenerEnabled` to true  \n  \n [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/add/codesnippet/cpp/t-system.enterpriseservi_38_2.cpp)]\n [!code-cs[System.EnterpriseServices.QueuedComponents#1](~/add/codesnippet/csharp/t-system.enterpriseservi_38_2.cs)]  \n  \n The following code example shows how to use `BindToMoniker` to run the queued moniker, to get an instance of the recorder, call the method that will be recorded, and force the release of the recorder object, to send the message to the queue.  \n  \n [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/add/codesnippet/cpp/t-system.enterpriseservi_38_3.cpp)]\n [!code-cs[System.EnterpriseServices.QueuedComponents#0](~/add/codesnippet/csharp/t-system.enterpriseservi_38_3.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class InterfaceQueuingAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  langs:
  - csharp
  name: InterfaceQueuingAttribute()
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute()
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.EnterpriseServices.InterfaceQueuingAttribute&quot;> </xref> klassen inställningen av <> </> *> och <> </> *> egenskaper till sina standardvärden."
  remarks: "I följande tabell visas första egenskapsvärden för en instans av <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</xref:System.EnterpriseServices.InterfaceQueuingAttribute>      | Egenskapen | Värdet |   |--------------|-----------|   | Aktiverad | `true`|   | Gränssnittet |`null`|"
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  \n  \n [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/cpp/m-system.enterpriseservi_8_1.cpp)]\n [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_8_1.vb)]\n [!code-cs[EnterpriseServicesInterfaceQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_8_1.cs)]"
  syntax:
    content: public InterfaceQueuingAttribute ();
    parameters: []
  overload: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  langs:
  - csharp
  name: InterfaceQueuingAttribute(Boolean)
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.EnterpriseServices.InterfaceQueuingAttribute&quot;> </xref> klass, du kan också inaktivera MSMQ-stöd."
  remarks: ''
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  \n  \n [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/cpp/m-system.enterpriseservi_21_1.cpp)]\n [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/visualbasic/m-system.enterpriseservi_21_1.vb)]\n [!code-cs[EnterpriseServicesInterfaceQueuingAttribute#2](~/add/codesnippet/csharp/m-system.enterpriseservi_21_1.cs)]"
  syntax:
    content: public InterfaceQueuingAttribute (bool enabled);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att aktivera stöd för MSMQ; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
  id: Enabled
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  langs:
  - csharp
  name: Enabled
  nameWithType: InterfaceQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Hämtar eller anger ett värde som anger om MSMQ-stöd är aktiverat."
  remarks: "Den här egenskapen som motsvarar den `Queuing-Enabled` egenskap i COM +."
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om MSMQ-stöd är aktiverat; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface
  id: Interface
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  langs:
  - csharp
  name: Interface
  nameWithType: InterfaceQueuingAttribute.Interface
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Interface
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Hämtar eller anger namnet på gränssnittet där queuing är aktiverat."
  syntax:
    content: public string Interface { get; set; }
    return:
      type: System.String
      description: "Namnet på gränssnittet där queuing är aktiverat."
  overload: System.EnterpriseServices.InterfaceQueuingAttribute.Interface*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: InterfaceQueuingAttribute()
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute()
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute()
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: InterfaceQueuingAttribute(Boolean)
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: InterfaceQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: Interface
  nameWithType: InterfaceQueuingAttribute.Interface
  fullName: System.EnterpriseServices.InterfaceQueuingAttribute.Interface
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.#ctor*
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: InterfaceQueuingAttribute
  nameWithType: InterfaceQueuingAttribute.InterfaceQueuingAttribute
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Enabled*
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: InterfaceQueuingAttribute.Enabled
- uid: System.EnterpriseServices.InterfaceQueuingAttribute.Interface*
  parent: System.EnterpriseServices.InterfaceQueuingAttribute
  isExternal: false
  name: Interface
  nameWithType: InterfaceQueuingAttribute.Interface
