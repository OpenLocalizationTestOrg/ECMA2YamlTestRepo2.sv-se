### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IWindowProvider
  id: IWindowProvider
  children:
  - System.Windows.Automation.Provider.IWindowProvider.Close
  - System.Windows.Automation.Provider.IWindowProvider.InteractionState
  - System.Windows.Automation.Provider.IWindowProvider.IsModal
  - System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  - System.Windows.Automation.Provider.IWindowProvider.Maximizable
  - System.Windows.Automation.Provider.IWindowProvider.Minimizable
  - System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  - System.Windows.Automation.Provider.IWindowProvider.VisualState
  - System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  langs:
  - csharp
  name: IWindowProvider
  nameWithType: IWindowProvider
  fullName: System.Windows.Automation.Provider.IWindowProvider
  type: Interface
  summary: "Exponerar metoder och egenskaper för att stödja en UI Automation klientåtkomst till kontroller som tillhandahåller grundläggande funktioner för Windows-baserad inom traditionell [!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)]."
  remarks: "Implementeras på en UI Automation-provider måste ha stöd för den <xref:System.Windows.Automation.WindowPattern>kontroll mönstret.</xref:System.Windows.Automation.WindowPattern>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("987df77b-db06-4d77-8f8a-86a9c3bb90b9")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IWindowProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Close
  id: Close
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Close()
  nameWithType: IWindowProvider.Close()
  fullName: System.Windows.Automation.Provider.IWindowProvider.Close()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Försök att stänga fönstret."
  remarks: "Stäng måste returnera omedelbart utan att blockera.       Stäng aktiverar den <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent>händelse.</xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent> Om det är möjligt ska händelsen aktiveras när kontrollen har slutförts dess relaterade åtgärder.       När den anropas i en delad fönstret kontroll, kommer den här metoden stänga fönstret och ta bort associerade delningen. Den här metoden kan också stänga alla andra fönster, beroende på implementering."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Automation.Provider.IWindowProvider.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "När kontrollen går inte att utföra den begärda åtgärden."
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "När mål-elementet är inte längre är tillgänglig (till exempel fönstret har stängts)."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  id: InteractionState
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
  fullName: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Hämtar tillståndet interaktion i fönstret."
  syntax:
    content: public System.Windows.Automation.WindowInteractionState InteractionState { get; }
    return:
      type: System.Windows.Automation.WindowInteractionState
      description: "Den <xref href=&quot;System.Windows.Automation.WindowInteractionState&quot;> </xref> för kontrollen."
  overload: System.Windows.Automation.Provider.IWindowProvider.InteractionState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal
  id: IsModal
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: IsModal
  nameWithType: IWindowProvider.IsModal
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsModal
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Hämtar ett värde som anger om fönstret är spärrad."
  syntax:
    content: public bool IsModal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om fönstret är spärrat; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.IWindowProvider.IsModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  id: IsTopmost
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Hämtar ett värde som anger om fönstret är det översta elementet i z-ordning."
  syntax:
    content: public bool IsTopmost { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om fönstret översta; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.IWindowProvider.IsTopmost*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  id: Maximizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Hämtar ett värde som anger om fönstret maximerat."
  syntax:
    content: public bool Maximizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om fönstret kan maximerat; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.IWindowProvider.Maximizable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  id: Minimizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Hämtar ett värde som anger om fönstret kan minimeras."
  syntax:
    content: public bool Minimizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om fönstret minimeras; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.IWindowProvider.Minimizable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  id: SetVisualState(System.Windows.Automation.WindowVisualState)
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: SetVisualState(WindowVisualState)
  nameWithType: IWindowProvider.SetVisualState(WindowVisualState)
  fullName: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(WindowVisualState)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Ändrar visuella tillstånd i fönstret. Till exempel minimerar eller maximerar den."
  syntax:
    content: public void SetVisualState (System.Windows.Automation.WindowVisualState state);
    parameters:
    - id: state
      type: System.Windows.Automation.WindowVisualState
      description: "Det begärda visuella tillståndet i fönstret."
  overload: System.Windows.Automation.Provider.IWindowProvider.SetVisualState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "När kontrollen har inte stöd efterfrågat beteende."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState
  id: VisualState
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: VisualState
  nameWithType: IWindowProvider.VisualState
  fullName: System.Windows.Automation.Provider.IWindowProvider.VisualState
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Hämtar fönstret visuella tillstånd."
  syntax:
    content: public System.Windows.Automation.WindowVisualState VisualState { get; }
    return:
      type: System.Windows.Automation.WindowVisualState
      description: "Fönstret visuella tillstånd."
  overload: System.Windows.Automation.Provider.IWindowProvider.VisualState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  id: WaitForInputIdle(System.Int32)
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: WaitForInputIdle(Int32)
  nameWithType: IWindowProvider.WaitForInputIdle(Int32)
  fullName: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Gör att blockera för den angivna tiden eller tills den associerade processen blir inaktiv, beroende på vad som har slutfört först anropa koden."
  remarks: "Den här metoden används normalt tillsammans med hantering av <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.</xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>       Genomförandet är beroende av underliggande application framework; Därför kan den här metoden returnerar tid när fönstret är klar för indata från användaren. Den anropande koden bör inte förlita dig på den här metoden att veta exakt när fönstret har blivit inaktiv."
  syntax:
    content: public bool WaitForInputIdle (int milliseconds);
    parameters:
    - id: milliseconds
      type: System.Int32
      description: "Hur lång tid i millisekunder för att vänta tills den associerade processen ska bli inaktiv. Det maximala antalet är <xref:System.Int32>.</xref:System.Int32>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om fönstret har försatts i viloläge; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om timeout uppstod."
  overload: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "När parametern som skickades är inte ett giltigt tal."
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotAvailableException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotAvailableException
  nameWithType: ElementNotAvailableException
  fullName: System.Windows.Automation.ElementNotAvailableException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.Provider.IWindowProvider.Close
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Close()
  nameWithType: IWindowProvider.Close()
  fullName: System.Windows.Automation.Provider.IWindowProvider.Close()
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
  fullName: System.Windows.Automation.Provider.IWindowProvider.InteractionState
- uid: System.Windows.Automation.WindowInteractionState
  parent: System.Windows.Automation
  isExternal: false
  name: WindowInteractionState
  nameWithType: WindowInteractionState
  fullName: System.Windows.Automation.WindowInteractionState
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsModal
  nameWithType: IWindowProvider.IsModal
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsModal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Maximizable
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Minimizable
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: SetVisualState(WindowVisualState)
  nameWithType: IWindowProvider.SetVisualState(WindowVisualState)
  fullName: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(WindowVisualState)
- uid: System.Windows.Automation.WindowVisualState
  parent: System.Windows.Automation
  isExternal: false
  name: WindowVisualState
  nameWithType: WindowVisualState
  fullName: System.Windows.Automation.WindowVisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: VisualState
  nameWithType: IWindowProvider.VisualState
  fullName: System.Windows.Automation.Provider.IWindowProvider.VisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: WaitForInputIdle(Int32)
  nameWithType: IWindowProvider.WaitForInputIdle(Int32)
  fullName: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.Provider.IWindowProvider.Close*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Close
  nameWithType: IWindowProvider.Close
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsModal
  nameWithType: IWindowProvider.IsModal
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: SetVisualState
  nameWithType: IWindowProvider.SetVisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: VisualState
  nameWithType: IWindowProvider.VisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: WaitForInputIdle
  nameWithType: IWindowProvider.WaitForInputIdle
