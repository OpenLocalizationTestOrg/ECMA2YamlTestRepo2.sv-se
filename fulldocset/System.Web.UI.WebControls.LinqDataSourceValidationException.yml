### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  id: LinqDataSourceValidationException
  children:
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  langs:
  - csharp
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
  type: Class
  summary: "Beskriver ett undantag som uppstod under validering av nya eller ändrade värden innan värden infogas, uppdateras eller tas bort av en <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> kontroll."
  remarks: "Klassen LinqDataSourceValidationException innehåller typkonvertering och egenskapen set undantag. Alla undantag som utlöses vid verifiering av finns i den <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>samling.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> Du kan hämta varje validering undantag genom att gå igenom den <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>samling.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>       Du vanligtvis hantera undantag i den <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, och <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>händelser.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting> </xref:System.Web.UI.WebControls.LinqDataSource.Deleting> </xref:System.Web.UI.WebControls.LinqDataSource.Updating> Om en verifiering undantag, den `Exception` -egenskapen för den <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, eller <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>objektet innehåller ett LinqDataSourceValidationException-objekt.</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Om inga undantagsfel utlöses den `Exception` -egenskapen innehåller `null`.       Skapa en hanterare för att hantera verifiering undantag i <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, eller <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>händelse.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting> </xref:System.Web.UI.WebControls.LinqDataSource.Deleting> </xref:System.Web.UI.WebControls.LinqDataSource.Updating> I händelsehanteraren, kontrollera om den `Exception` -egenskapen för klassen event argumentet innehåller ett värde annat än `null`. Om den `Exception` egenskapen inte är null, en eller flera validering undantag utlöstes och du kan hämta varje validering undantag i den <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>egenskapen.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>       Ett undantag för verifiering kan inträffa om ett värde inte matchar typen för egenskapen. Till exempel gör försöker uppdatera heltalsegenskap med hjälp av icke-numeriska tecken ett undantag för verifiering. Ett LINQ to SQL-klassen kan också innehålla anpassade verifieringsvillkor kontrollerar du att egenskapen innehåller ett värde som ligger inom ett förväntat intervall eller ett mönster."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: 'public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException'
  inheritance:
  - System.Exception
  implements:
  - System.Web.DynamicData.IDynamicValidatorException
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException()
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException()
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> klass med ett meddelande som beskriver fel som tillhandahålls av systemet."
  remarks: "Meddelandet tillhandahålls av systemet som beskriver felet tar hänsyn till den aktuella systemkulturen.       I följande tabell visas de inledande egenskapsvärdena för en instans av <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>klassen.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException>      | Egenskapen | Värdet |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| En som tillhandahålls av systemet lokaliserad beskrivning. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public LinqDataSourceValidationException ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> klass med ett angivet meddelande som beskriver felet."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för en instans av <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>klassen.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException>      | Egenskapen | Värdet |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| Fel Meddelandesträngen som anges i `message`. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public LinqDataSourceValidationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Det meddelande som beskriver felet."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> klass med serialiserade data."
  remarks: "Den här konstruktorn anropas under deserialisering till att fylla Undantagsobjektet som överförs via en dataström."
  syntax:
    content: protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Det objekt som innehåller objektdata som serialiserade."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontextinformation om käll- och målservrar."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> klass med ett angivet meddelande som beskriver det och en samling med referenser till inre undantag."
  syntax:
    content: public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary<string,Exception> innerExceptions);
    parameters:
    - id: message
      type: System.String
      description: "Det meddelande som beskriver felet."
    - id: innerExceptions
      type: System.Collections.Generic.IDictionary{System.String,System.Exception}
      description: "Mängden med undantag för verifiering."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String,Exception)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> klass med ett angivet meddelande och en referens till det interna undantaget."
  remarks: "Du normalt inte använder den här konstruktorn eftersom verifieringen undantag lagras i den <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>egenskapen inte den <xref:System.Exception.InnerException%2A>egenskapen.</xref:System.Exception.InnerException%2A> </xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>"
  syntax:
    content: public LinqDataSourceValidationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Det meddelande som beskriver felet."
    - id: innerException
      type: System.Exception
      description: "Undantag som är orsaken till det aktuella undantaget."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Hämtar information om undantaget och lägger till den till den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt."
  remarks: "Metoden GetObjectData lägger till information om undantag till den <xref:System.Runtime.Serialization.SerializationInfo>objekt som är avsett för serialisering.</xref:System.Runtime.Serialization.SerializationInfo> Vid deserialisering, undantaget är färdigställts från den <xref:System.Runtime.Serialization.SerializationInfo>som överförs dataströmmen.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Det objekt som innehåller det serialiserade objektdata för undantaget som genereras."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontextinformation om käll- och målservrar."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  id: InnerExceptions
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Hämtar en eller flera undantag som uppstod när nya eller ändrade data verifierades."
  remarks: "InnerExceptions samlingen innehåller alla vilka verifieringen undantag utlöstes under dataverifieringen innan en uppdatering infoga eller ta bort igen. Ett undantag för verifiering kan inträffa om ett värde inte matchar typen för egenskapen. Till exempel om du försöker uppdatera heltalsegenskap genom att använda icke-numeriska tecken, undantag en verifiering. Ett LINQ to SQL-klassen kan också innehålla anpassade verifieringsvillkor kontrollerar du att egenskapen innehåller ett värde som ligger inom ett förväntat intervall eller ett mönster."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n                In e.Exception.InnerExceptions  \n          Label1.Text &= innerException.Key & \": \" & _   \n                  innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)   \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n            e.Exception.InnerExceptions)  \n        {  \n            Label1.Text += innerException.Key + \": \" +   \n                innerException.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Exception> InnerExceptions { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Exception}
      description: "En samling som innehåller undantagen."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException()
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException()
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException()
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Exception}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Exception>
  nameWithType: IDictionary<String,Exception>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Exception>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Exception>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String,Exception)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: GetObjectData
  nameWithType: LinqDataSourceValidationException.GetObjectData
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
