### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Construction.ProjectElementContainer
  id: ProjectElementContainer
  children:
  - Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  - Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.Children
  - Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  - Microsoft.Build.Construction.ProjectElementContainer.Count
  - Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  - Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.LastChild
  - Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren
  - Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)
  langs:
  - csharp
  name: ProjectElementContainer
  nameWithType: ProjectElementContainer
  fullName: Microsoft.Build.Construction.ProjectElementContainer
  type: Class
  summary: "Innehåller en för abstrakt behållarklass för projektelement."
  syntax:
    content: 'public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement'
  inheritance:
  - System.Object
  - Microsoft.Build.Construction.ProjectElement
  implements: []
  inheritedMembers:
  - Microsoft.Build.Construction.ProjectElement.AllParents
  - Microsoft.Build.Construction.ProjectElement.Condition
  - Microsoft.Build.Construction.ProjectElement.ConditionLocation
  - Microsoft.Build.Construction.ProjectElement.ContainingProject
  - Microsoft.Build.Construction.ProjectElement.Label
  - Microsoft.Build.Construction.ProjectElement.LabelLocation
  - Microsoft.Build.Construction.ProjectElement.Location
  - Microsoft.Build.Construction.ProjectElement.NextSibling
  - Microsoft.Build.Construction.ProjectElement.Parent
  - Microsoft.Build.Construction.ProjectElement.PreviousSibling
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  id: AllChildren
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: AllChildren
  nameWithType: ProjectElementContainer.AllChildren
  fullName: Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Hämtar en rekursiv djup första uppräknare över alla underordnade element."
  remarks: "Rekursion är möjligt eftersom projektet elementbehållarna kan innehålla underordnade som själva elementbehållarna för projektet."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement> AllChildren { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}
      description: "Returnerar en rekursiv djup första uppräknare över alla underordnade element."
  overload: Microsoft.Build.Construction.ProjectElementContainer.AllChildren*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)
  id: AppendChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: AppendChild(ProjectElement)
  nameWithType: ProjectElementContainer.AppendChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Lägger till den <code> child </code> element som det här projektet behållaren sista underordnade."
  remarks: "Genereras ett undantag om det här projektet behållaren inte är överordnad, eller om den `child` elementet är redan överordnad, eller om den `child` element har skapats av en annan <xref:Microsoft.Build.Construction.ProjectRootElement>.</xref:Microsoft.Build.Construction.ProjectRootElement>"
  syntax:
    content: public void AppendChild (Microsoft.Build.Construction.ProjectElement child);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "Projektelement som ska läggas till."
  overload: Microsoft.Build.Construction.ProjectElementContainer.AppendChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.Children
  id: Children
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: Children
  nameWithType: ProjectElementContainer.Children
  fullName: Microsoft.Build.Construction.ProjectElementContainer.Children
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Hämtar alla underordnade element."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement> Children { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}
      description: "Returnerar alla underordnade element."
  overload: Microsoft.Build.Construction.ProjectElementContainer.Children*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  id: ChildrenReversed
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: ChildrenReversed
  nameWithType: ProjectElementContainer.ChildrenReversed
  fullName: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Hämtar alla underordnade element från det sista underordnat."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement> ChildrenReversed { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}
      description: "Returnerar alla underordnade element från det sista underordnat."
  overload: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.Count
  id: Count
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: Count
  nameWithType: ProjectElementContainer.Count
  fullName: Microsoft.Build.Construction.ProjectElementContainer.Count
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Hämtar antalet underordnade element."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Returnerar antalet underordnade element."
  overload: Microsoft.Build.Construction.ProjectElementContainer.Count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  id: FirstChild
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: FirstChild
  nameWithType: ProjectElementContainer.FirstChild
  fullName: Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Hämtar det första underordnade elementet."
  remarks: "Använd <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>att initiera den här egenskapen.</xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>"
  syntax:
    content: public Microsoft.Build.Construction.ProjectElement FirstChild { get; }
    return:
      type: Microsoft.Build.Construction.ProjectElement
      description: "Returnerar det första underordnade elementet. Returnerar null om det inte finns några underordnade element."
  overload: Microsoft.Build.Construction.ProjectElementContainer.FirstChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  id: InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: InsertAfterChild(ProjectElement,ProjectElement)
  nameWithType: ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Infogar den <code> child </code> element efter den <code> reference </code> element."
  remarks: "Om den `reference` element är null, motsvarar den här metoden <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>       Genereras ett undantag om det här projektet behållaren inte är överordnad, eller om den `child` elementet är redan överordnad, eller om den `child` element har skapats av en annan <xref:Microsoft.Build.Construction.ProjectRootElement>, eller om den `reference` elementet är inte underordnat det här projektet behållaren.</xref:Microsoft.Build.Construction.ProjectRootElement>"
  syntax:
    content: public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "Projektelement som ska infogas."
    - id: reference
      type: Microsoft.Build.Construction.ProjectElement
      description: "Projektelement som ska infogas efter."
  overload: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  id: InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: InsertBeforeChild(ProjectElement,ProjectElement)
  nameWithType: ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Infogar den <code> child </code> elementet innan den <code> reference </code> element."
  remarks: "Om den `reference` element är null, motsvarar den här metoden <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>       Genereras ett undantag om det här projektet behållaren inte är överordnad, eller om den `child` elementet är redan överordnad, eller om den `child` element har skapats av en annan <xref:Microsoft.Build.Construction.ProjectRootElement>, eller om den `reference` elementet är inte underordnat det här projektet behållaren.</xref:Microsoft.Build.Construction.ProjectRootElement>"
  syntax:
    content: public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "Projektelement som ska infogas."
    - id: reference
      type: Microsoft.Build.Construction.ProjectElement
      description: "Elementet som ska infogas innan projektet."
  overload: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild
  id: LastChild
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: LastChild
  nameWithType: ProjectElementContainer.LastChild
  fullName: Microsoft.Build.Construction.ProjectElementContainer.LastChild
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Hämtar det sista underordnade elementet."
  remarks: "Använd <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>att initiera den här egenskapen.</xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>"
  syntax:
    content: public Microsoft.Build.Construction.ProjectElement LastChild { get; }
    return:
      type: Microsoft.Build.Construction.ProjectElement
      description: "Returnerar det sista underordnade elementet. Returnerar null om det inte finns några underordnade element."
  overload: Microsoft.Build.Construction.ProjectElementContainer.LastChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)
  id: PrependChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: PrependChild(ProjectElement)
  nameWithType: ProjectElementContainer.PrependChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Läggs den <code> child </code> element som det första underordnat för det här projektet behållare."
  remarks: "Genereras ett undantag om det här projektet behållaren inte är överordnad, eller om den `child` elementet är redan överordnad, eller om den `child` element har skapats av en annan <xref:Microsoft.Build.Construction.ProjectRootElement>.</xref:Microsoft.Build.Construction.ProjectRootElement>"
  syntax:
    content: public void PrependChild (Microsoft.Build.Construction.ProjectElement child);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "Elementet projektet till att inledd."
  overload: Microsoft.Build.Construction.ProjectElementContainer.PrependChild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren
  id: RemoveAllChildren
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: RemoveAllChildren()
  nameWithType: ProjectElementContainer.RemoveAllChildren()
  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Tar bort alla underordnade från det här projektet behållaren."
  remarks: "Du kan ändra barn i det här sättet under uppräkning."
  syntax:
    content: public void RemoveAllChildren ();
    parameters: []
  overload: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)
  id: RemoveChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  langs:
  - csharp
  name: RemoveChild(ProjectElement)
  nameWithType: ProjectElementContainer.RemoveChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(ProjectElement)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Tar bort en <code> child </code> element från den här behållaren för projektet."
  remarks: "Genereras ett undantag om det underordnade elementet inte är överordnad för närvarande av den här behållaren för projektet. Det är säkert att ta bort ett underordnat det här sättet under uppräkning."
  syntax:
    content: public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);
    parameters:
    - id: child
      type: Microsoft.Build.Construction.ProjectElement
      description: "Projektelement som ska tas bort."
  overload: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Microsoft.Build.Construction.ProjectElement
- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: AllChildren
  nameWithType: ProjectElementContainer.AllChildren
  fullName: Microsoft.Build.Construction.ProjectElementContainer.AllChildren
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectElement>
  nameWithType: IEnumerable<ProjectElement>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Construction.ProjectElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Construction.ProjectElement
    name: ProjectElement
    nameWithType: ProjectElement
    fullName: ProjectElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: AppendChild(ProjectElement)
  nameWithType: ProjectElementContainer.AppendChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.Children
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Children
  nameWithType: ProjectElementContainer.Children
  fullName: Microsoft.Build.Construction.ProjectElementContainer.Children
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectElement>
  nameWithType: ICollection<ProjectElement>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Construction.ProjectElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Construction.ProjectElement
    name: ProjectElement
    nameWithType: ProjectElement
    fullName: ProjectElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: ChildrenReversed
  nameWithType: ProjectElementContainer.ChildrenReversed
  fullName: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
- uid: Microsoft.Build.Construction.ProjectElementContainer.Count
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Count
  nameWithType: ProjectElementContainer.Count
  fullName: Microsoft.Build.Construction.ProjectElementContainer.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: FirstChild
  nameWithType: ProjectElementContainer.FirstChild
  fullName: Microsoft.Build.Construction.ProjectElementContainer.FirstChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: InsertAfterChild(ProjectElement,ProjectElement)
  nameWithType: ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: InsertBeforeChild(ProjectElement,ProjectElement)
  nameWithType: ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: LastChild
  nameWithType: ProjectElementContainer.LastChild
  fullName: Microsoft.Build.Construction.ProjectElementContainer.LastChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: PrependChild(ProjectElement)
  nameWithType: ProjectElementContainer.PrependChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: RemoveAllChildren()
  nameWithType: ProjectElementContainer.RemoveAllChildren()
  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren()
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: RemoveChild(ProjectElement)
  nameWithType: ProjectElementContainer.RemoveChild(ProjectElement)
  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(ProjectElement)
- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: AllChildren
  nameWithType: ProjectElementContainer.AllChildren
- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: AppendChild
  nameWithType: ProjectElementContainer.AppendChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.Children*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Children
  nameWithType: ProjectElementContainer.Children
- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: ChildrenReversed
  nameWithType: ProjectElementContainer.ChildrenReversed
- uid: Microsoft.Build.Construction.ProjectElementContainer.Count*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Count
  nameWithType: ProjectElementContainer.Count
- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: FirstChild
  nameWithType: ProjectElementContainer.FirstChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: InsertAfterChild
  nameWithType: ProjectElementContainer.InsertAfterChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: InsertBeforeChild
  nameWithType: ProjectElementContainer.InsertBeforeChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: LastChild
  nameWithType: ProjectElementContainer.LastChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: PrependChild
  nameWithType: ProjectElementContainer.PrependChild
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: RemoveAllChildren
  nameWithType: ProjectElementContainer.RemoveAllChildren
- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild*
  parent: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: RemoveChild
  nameWithType: ProjectElementContainer.RemoveChild
